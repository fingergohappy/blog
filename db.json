{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-aurora/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-16x16.png","path":"icons/favicon-16x16.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-32x32.png","path":"icons/favicon-32x32.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/886a749e.css","path":"static/886a749e.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/3e25f349.css","path":"static/css/3e25f349.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/6b275704.css","path":"static/css/6b275704.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/882f9706.css","path":"static/css/882f9706.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/8e0e69c4.css","path":"static/css/8e0e69c4.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/9a0271b0.css","path":"static/css/9a0271b0.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/d5346b99.css","path":"static/css/d5346b99.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/img/dccf965f.jpg","path":"static/img/dccf965f.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/14c27e7f.js","path":"static/js/14c27e7f.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/3173cc68.js","path":"static/js/3173cc68.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/36e11c4e.js","path":"static/js/36e11c4e.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/6192457a.js","path":"static/js/6192457a.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/66095462.js","path":"static/js/66095462.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/6882e76f.js","path":"static/js/6882e76f.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/6b5ea7c3.js","path":"static/js/6b5ea7c3.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/8a24213b.js","path":"static/js/8a24213b.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/a4735ecc.js","path":"static/js/a4735ecc.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/a565698a.js","path":"static/js/a565698a.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/ac07fd23.js","path":"static/js/ac07fd23.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/d7132a0e.js","path":"static/js/d7132a0e.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/f22da37a.js","path":"static/js/f22da37a.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/fce95c39.js","path":"static/js/fce95c39.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/fe2d0558.js","path":"static/js/fe2d0558.js","modified":0,"renderable":1},{"_id":"source/assets/images/favicon.ico","path":"assets/images/favicon.ico","modified":0,"renderable":0},{"_id":"source/assets/images/logo.jpg","path":"assets/images/logo.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"3cd5a2e3142d9238b8ba1cf5f32b5d8a4757b1b0","modified":1695475149816},{"_id":"source/_drafts/write-plan.md","hash":"570ea8e09ebf6d0ad97079f1764bba64c10f2eb5","modified":1697557646111},{"_id":"source/_posts/.DS_Store","hash":"375ec0530607b6431b76f20e263d19cfa31c10d5","modified":1695475152796},{"_id":"source/_posts/intellij-idea-config-vim.md","hash":"256ccba4163f2a7e2d797f00e7bdb2b5a2d3f90d","modified":1695475686586},{"_id":"source/assets/.DS_Store","hash":"f3c296fc0a91b0541555be5816a1ec17c4b38041","modified":1695026367786},{"_id":"source/_posts/terminal-shortcuts.md","hash":"2350becf46d85a2c02e428fa5b430d65fda66621","modified":1697549012260},{"_id":"source/_posts/hexo-auto-deploy.md","hash":"9bcd430c68649502d2edfec08bd3f959cc3783e5","modified":1695308244942},{"_id":"source/_posts/macos-vim-auto-change-input-method.md","hash":"a172936332d1033d26d19ef7202468b6b21cfd19","modified":1695308196885},{"_id":"source/_posts/java-byte-convert-string-not-equal.md","hash":"15e29cf24efd0d538952f2439cb11f3b289a2657","modified":1695308553361},{"_id":"source/assets/images/favicon.ico","hash":"720f390d0ac84ba77021bfc8d0bc677913ba4cfe","modified":1695081084000},{"_id":"source/_posts/vscode-neovim-plugin.md","hash":"cc5b255e9e0b694df3212fc764eb9084f4d7c87f","modified":1695476126957},{"_id":"source/links/index.md","hash":"ff42e4180282e9d98d81b59ef264de217c3ca8e0","modified":1695202158345},{"_id":"source/about/index.md","hash":"27985f63661dc991dc66a791b38ff3a3f8c4ccac","modified":1697556239284},{"_id":"source/assets/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1695026384793},{"_id":"source/_posts/intellij-idea-config-vim/easy-motion.gif","hash":"c86a3cc0551319be68db4bbf6d5b001a93ccac26","modified":1695470946400},{"_id":"source/_posts/vscode-neovim-plugin/easy-motion.gif","hash":"c86a3cc0551319be68db4bbf6d5b001a93ccac26","modified":1695470946400},{"_id":"node_modules/hexo-theme-aurora/LICENSE","hash":"21cf269018b0cf04e1126b6b9b1a5e6af7c5e61f","modified":1695651937884},{"_id":"node_modules/hexo-theme-aurora/README.md","hash":"8b5aea1bd91a6428040ec154ef313d20129fd1ce","modified":1695651937895},{"_id":"node_modules/hexo-theme-aurora/package.json","hash":"c35a0038f242e76de4928275fa908336a37343f5","modified":1695651937895},{"_id":"node_modules/hexo-theme-aurora/layout/index.ejs","hash":"2d65963b01de55c922399bb0029838bebd79a212","modified":1695651937887},{"_id":"node_modules/hexo-theme-aurora/public/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1695651937888},{"_id":"node_modules/hexo-theme-aurora/source/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1695651937888},{"_id":"node_modules/hexo-theme-aurora/public/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1695651937896},{"_id":"node_modules/hexo-theme-aurora/public/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1695651937896},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1695651937896},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1695651937896},{"_id":"node_modules/hexo-theme-aurora/source/static/886a749e.css","hash":"46ef385b52d11142f603d0916042be66e4e04b46","modified":1695651937886},{"_id":"node_modules/hexo-theme-aurora/source/static/css/3e25f349.css","hash":"2859941dbaabcdf25bfb6379a0efaf6b02b45971","modified":1695651937884},{"_id":"node_modules/hexo-theme-aurora/source/static/css/6b275704.css","hash":"b04a2cd1a356e16cded5392bad271ce2f5b1c455","modified":1695651937885},{"_id":"node_modules/hexo-theme-aurora/source/static/css/882f9706.css","hash":"156eb90b06b5f6f6f0bf24973874ecd85906f8fd","modified":1695651937885},{"_id":"node_modules/hexo-theme-aurora/source/static/css/8e0e69c4.css","hash":"5e2ac4baf9923ea59d1dbddccb44a0e4ffbdc87f","modified":1695651937886},{"_id":"node_modules/hexo-theme-aurora/source/static/css/9a0271b0.css","hash":"140052b8339ae6633bfdb6544050ba97c72ee630","modified":1695651937886},{"_id":"node_modules/hexo-theme-aurora/source/static/img/dccf965f.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1695651937888},{"_id":"node_modules/hexo-theme-aurora/source/static/js/3173cc68.js","hash":"9e80f2913c310b35a5aa1e34c23fc8780ab07dc3","modified":1695651937890},{"_id":"node_modules/hexo-theme-aurora/source/static/js/36e11c4e.js","hash":"a65a6cd48caf309d84b71afb4ec04908bcdf0982","modified":1695651937890},{"_id":"node_modules/hexo-theme-aurora/source/static/js/6192457a.js","hash":"b915bbe2f59e41da1ffeb360f7fa391603fd8a14","modified":1695651937890},{"_id":"node_modules/hexo-theme-aurora/source/static/js/66095462.js","hash":"0681446c7e5a6acbafa0732c880ef810f61f6ed9","modified":1695651937891},{"_id":"node_modules/hexo-theme-aurora/source/static/js/6882e76f.js","hash":"15708f336370cd732047a9259308dd2fb0d4b922","modified":1695651937891},{"_id":"node_modules/hexo-theme-aurora/source/static/js/6b5ea7c3.js","hash":"569d179746ac384f6ebb6d625d83c13f066975d9","modified":1695651937891},{"_id":"node_modules/hexo-theme-aurora/source/static/js/8a24213b.js","hash":"18cfce45bfd072f18e5db8b04029a7dfb3a4146b","modified":1695651937892},{"_id":"node_modules/hexo-theme-aurora/source/static/js/a4735ecc.js","hash":"5fd548128217bc41586ef614124056a3e3b8122f","modified":1695651937892},{"_id":"node_modules/hexo-theme-aurora/source/static/js/a565698a.js","hash":"3c76e1cc627b5ad242007e047e139053114e750f","modified":1695651937892},{"_id":"node_modules/hexo-theme-aurora/source/static/js/ac07fd23.js","hash":"96ac046e59c97dd02094cdfb56686d7c9dd42529","modified":1695651937893},{"_id":"node_modules/hexo-theme-aurora/source/static/js/d7132a0e.js","hash":"e7c9669a2ccfc796598f1744bfcdb68e8f562bac","modified":1695651937893},{"_id":"node_modules/hexo-theme-aurora/source/static/js/f22da37a.js","hash":"a12fc8e5143db0a0bb648f49c95c06144f1c472b","modified":1695651937894},{"_id":"node_modules/hexo-theme-aurora/source/static/js/fce95c39.js","hash":"e0ea45559a960c44345017936959b70b4f3c52d4","modified":1695651937894},{"_id":"node_modules/hexo-theme-aurora/source/static/js/fe2d0558.js","hash":"b5374ef4cbd5d8a6e441ba59eb14fd88501b61b4","modified":1695651937894},{"_id":"node_modules/hexo-theme-aurora/source/static/css/d5346b99.css","hash":"214a606da4fe89755b07f70a07b9f46d9af8dc01","modified":1695651937887},{"_id":"node_modules/hexo-theme-aurora/source/static/js/14c27e7f.js","hash":"eef41805e3017ef0df4d0c72ef1731e10e534379","modified":1695651937889},{"_id":"source/_posts/intellij-idea-config-vim/track_action_dark.gif","hash":"a1b9d3453a805abfa6a1da45ceddaabaababca96","modified":1695374355040},{"_id":"source/assets/images/logo.jpg","hash":"013528dbadfe2852d42acd66b13a8b933a67080f","modified":1695026344444},{"_id":"source/_posts/vscode-neovim-plugin/flash-demo.gif","hash":"ed53c43be15a5fd33d01a4d1fbb2543104ac526c","modified":1695475054283},{"_id":"public/api/posts/1.json","hash":"e716fb856e12a2fb972ba5e6c22e55b510bed7e0","modified":1703248322980},{"_id":"public/api/archives/1.json","hash":"e716fb856e12a2fb972ba5e6c22e55b510bed7e0","modified":1703248322980},{"_id":"public/api/articles/terminal-shortcuts.json","hash":"581c5008c2d292ba85d891b876da4353407519e2","modified":1699688933998},{"_id":"public/api/articles/vscode-neovim-plugin.json","hash":"267fd9d57e09516062d6208e0a99ee9bb275ae6a","modified":1697549023137},{"_id":"public/api/articles/intellij-idea-config-vim.json","hash":"62a922ce620f17f1b246ff230127d4fffcc718a5","modified":1697549023137},{"_id":"public/api/articles/java-byte-convert-string-not-equal.json","hash":"4673fea2b75ab449b24c3988caf511e5d0b8d985","modified":1703248245732},{"_id":"public/api/articles/macos-vim-auto-change-input-method.json","hash":"a87a74aad46e9e9316fb815929654924aa5c8d8b","modified":1703248245732},{"_id":"public/api/articles/hexo-auto-deploy.json","hash":"bea6da9c91505591c31e058343889b84938b5e5c","modified":1703248322980},{"_id":"public/api/features.json","hash":"1ab49d45e4e8f06059239bb603efca7eaea115eb","modified":1703248245732},{"_id":"public/api/authors/blog-author.json","hash":"d9b96833db63fa9cb85e3adad2c1734ff016aaaa","modified":1703248322980},{"_id":"public/api/categories.json","hash":"4abe606cc6a7ae481d1de11ef92b37dcb91387e0","modified":1703248245732},{"_id":"public/api/categories/hexo.json","hash":"ee28650e2d0b4b96d07d0c615bdcd4977dd19e4e","modified":1695652009231},{"_id":"public/api/categories/万物皆可vim.json","hash":"e14ec6269a5aad24db670d21701c738f0bec5177","modified":1697549023137},{"_id":"public/api/categories/java.json","hash":"03ff0c963e0ae681c8a3a86e9a23348604b47f4d","modified":1703248322980},{"_id":"public/api/categories/some-litttle-tricks.json","hash":"5c7e7b8a292c9d1f964f0da1f3928ae294f84f4c","modified":1699688933998},{"_id":"public/api/categories/keyboard-man.json","hash":"ac3a29e70a81124ac29a1aff54da45b5599d219c","modified":1695652009231},{"_id":"public/api/tags.json","hash":"8e5fbf89a4c41a9f77d7e6b4edf00f9b6683e565","modified":1703248245732},{"_id":"public/api/tags/hexo.json","hash":"ee28650e2d0b4b96d07d0c615bdcd4977dd19e4e","modified":1695652009231},{"_id":"public/api/tags/idea.json","hash":"2b7b78fcddbb17a13f60d6d5c19cfd10f7b6edb7","modified":1699688933998},{"_id":"public/api/tags/vim.json","hash":"89c1a59805a51ea6d2b672cf1050b0ef560e7e1a","modified":1697549023137},{"_id":"public/api/tags/java.json","hash":"03ff0c963e0ae681c8a3a86e9a23348604b47f4d","modified":1703248322980},{"_id":"public/api/tags/encode.json","hash":"ebf7a1ae51e752a402547f494dfc6d7a4f5edc2f","modified":1703248245732},{"_id":"public/api/tags/macos.json","hash":"6ed31bf609e91dad0fcd4e2e05b44c1c1873c7bc","modified":1697549023137},{"_id":"public/api/tags/terminal.json","hash":"b89de97d9332680432c1185cf6cb014be874ba06","modified":1697549023137},{"_id":"public/api/tags/linux.json","hash":"44662c9c4e78e55b7dccfec4916730014888bc3f","modified":1697549023137},{"_id":"public/api/tags/快捷键.json","hash":"4bd17e807873351973f4e80281e8949c4d6d4b34","modified":1697549023137},{"_id":"public/api/tags/vscode.json","hash":"1c11bd4763992f5a1cf18421781a9a39156b8a56","modified":1695652009231},{"_id":"public/api/pages/links/index.json","hash":"4c285a9e1ed2e28c5703fd5c70cffba85eea18fb","modified":1695652009231},{"_id":"public/api/pages/about/index.json","hash":"50f39d67d3b1eeadcf9b812f9070bb5520d7217d","modified":1697557037174},{"_id":"public/api/statistic.json","hash":"e0b6dee159454ebadd268d0ecfc2cc950e606d69","modified":1703248245732},{"_id":"public/api/search.json","hash":"ab633500232fc66a1505ece48ec0a934ec49d80f","modified":1703248322980},{"_id":"public/api/site.json","hash":"23e4ca58755bc641af7ccd89a7a5f3b70c4e73f3","modified":1704157798051},{"_id":"public/post/terminal-shortcuts.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/post/vscode-neovim-plugin.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/post/intellij-idea-config-vim.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/post/java-byte-convert-string-not-equal.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/post/macos-vim-auto-change-input-method.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/post/hexo-auto-deploy.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/index.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/tags/index.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/archives/index.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/links/index.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/page/links/index.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/page/about/index.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/tags/search/index.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695652009231},{"_id":"public/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1695652009231},{"_id":"public/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1695652009231},{"_id":"public/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1695652009231},{"_id":"public/static/img/dccf965f.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1695652009231},{"_id":"public/assets/images/favicon.ico","hash":"720f390d0ac84ba77021bfc8d0bc677913ba4cfe","modified":1695652009231},{"_id":"public/static/886a749e.css","hash":"46ef385b52d11142f603d0916042be66e4e04b46","modified":1695652009231},{"_id":"public/static/css/3e25f349.css","hash":"2859941dbaabcdf25bfb6379a0efaf6b02b45971","modified":1695652009231},{"_id":"public/static/css/6b275704.css","hash":"b04a2cd1a356e16cded5392bad271ce2f5b1c455","modified":1695652009231},{"_id":"public/static/css/882f9706.css","hash":"156eb90b06b5f6f6f0bf24973874ecd85906f8fd","modified":1695652009231},{"_id":"public/static/css/8e0e69c4.css","hash":"5e2ac4baf9923ea59d1dbddccb44a0e4ffbdc87f","modified":1695652009231},{"_id":"public/static/css/9a0271b0.css","hash":"140052b8339ae6633bfdb6544050ba97c72ee630","modified":1695652009231},{"_id":"public/static/js/3173cc68.js","hash":"9e80f2913c310b35a5aa1e34c23fc8780ab07dc3","modified":1695652009231},{"_id":"public/static/js/36e11c4e.js","hash":"a65a6cd48caf309d84b71afb4ec04908bcdf0982","modified":1695652009231},{"_id":"public/static/js/6192457a.js","hash":"b915bbe2f59e41da1ffeb360f7fa391603fd8a14","modified":1695652009231},{"_id":"public/static/js/66095462.js","hash":"0681446c7e5a6acbafa0732c880ef810f61f6ed9","modified":1695652009231},{"_id":"public/static/js/6882e76f.js","hash":"15708f336370cd732047a9259308dd2fb0d4b922","modified":1695652009231},{"_id":"public/static/js/6b5ea7c3.js","hash":"569d179746ac384f6ebb6d625d83c13f066975d9","modified":1695652009231},{"_id":"public/static/js/8a24213b.js","hash":"18cfce45bfd072f18e5db8b04029a7dfb3a4146b","modified":1695652009231},{"_id":"public/static/js/a4735ecc.js","hash":"5fd548128217bc41586ef614124056a3e3b8122f","modified":1695652009231},{"_id":"public/static/js/a565698a.js","hash":"3c76e1cc627b5ad242007e047e139053114e750f","modified":1695652009231},{"_id":"public/static/js/ac07fd23.js","hash":"96ac046e59c97dd02094cdfb56686d7c9dd42529","modified":1695652009231},{"_id":"public/static/js/d7132a0e.js","hash":"e7c9669a2ccfc796598f1744bfcdb68e8f562bac","modified":1695652009231},{"_id":"public/static/js/f22da37a.js","hash":"a12fc8e5143db0a0bb648f49c95c06144f1c472b","modified":1695652009231},{"_id":"public/static/js/fce95c39.js","hash":"e0ea45559a960c44345017936959b70b4f3c52d4","modified":1695652009231},{"_id":"public/static/js/fe2d0558.js","hash":"b5374ef4cbd5d8a6e441ba59eb14fd88501b61b4","modified":1695652009231},{"_id":"public/static/css/d5346b99.css","hash":"214a606da4fe89755b07f70a07b9f46d9af8dc01","modified":1695652009231},{"_id":"public/static/js/14c27e7f.js","hash":"eef41805e3017ef0df4d0c72ef1731e10e534379","modified":1695652009231},{"_id":"public/post/intellij-idea-config-vim/easy-motion.gif","hash":"c86a3cc0551319be68db4bbf6d5b001a93ccac26","modified":1695652009231},{"_id":"public/post/vscode-neovim-plugin/easy-motion.gif","hash":"c86a3cc0551319be68db4bbf6d5b001a93ccac26","modified":1695652009231},{"_id":"public/post/intellij-idea-config-vim/track_action_dark.gif","hash":"a1b9d3453a805abfa6a1da45ceddaabaababca96","modified":1695652009231},{"_id":"public/assets/images/logo.jpg","hash":"013528dbadfe2852d42acd66b13a8b933a67080f","modified":1695652009231},{"_id":"public/post/vscode-neovim-plugin/flash-demo.gif","hash":"ed53c43be15a5fd33d01a4d1fbb2543104ac526c","modified":1695652009231},{"_id":"source/_posts/use-asdf-manage-sdk.md","hash":"2332863edd4d9018f6992e5fe9fe67249f557235","modified":1698825580301},{"_id":"public/api/articles/use-asdf-manage-sdk.json","hash":"b5c5fd5722fe96e18189bf0c620819bcdcbfb8ba","modified":1703248245732},{"_id":"public/api/categories/效率工具.json","hash":"0df19e6be4439b3b411a43294d2b8b722b4af05f","modified":1699688933998},{"_id":"public/api/tags/asdf.json","hash":"36f1de7a65200d221f3cf23d43ffec723d4e7182","modified":1699688933998},{"_id":"public/api/tags/asdf-manage.json","hash":"a3a9b2db58f551ce449214dca9316cd369a8dde7","modified":1699688933998},{"_id":"public/post/use-asdf-manage-sdk.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1695704201062},{"_id":"source/_posts/how-to-develope-a-neovim-plugin.md","hash":"a443707165aa79743cbc67f34ecdd43b0b2fc5c0","modified":1699689745426},{"_id":"public/api/articles/how-to-develope-a-neovim-plugin.json","hash":"fd191736e0486ab696748e1c1dde80dab0de7083","modified":1703248245732},{"_id":"public/api/categories/neovim.json","hash":"e31567c77f2b687fa8fff6b94e8af88cf4d79a3c","modified":1697111610667},{"_id":"public/api/tags/neovim.json","hash":"d48c85027ec17c46138e60a62c54e9e86401f22e","modified":1703248245732},{"_id":"public/post/how-to-develope-a-neovim-plugin.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1697111373098},{"_id":"source/_drafts/vim-userful-shortcut.md","hash":"93c028cc9bbf8ac4a20073b0e8218f5b8312da2d","modified":1697549533064},{"_id":"source/_posts/idea-how-to-hide-folder-in-project.md","hash":"135d0ba828cfdf8c15175a7969c19ed930a29123","modified":1698825499615},{"_id":"public/api/articles/idea-how-to-hide-folder-in-project.json","hash":"fa732160fe112f7b0bb114a3afe8c6178fb28f8d","modified":1703248245732},{"_id":"public/api/categories/键指如飞.json","hash":"dde75ac46c3846a5e32832acc2da2a6a58af567a","modified":1697549023137},{"_id":"public/api/categories/neovim奇技淫巧.json","hash":"a554ed2dcbbe261584660cc4129dbe7f49fab820","modified":1703248245732},{"_id":"public/post/idea-how-to-hide-folder-in-project.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1697549023137},{"_id":"source/_posts/shell-pipeline-and-xargs.md","hash":"feb3f796969a8670097cc59aeade01867d751704","modified":1698825448588},{"_id":"source/_drafts/jyy-operate-system.md","hash":"4ff1d13d3aec39264b762fc0d797e757b6c44f81","modified":1698138769234},{"_id":"source/_posts/neovim-config-formatter.md","hash":"fc980280068c0fa39eafc44b7e9b2b5975b650ae","modified":1698827251037},{"_id":"source/_posts/gradle-spring-boot-vue-one-jar.md","hash":"17aea81b24d6a0348f06156384311b1c7b63b798","modified":1699688928040},{"_id":"public/api/articles/neovim-config-formatter.json","hash":"d8869ceb858ac6cf62813a69e6e53631df9baa06","modified":1703248245732},{"_id":"public/api/articles/shell-pipeline-and-xargs.json","hash":"87219c7fa2b5424bea665954488ca4a82036ce2d","modified":1699688933998},{"_id":"public/api/articles/gradle-spring-boot-vue-one-jar.json","hash":"ef7dd9e3c4457abc20d6fa285a901fa82e825661","modified":1703248322980},{"_id":"public/api/categories/shell.json","hash":"2c1214b1baa642083e57c0a38bffe1aef4b15626","modified":1699688933998},{"_id":"public/api/categories/gradle.json","hash":"246b74c201f38c98857d667c7a04ab3362a6a5aa","modified":1703248245732},{"_id":"public/api/tags/shell.json","hash":"2c1214b1baa642083e57c0a38bffe1aef4b15626","modified":1699688933998},{"_id":"public/api/tags/gradle.json","hash":"8803e78e3b49d8807632949b3a3ca57b60d60ac2","modified":1703248322980},{"_id":"public/api/tags/spring-boot.json","hash":"5685aa2feb55d8807390ad7e4bdd1527237aac88","modified":1703248245732},{"_id":"public/post/neovim-config-formatter.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1699688933998},{"_id":"public/post/gradle-spring-boot-vue-one-jar.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1699688933998},{"_id":"public/post/shell-pipeline-and-xargs.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1699688933998},{"_id":"public/page/2/index.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1699688933998},{"_id":"source/_posts/gradle-spring-boot-without-dependency.md","hash":"3cdf52bc98975e1d42e87c498918c5ad7f9a1791","modified":1703248308368},{"_id":"public/api/posts/2.json","hash":"bba373a6e5ece11796da38b388732af30f3c0416","modified":1703248245732},{"_id":"public/api/archives/2.json","hash":"bba373a6e5ece11796da38b388732af30f3c0416","modified":1703248245732},{"_id":"public/api/articles/gradle-spring-boot-without-dependency.json","hash":"d5bc58fb1459e3d8219ae9e3d70f784c2a5fd11e","modified":1703248322980},{"_id":"public/post/gradle-spring-boot-without-dependency.html","hash":"19afa2a49a6d23a876a6c0b01e4a03cb4fca1520","modified":1703248245732}],"Category":[{"name":"hexo","_id":"clmyzfc680005e2rrbedl7jco"},{"name":"万物皆可vim","_id":"clmyzfc6b000ae2rr3e2k3cin"},{"name":"java","_id":"clmyzfc6d000fe2rra409fclv"},{"name":"some litttle tricks","_id":"clmyzfc6e000ie2rredilgvxc"},{"name":"keyboard man","_id":"clmyzfc6e000oe2rr1bfy9prj"},{"name":"效率工具","_id":"clmzuhzty0001w0rr1jxncxs5"},{"name":"neovim","_id":"clnn4ako40001n7rrbjh9gh5u"},{"name":"neovim奇技淫巧","_id":"clnucuxmv00024lrrflgbcdb6"},{"name":"键指如飞","_id":"clnucuxmz00064lrr0w619bd8"},{"name":"vim奇技淫巧","_id":"clnucuxn000084lrrcntta7mt"},{"name":"shell","_id":"clofgk1ls0002s67qbp6g044h"},{"name":"gradle","_id":"clotqwnb00001tnrr2g5eg4h6"}],"Data":[],"Page":[{"title":"links","date":"2023-09-19T07:19:04.000Z","type":"frients","categoryMode":true,"data":[{"nick":"杨河老李","avatar":"https://kviccn.github.io/logo.jpg","description":"Think like an artist, develop like an artisan.","link":"https://kviccn.github.io/","label":"links-badge-tech"},{"nick":"三钻","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","description":"本博客主题作者,感谢作者开源精神","link":"https://tridiamond.tech/","label":"links-badge-vip"}],"_content":"\n# 一个人走的很快,一群人走的更远\n","source":"links/index.md","raw":"---\ntitle: links\ndate: 2023-09-19 15:19:04\ntype: frients\ncategoryMode: true\ndata:\n    -   nick: 杨河老李\n        avatar: https://kviccn.github.io/logo.jpg\n        description: Think like an artist, develop like an artisan.\n        link: https://kviccn.github.io/\n        # label: links-badge-vip\n        label: links-badge-tech\n    - nick: 三钻\n      avatar: https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png\n      description: 本博客主题作者,感谢作者开源精神\n      link: https://tridiamond.tech/\n      label: links-badge-vip\n---\n\n# 一个人走的很快,一群人走的更远\n","updated":"2023-09-20T09:29:18.345Z","path":"links/index.html","comments":1,"layout":"page","_id":"clmyzfc610000e2rr3718blx4","content":"<h1 id=\"一个人走的很快-一群人走的更远\"><a href=\"#一个人走的很快-一群人走的更远\" class=\"headerlink\" title=\"一个人走的很快,一群人走的更远\"></a>一个人走的很快,一群人走的更远</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一个人走的很快-一群人走的更远\"><a href=\"#一个人走的很快-一群人走的更远\" class=\"headerlink\" title=\"一个人走的很快,一群人走的更远\"></a>一个人走的很快,一群人走的更远</h1>"},{"title":"about","date":"2023-09-18T03:32:54.000Z","_content":"\n\nI am not writing BUG\n\nI am the BUG\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-09-18 11:32:54\n---\n\n\nI am not writing BUG\n\nI am the BUG\n","updated":"2023-10-17T15:23:59.284Z","path":"about/index.html","_id":"clmyzfc650002e2rr3uvwbhr4","comments":1,"layout":"page","content":"<p>I am not writing BUG</p>\n<p>I am the BUG</p>\n","site":{"data":{}},"excerpt":"","more":"<p>I am not writing BUG</p>\n<p>I am the BUG</p>\n"}],"Post":[{"title":"写作计划","_content":"\n\n\n[ ] neovim奇技淫巧之textobject\n[ ] neovim奇技淫巧之如何使用help\n[ ] neovim奇技淫巧之快速移动\n[ ] gralde项目之间实现共享依赖\n[x] neovim奇技淫巧之手搓插件\n[x] 键指如飞之终端快捷键\n","source":"_drafts/write-plan.md","raw":"---\ntitle: 写作计划\ntags:\n---\n\n\n\n[ ] neovim奇技淫巧之textobject\n[ ] neovim奇技淫巧之如何使用help\n[ ] neovim奇技淫巧之快速移动\n[ ] gralde项目之间实现共享依赖\n[x] neovim奇技淫巧之手搓插件\n[x] 键指如飞之终端快捷键\n","slug":"write-plan","published":0,"date":"2023-10-17T15:47:26.111Z","updated":"2023-10-17T15:47:26.111Z","_id":"clmyzfc630001e2rr1b9b9y4n","comments":1,"layout":"post","photos":[],"link":"","content":"<p>[ ] neovim奇技淫巧之textobject<br>[ ] neovim奇技淫巧之如何使用help<br>[ ] neovim奇技淫巧之快速移动<br>[ ] gralde项目之间实现共享依赖<br>[x] neovim奇技淫巧之手搓插件<br>[x] 键指如飞之终端快捷键</p>\n","site":{"data":{}},"excerpt":"","more":"<p>[ ] neovim奇技淫巧之textobject<br>[ ] neovim奇技淫巧之如何使用help<br>[ ] neovim奇技淫巧之快速移动<br>[ ] gralde项目之间实现共享依赖<br>[x] neovim奇技淫巧之手搓插件<br>[x] 键指如飞之终端快捷键</p>\n"},{"title":"hexo push后自动部署github pages","date":"2023-09-20T01:31:18.000Z","cover":"https://source.unsplash.com/lzh3hPtJz9c/1200x628","abstracts":"hexo 提交后自动部署github page","feature":true,"_content":"\n# hexo 提交后自动部署github page\n\nhexo有几种部署方式,一种是本地编译后,直接push `public`路径下的静态文件,一种是通过`cli`方式,向仓库提交`source`下的的`markdown`文件,触发`action`.实现自动部署\n\n本文主要说明后一种方式.\n\n## 创建github workflow\n\n在`hexo`的根目录的`.github/workflows/pages.yml`路径下创建文件,文件内容:\n\n```yaml\nname: Pages\n\non:\n  push:\n    branches:\n      - main  # default branch\n\njobs:\n  pages:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 16.x\n        uses: actions/setup-node@v2\n        with:\n        # 看下自己本地的noe版本\n          node-version: '16'\n      - name: Cache NPM dependencies\n        uses: actions/cache@v2\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n```\n\n\n## 创建github pages\n\n参考 [https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site)\n\n创建完成后,微调一下:\n\n在`settings->Pages->Build and deployment->Branch`选项中,把`branch`改成`gh-pages`\n\n## 初始化本地仓库\n\n```bash\ngit init .\ngit remote add origin ${你上面创建的仓库地址}\ngit remote add  .\ngit commit  -m \"init project\"\n```\n\n## gitgnore\n\n由于使用了`github`的自动部署功能,所以无需上传静态文件,在`hexo`根目录添加`.gitignore`文件\n\n```bash\npublic/\n.deploy*/\nnode_modules\n```\n\n## 提交\n\n最后提交到`main`分支\n\n```bash\ngit push -u origin main\n```\n提交完成后,在`github`的`action`选项中可以看到正在构建,构建完成,就可以在`https://${your-username}.github.io`路径访问你的在线博客了\n\n\n## 参考\n\n[https://hexo.io/docs/github-pages](https://hexo.io/docs/github-pages)\n","source":"_posts/hexo-auto-deploy.md","raw":"---\ntitle: hexo push后自动部署github pages\ndate: 2023-09-20 09:31:18\ntags: \n  - hexo\ncategories:\n  - hexo\ncover: https://source.unsplash.com/lzh3hPtJz9c/1200x628\nabstracts: hexo 提交后自动部署github page\nfeature: true\n---\n\n# hexo 提交后自动部署github page\n\nhexo有几种部署方式,一种是本地编译后,直接push `public`路径下的静态文件,一种是通过`cli`方式,向仓库提交`source`下的的`markdown`文件,触发`action`.实现自动部署\n\n本文主要说明后一种方式.\n\n## 创建github workflow\n\n在`hexo`的根目录的`.github/workflows/pages.yml`路径下创建文件,文件内容:\n\n```yaml\nname: Pages\n\non:\n  push:\n    branches:\n      - main  # default branch\n\njobs:\n  pages:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 16.x\n        uses: actions/setup-node@v2\n        with:\n        # 看下自己本地的noe版本\n          node-version: '16'\n      - name: Cache NPM dependencies\n        uses: actions/cache@v2\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n```\n\n\n## 创建github pages\n\n参考 [https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site)\n\n创建完成后,微调一下:\n\n在`settings->Pages->Build and deployment->Branch`选项中,把`branch`改成`gh-pages`\n\n## 初始化本地仓库\n\n```bash\ngit init .\ngit remote add origin ${你上面创建的仓库地址}\ngit remote add  .\ngit commit  -m \"init project\"\n```\n\n## gitgnore\n\n由于使用了`github`的自动部署功能,所以无需上传静态文件,在`hexo`根目录添加`.gitignore`文件\n\n```bash\npublic/\n.deploy*/\nnode_modules\n```\n\n## 提交\n\n最后提交到`main`分支\n\n```bash\ngit push -u origin main\n```\n提交完成后,在`github`的`action`选项中可以看到正在构建,构建完成,就可以在`https://${your-username}.github.io`路径访问你的在线博客了\n\n\n## 参考\n\n[https://hexo.io/docs/github-pages](https://hexo.io/docs/github-pages)\n","slug":"hexo-auto-deploy","published":1,"updated":"2023-09-21T14:57:24.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmyzfc660003e2rre1igbsyq","content":"<h1 id=\"hexo-提交后自动部署github-page\"><a href=\"#hexo-提交后自动部署github-page\" class=\"headerlink\" title=\"hexo 提交后自动部署github page\"></a>hexo 提交后自动部署github page</h1><p>hexo有几种部署方式,一种是本地编译后,直接push <code>public</code>路径下的静态文件,一种是通过<code>cli</code>方式,向仓库提交<code>source</code>下的的<code>markdown</code>文件,触发<code>action</code>.实现自动部署</p>\n<p>本文主要说明后一种方式.</p>\n<h2 id=\"创建github-workflow\"><a href=\"#创建github-workflow\" class=\"headerlink\" title=\"创建github workflow\"></a>创建github workflow</h2><p>在<code>hexo</code>的根目录的<code>.github/workflows/pages.yml</code>路径下创建文件,文件内容:</p>\n<div class=\"language-yaml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">yaml</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Pages</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BD93F9\">on</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #8BE9FD\">push</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">branches</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">main</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\"># default branch</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD\">jobs</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #8BE9FD\">pages</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">runs-on</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">ubuntu-latest</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">permissions</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD\">contents</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">write</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">steps</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">uses</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">actions/checkout@v3</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">with</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">token</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">$&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #6272A4\"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">submodules</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">recursive</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Use Node.js 16.x</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">uses</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">actions/setup-node@v2</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">with</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\"># 看下自己本地的noe版本</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">node-version</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">16</span><span style=\"color: #E9F284\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Cache NPM dependencies</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">uses</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">actions/cache@v2</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">with</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">path</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">node_modules</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">key</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">$&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">restore-keys</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span></span>\n<span class=\"line\"><span style=\"color: #F1FA8C\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Install Dependencies</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">run</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">npm install</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Build</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">run</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">npm run build</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Deploy</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">uses</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">peaceiris/actions-gh-pages@v3</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">with</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">github_token</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">$&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">publish_dir</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">./public</span></span></code></pre></div><h2 id=\"创建github-pages\"><a href=\"#创建github-pages\" class=\"headerlink\" title=\"创建github pages\"></a>创建github pages</h2><p>参考 <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site\">https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site</a></p>\n<p>创建完成后,微调一下:</p>\n<p>在<code>settings-&gt;Pages-&gt;Build and deployment-&gt;Branch</code>选项中,把<code>branch</code>改成<code>gh-pages</code></p>\n<h2 id=\"初始化本地仓库\"><a href=\"#初始化本地仓库\" class=\"headerlink\" title=\"初始化本地仓库\"></a>初始化本地仓库</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">init</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">.</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">remote</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">add</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">origin</span><span style=\"color: #F8F8F2\"> $&#123;你上面创建的仓库地址&#125;</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">remote</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">add</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #F1FA8C\">.</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">commit</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #BD93F9\">-m</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">init project</span><span style=\"color: #E9F284\">&quot;</span></span></code></pre></div><h2 id=\"gitgnore\"><a href=\"#gitgnore\" class=\"headerlink\" title=\"gitgnore\"></a>gitgnore</h2><p>由于使用了<code>github</code>的自动部署功能,所以无需上传静态文件,在<code>hexo</code>根目录添加<code>.gitignore</code>文件</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">public/</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">.deploy*/</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">node_modules</span></span></code></pre></div><h2 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h2><p>最后提交到<code>main</code>分支</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">push</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-u</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">origin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">main</span></span></code></pre></div><p>提交完成后,在<code>github</code>的<code>action</code>选项中可以看到正在构建,构建完成,就可以在<code>https://$&#123;your-username&#125;.github.io</code>路径访问你的在线博客了</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://hexo.io/docs/github-pages\">https://hexo.io/docs/github-pages</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"hexo-提交后自动部署github-page\"><a href=\"#hexo-提交后自动部署github-page\" class=\"headerlink\" title=\"hexo 提交后自动部署github page\"></a>hexo 提交后自动部署github page</h1><p>hexo有几种部署方式,一种是本地编译后,直接push <code>public</code>路径下的静态文件,一种是通过<code>cli</code>方式,向仓库提交<code>source</code>下的的<code>markdown</code>文件,触发<code>action</code>.实现自动部署</p>\n<p>本文主要说明后一种方式.</p>\n<h2 id=\"创建github-workflow\"><a href=\"#创建github-workflow\" class=\"headerlink\" title=\"创建github workflow\"></a>创建github workflow</h2><p>在<code>hexo</code>的根目录的<code>.github/workflows/pages.yml</code>路径下创建文件,文件内容:</p>\n<div class=\"language-yaml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">yaml</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Pages</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BD93F9\">on</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #8BE9FD\">push</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">branches</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">main</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\"># default branch</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD\">jobs</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #8BE9FD\">pages</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">runs-on</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">ubuntu-latest</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">permissions</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD\">contents</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">write</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">steps</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">uses</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">actions/checkout@v3</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">with</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">token</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">$&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #6272A4\"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">submodules</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">recursive</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Use Node.js 16.x</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">uses</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">actions/setup-node@v2</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">with</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\"># 看下自己本地的noe版本</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">node-version</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">16</span><span style=\"color: #E9F284\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Cache NPM dependencies</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">uses</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">actions/cache@v2</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">with</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">path</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">node_modules</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">key</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">$&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">restore-keys</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span></span>\n<span class=\"line\"><span style=\"color: #F1FA8C\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Install Dependencies</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">run</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">npm install</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Build</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">run</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">npm run build</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">name</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Deploy</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">uses</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">peaceiris/actions-gh-pages@v3</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #8BE9FD\">with</span><span style=\"color: #FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">github_token</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">$&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FD\">publish_dir</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">./public</span></span></code></pre></div><h2 id=\"创建github-pages\"><a href=\"#创建github-pages\" class=\"headerlink\" title=\"创建github pages\"></a>创建github pages</h2><p>参考 <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site\">https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site</a></p>\n<p>创建完成后,微调一下:</p>\n<p>在<code>settings-&gt;Pages-&gt;Build and deployment-&gt;Branch</code>选项中,把<code>branch</code>改成<code>gh-pages</code></p>\n<h2 id=\"初始化本地仓库\"><a href=\"#初始化本地仓库\" class=\"headerlink\" title=\"初始化本地仓库\"></a>初始化本地仓库</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">init</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">.</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">remote</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">add</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">origin</span><span style=\"color: #F8F8F2\"> $&#123;你上面创建的仓库地址&#125;</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">remote</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">add</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #F1FA8C\">.</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">commit</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #BD93F9\">-m</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">init project</span><span style=\"color: #E9F284\">&quot;</span></span></code></pre></div><h2 id=\"gitgnore\"><a href=\"#gitgnore\" class=\"headerlink\" title=\"gitgnore\"></a>gitgnore</h2><p>由于使用了<code>github</code>的自动部署功能,所以无需上传静态文件,在<code>hexo</code>根目录添加<code>.gitignore</code>文件</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">public/</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">.deploy*/</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">node_modules</span></span></code></pre></div><h2 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h2><p>最后提交到<code>main</code>分支</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">git</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">push</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-u</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">origin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">main</span></span></code></pre></div><p>提交完成后,在<code>github</code>的<code>action</code>选项中可以看到正在构建,构建完成,就可以在<code>https://$&#123;your-username&#125;.github.io</code>路径访问你的在线博客了</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://hexo.io/docs/github-pages\">https://hexo.io/docs/github-pages</a></p>\n"},{"title":"idea下配置vim模式","cover":"https://source.unsplash.com/Bss5nhYnLKU/1200x628","date":"2023-09-22T09:04:46.000Z","abstracts":"如何在idea中配置vim,让写代码更加舒服","_content":"\n\n# vim搓一切?\n\n有一说一,vim虽然可以配置的很舒服,但是对于`java`程序员来说,用vim去写`java`是真的折磨,除非你想进行自我折磨,变成代码仙人.\n所以最省心的方案就是在`idea`中下一个vim插件\n\n\n\n#  安装\n\n\n首先你要有一个 **java第一** IDE:`intellij idea`\n然后打开插件市场,下一个idea vimrc 安装上\n\n\n# 配置`.ideavimrc`\n\n创建一个`~/.ideavimrc`\n\n加入一些配置:\n\n```vim\n\"                   ____       _      ____    ___    ____\n\"                  | __ )     / \\    / ___|  |_ _|  / ___|\n\"                  |  _ \\    / _ \\   \\___ \\   | |  | |\n\"                  | |_) |  / ___ \\   ___) |  | |  | |___\n\"                  |____/  /_/   \\_\\ |____/  |___|  \\____|\n\n\n\" 上下预留5行\nset so=5\n\" 不折叠 set nowrap\n\" 去掉哔哔声\nset belloff=all\nset noerrorbells\nset t_vb=\nset backspace=indent,eol,start whichwrap+=<,>,[,]\n\" Vim 的默认寄存器和系统剪贴板共享\nset clipboard+=unnamedplus\nset keep-english-in-normal\n\" 开启相对行\nset relativenumber\nset nu\nset ignorecase\nset smartcase\n\n\n\"                   ____    _       _   _    ____   ___   _   _\n\"                  |  _ \\  | |     | | | |  / ___| |_ _| | \\ | |\n\"                  | |_) | | |     | | | | | |  _   | |  |  \\| |\n\"                  |  __/  | |___  | |_| | | |_| |  | |  | |\\  |\n\"                  |_|     |_____|  \\___/   \\____| |___| |_| \\_|\n\"\n\"\n\n\"开启多光标支持\nPlug 'machakann/vim-highlightedyank'\nPlug 'vim-scripts/argtextobj.vim'\nPlug 'justinmk/vim-sneak'\nPlug 'easymotion/vim-easymotion'\nPlug 'unblevable/quick-scope'\nPlug 'preservim/nerdtree'\nPlug 'tpope/vim-commentary'\n\n\n\"USAGE \n\" add surround\n\" ys{textobject motion}{indeifier}\n\" eg:\n\"   ysiw'\n\"\n\" remove surround \n\" ds'\n\"\n\" change surround \n\" cs[(\n\nPlug \"tpope/vim-surround\"\n\"USAGE \n\" [count][\"x]gr{motion}   Replace {motion} text with the contents of register x.\n\"                         Especially when using the unnamed register, this is\n\"                         quicker than \"_d{motion}P or \"_c{motion}<C-R>\"\n\" [count][\"x]grr          Replace [count] lines with the contents of register x.\n\"                         To replace from the cursor position to the end of the\n\"                         line use [\"x]gr$\n\" {Visual}[\"x]gr          Replace the selection with the contents of register x.\"\n\nPlug 'vim-scripts/ReplaceWithRegister'\n\" USAGE \n\" cx\n\" On the first use, define the first {motion} to exchange. On the second use, define the second {motion} and perform the exchange.\n\"\n\" cxx\n\" Like cx, but use the current line.\n\"\n\" X\n\" Like cx, but for Visual mode.\n\"\n\" cxc\n\" Clear any {motion} pending for exchange.\n\"\n\nPlug 'tommcdo/vim-exchange'\nPlug 'terryma/vim-multiple-cursors'\n\" quick-scop cofnig\nlet g:qs_highlight_on_keys = ['f', 'F', 't', 'T']\nlet g:qs_accepted_chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n\n\n\n\n\" https://github.com/JetBrains/ideavim/wiki/ideajoin-examples\nset ideajoin\nset sneak\n\n\n\"                   _  __  _____  __   __  __  __      _      ____\n\"                  | |/ / | ____| \\ \\ / / |  \\/  |    / \\    |  _ \\\n\"                  | ' /  |  _|    \\ V /  | |\\/| |   / _ \\   | |_) |\n\"                  | . \\  | |___    | |   | |  | |  / ___ \\  |  __/\n\"                  |_|\\_\\ |_____|   |_|   |_|  |_| /_/   \\_\\ |_|\n\n\" basic key map \ninoremap <C-e> <END>\ninoremap <C-a> <HOME>\ninoremap <C-f> <Right>\ninoremap <C-b> <Left>\ninoremap <C-n> <Down>\ninoremap <C-p> <Up>\ninoremap <M-f> <S-Right>\ninoremap <M-b> <S-Left>\ninoremap <C-k> <ESC>d$i\ninoremap <C-d> <Del>\n\n\nlet mapleader=\" \"\n\n\" idea action config\nnnoremap gd <Action>(GotoDeclaration)\nnnoremap gi <Action>(GotoImplementation)\nnnoremap gs <Action>(GotoSuperMethod)\nnnoremap gt <Action>(GotoTypeDeclaration)\n\nmap <leader>re  <Action>(RenameElement)\n\nmap <leader>gf <Action>(GotoFile)\nmap <leader>gt <Action>(GotoSymbol)\n\n\nmap <leader>f: <Action>(GotoAction)\nmap <leader>f. <Action>(FindInPath)\nmap <leader>fl <Action>(RecentLocations)\nmap <leader>ff  <Action>(RecentFiles)\n\n\nmap <leader>et :NERDTreeToggle<CR>\nmap <leader>ef :NERDTreeFocus<CR>\nmap <leader>es <Action>(FileStructurePopup)\n\n\nnmap <C-W>q <Action>(CloseAllEditors)\n\n\n\" plugin config \n\nlet g:multi_cursor_use_default_mapping=0\n\n\" Default mapping\nlet g:multi_cursor_start_word_key      = '<C-n>'\nlet g:multi_cursor_select_all_word_key = '<A-n>'\nlet g:multi_cursor_start_key           = 'g<C-n>'\nlet g:multi_cursor_select_all_key      = 'g<A-n>'\nlet g:multi_cursor_next_key            = '<C-n>'\nlet g:multi_cursor_prev_key            = '<C-p>'\nlet g:multi_cursor_skip_key            = '<C-x>'\nlet g:multi_cursor_quit_key            = '<Esc>'\n\n\n\n```\n\n# 让其生效\n\n打开idea,source一下\n\n```bash\nsource ~/.ideavimrc\n```\n\n# FBI WARNING\n\n\n1. `.ideavimrc`里面有一些插件是要在idea中也要下载对应的插件才能使用的,具体参考[这里](https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins)\n2. `map <leader>f: <Action>(GotoAction)` 这种形式是在调用`idea`的原生功能,具体有哪些功能,可以参考[这里](https://github.com/JetBrains/ideavim),可以打开`ideavim`的插件,查看对应操作的`<ActionId>`\n\n![track_action_id](track_action_dark.gif)\n\n\n","source":"_posts/intellij-idea-config-vim.md","raw":"---\ntitle: idea下配置vim模式\ntags:\n  - idea\n  - vim\ncategories:\n  - 万物皆可vim\ncover: https://source.unsplash.com/Bss5nhYnLKU/1200x628\ndate: 2023-09-22 17:04:46\nabstracts: 如何在idea中配置vim,让写代码更加舒服\n---\n\n\n# vim搓一切?\n\n有一说一,vim虽然可以配置的很舒服,但是对于`java`程序员来说,用vim去写`java`是真的折磨,除非你想进行自我折磨,变成代码仙人.\n所以最省心的方案就是在`idea`中下一个vim插件\n\n\n\n#  安装\n\n\n首先你要有一个 **java第一** IDE:`intellij idea`\n然后打开插件市场,下一个idea vimrc 安装上\n\n\n# 配置`.ideavimrc`\n\n创建一个`~/.ideavimrc`\n\n加入一些配置:\n\n```vim\n\"                   ____       _      ____    ___    ____\n\"                  | __ )     / \\    / ___|  |_ _|  / ___|\n\"                  |  _ \\    / _ \\   \\___ \\   | |  | |\n\"                  | |_) |  / ___ \\   ___) |  | |  | |___\n\"                  |____/  /_/   \\_\\ |____/  |___|  \\____|\n\n\n\" 上下预留5行\nset so=5\n\" 不折叠 set nowrap\n\" 去掉哔哔声\nset belloff=all\nset noerrorbells\nset t_vb=\nset backspace=indent,eol,start whichwrap+=<,>,[,]\n\" Vim 的默认寄存器和系统剪贴板共享\nset clipboard+=unnamedplus\nset keep-english-in-normal\n\" 开启相对行\nset relativenumber\nset nu\nset ignorecase\nset smartcase\n\n\n\"                   ____    _       _   _    ____   ___   _   _\n\"                  |  _ \\  | |     | | | |  / ___| |_ _| | \\ | |\n\"                  | |_) | | |     | | | | | |  _   | |  |  \\| |\n\"                  |  __/  | |___  | |_| | | |_| |  | |  | |\\  |\n\"                  |_|     |_____|  \\___/   \\____| |___| |_| \\_|\n\"\n\"\n\n\"开启多光标支持\nPlug 'machakann/vim-highlightedyank'\nPlug 'vim-scripts/argtextobj.vim'\nPlug 'justinmk/vim-sneak'\nPlug 'easymotion/vim-easymotion'\nPlug 'unblevable/quick-scope'\nPlug 'preservim/nerdtree'\nPlug 'tpope/vim-commentary'\n\n\n\"USAGE \n\" add surround\n\" ys{textobject motion}{indeifier}\n\" eg:\n\"   ysiw'\n\"\n\" remove surround \n\" ds'\n\"\n\" change surround \n\" cs[(\n\nPlug \"tpope/vim-surround\"\n\"USAGE \n\" [count][\"x]gr{motion}   Replace {motion} text with the contents of register x.\n\"                         Especially when using the unnamed register, this is\n\"                         quicker than \"_d{motion}P or \"_c{motion}<C-R>\"\n\" [count][\"x]grr          Replace [count] lines with the contents of register x.\n\"                         To replace from the cursor position to the end of the\n\"                         line use [\"x]gr$\n\" {Visual}[\"x]gr          Replace the selection with the contents of register x.\"\n\nPlug 'vim-scripts/ReplaceWithRegister'\n\" USAGE \n\" cx\n\" On the first use, define the first {motion} to exchange. On the second use, define the second {motion} and perform the exchange.\n\"\n\" cxx\n\" Like cx, but use the current line.\n\"\n\" X\n\" Like cx, but for Visual mode.\n\"\n\" cxc\n\" Clear any {motion} pending for exchange.\n\"\n\nPlug 'tommcdo/vim-exchange'\nPlug 'terryma/vim-multiple-cursors'\n\" quick-scop cofnig\nlet g:qs_highlight_on_keys = ['f', 'F', 't', 'T']\nlet g:qs_accepted_chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n\n\n\n\n\" https://github.com/JetBrains/ideavim/wiki/ideajoin-examples\nset ideajoin\nset sneak\n\n\n\"                   _  __  _____  __   __  __  __      _      ____\n\"                  | |/ / | ____| \\ \\ / / |  \\/  |    / \\    |  _ \\\n\"                  | ' /  |  _|    \\ V /  | |\\/| |   / _ \\   | |_) |\n\"                  | . \\  | |___    | |   | |  | |  / ___ \\  |  __/\n\"                  |_|\\_\\ |_____|   |_|   |_|  |_| /_/   \\_\\ |_|\n\n\" basic key map \ninoremap <C-e> <END>\ninoremap <C-a> <HOME>\ninoremap <C-f> <Right>\ninoremap <C-b> <Left>\ninoremap <C-n> <Down>\ninoremap <C-p> <Up>\ninoremap <M-f> <S-Right>\ninoremap <M-b> <S-Left>\ninoremap <C-k> <ESC>d$i\ninoremap <C-d> <Del>\n\n\nlet mapleader=\" \"\n\n\" idea action config\nnnoremap gd <Action>(GotoDeclaration)\nnnoremap gi <Action>(GotoImplementation)\nnnoremap gs <Action>(GotoSuperMethod)\nnnoremap gt <Action>(GotoTypeDeclaration)\n\nmap <leader>re  <Action>(RenameElement)\n\nmap <leader>gf <Action>(GotoFile)\nmap <leader>gt <Action>(GotoSymbol)\n\n\nmap <leader>f: <Action>(GotoAction)\nmap <leader>f. <Action>(FindInPath)\nmap <leader>fl <Action>(RecentLocations)\nmap <leader>ff  <Action>(RecentFiles)\n\n\nmap <leader>et :NERDTreeToggle<CR>\nmap <leader>ef :NERDTreeFocus<CR>\nmap <leader>es <Action>(FileStructurePopup)\n\n\nnmap <C-W>q <Action>(CloseAllEditors)\n\n\n\" plugin config \n\nlet g:multi_cursor_use_default_mapping=0\n\n\" Default mapping\nlet g:multi_cursor_start_word_key      = '<C-n>'\nlet g:multi_cursor_select_all_word_key = '<A-n>'\nlet g:multi_cursor_start_key           = 'g<C-n>'\nlet g:multi_cursor_select_all_key      = 'g<A-n>'\nlet g:multi_cursor_next_key            = '<C-n>'\nlet g:multi_cursor_prev_key            = '<C-p>'\nlet g:multi_cursor_skip_key            = '<C-x>'\nlet g:multi_cursor_quit_key            = '<Esc>'\n\n\n\n```\n\n# 让其生效\n\n打开idea,source一下\n\n```bash\nsource ~/.ideavimrc\n```\n\n# FBI WARNING\n\n\n1. `.ideavimrc`里面有一些插件是要在idea中也要下载对应的插件才能使用的,具体参考[这里](https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins)\n2. `map <leader>f: <Action>(GotoAction)` 这种形式是在调用`idea`的原生功能,具体有哪些功能,可以参考[这里](https://github.com/JetBrains/ideavim),可以打开`ideavim`的插件,查看对应操作的`<ActionId>`\n\n![track_action_id](track_action_dark.gif)\n\n\n","slug":"intellij-idea-config-vim","published":1,"updated":"2023-09-23T13:28:06.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmyzfc670004e2rr5al88zlj","content":"<h1 id=\"vim搓一切\"><a href=\"#vim搓一切\" class=\"headerlink\" title=\"vim搓一切?\"></a>vim搓一切?</h1><p>有一说一,vim虽然可以配置的很舒服,但是对于<code>java</code>程序员来说,用vim去写<code>java</code>是真的折磨,除非你想进行自我折磨,变成代码仙人.<br>所以最省心的方案就是在<code>idea</code>中下一个vim插件</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>首先你要有一个 <strong>java第一</strong> IDE:<code>intellij idea</code><br>然后打开插件市场,下一个idea vimrc 安装上</p>\n<h1 id=\"配置-ideavimrc\"><a href=\"#配置-ideavimrc\" class=\"headerlink\" title=\"配置.ideavimrc\"></a>配置<code>.ideavimrc</code></h1><p>创建一个<code>~/.ideavimrc</code></p>\n<p>加入一些配置:</p>\n<div class=\"language-vim\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">vim</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">&quot;                   ____       _      ____    ___    ____</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | __ )     / \\    / ___|  |_ _|  / ___|</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |  _ \\    / _ \\   \\___ \\   | |  | |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | |_) |  / ___ \\   ___) |  | |  | |___</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |____/  /_/   \\_\\ |____/  |___|  \\____|</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; 上下预留5行</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">so</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">5</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; 不折叠 set nowrap</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; 去掉哔哔声</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">belloff</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">all</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">noerrorbells</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> t_vb</span><span style=\"color: #FF79C6\">=</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">backspace</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">indent,</span><span style=\"color: #8BE9FD; font-style: italic\">eol</span><span style=\"color: #F8F8F2\">,start </span><span style=\"color: #8BE9FD; font-style: italic\">whichwrap</span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\">&lt;,&gt;,[,]</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Vim 的默认寄存器和系统剪贴板共享</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">clipboard</span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\">unnamedplus</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> keep-english-</span><span style=\"color: #FF79C6\">in</span><span style=\"color: #F8F8F2\">-</span><span style=\"color: #FF79C6\">normal</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; 开启相对行</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">relativenumber</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">nu</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">ignorecase</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">smartcase</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                   ____    _       _   _    ____   ___   _   _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |  _ \\  | |     | | | |  / ___| |_ _| | \\ | |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | |_) | | |     | | | | | |  _   | |  |  \\| |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |  __/  | |___  | |_| | | |_| |  | |  | |\\  |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |_|     |_____|  \\___/   \\____| |___| |_| \\_|</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;开启多光标支持</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;machakann/vim-highlightedyank&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;vim-scripts/argtextobj.vim&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;justinmk/vim-sneak&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;easymotion/vim-easymotion&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;unblevable/quick-scope&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;preservim/nerdtree&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;tpope/vim-commentary&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;USAGE </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; add surround</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; ys&#123;textobject motion&#125;&#123;indeifier&#125;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; eg:</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;   ysiw&#39;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; remove surround </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; ds&#39;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; change surround </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; cs[(</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;tpope/vim-surround&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;USAGE </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; [count][&quot;x]gr&#123;motion&#125;   Replace &#123;motion&#125; text with the contents of register x.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                         Especially when using the unnamed register, this is</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                         quicker than &quot;_d&#123;motion&#125;P or &quot;_c&#123;motion&#125;&lt;C-R&gt;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; [count][&quot;x]grr          Replace [count] lines with the contents of register x.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                         To replace from the cursor position to the end of the</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                         line use [&quot;x]gr$</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; &#123;Visual&#125;[&quot;x]gr          Replace the selection with the contents of register x.&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;vim-scripts/ReplaceWithRegister&#39;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; USAGE </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; cx</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; On the first use, define the first &#123;motion&#125; to exchange. On the second use, define the second &#123;motion&#125; and perform the exchange.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; cxx</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Like cx, but use the current line.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; X</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Like cx, but for Visual mode.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; cxc</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Clear any &#123;motion&#125; pending for exchange.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;tommcdo/vim-exchange&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;terryma/vim-multiple-cursors&#39;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; quick-scop cofnig</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:qs_highlight_on_keys </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> [</span><span style=\"color: #F1FA8C\">&#39;f&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;F&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;t&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;T&#39;</span><span style=\"color: #F8F8F2\">]</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:qs_accepted_chars </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> [</span><span style=\"color: #F1FA8C\">&#39;a&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;b&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;c&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;d&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;e&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;f&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;g&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;h&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;i&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;j&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;k&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;l&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;m&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;n&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;o&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;p&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;q&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;r&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;s&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;t&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;u&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;v&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;w&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;x&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;y&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;z&#39;</span><span style=\"color: #F8F8F2\">] </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; https://github.com/JetBrains/ideavim/wiki/ideajoin-examples</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> ideajoin</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> sneak</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                   _  __  _____  __   __  __  __      _      ____</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | |/ / | ____| \\ \\ / / |  \\/  |    / \\    |  _ \\</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | &#39; /  |  _|    \\ V /  | |\\/| |   / _ \\   | |_) |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | . \\  | |___    | |   | |  | |  / ___ \\  |  __/</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |_|\\_\\ |_____|   |_|   |_|  |_| /_/   \\_\\ |_|</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; basic key map </span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-e</span><span style=\"color: #F8F8F2\">&gt; &lt;END&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-a</span><span style=\"color: #F8F8F2\">&gt; &lt;HOME&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-f</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Right</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-b</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Left</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-n</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Down</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-p</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Up</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">M-f</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">S-R</span><span style=\"color: #F8F8F2\">ight&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">M-b</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">S-L</span><span style=\"color: #F8F8F2\">eft&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-k</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">ESC</span><span style=\"color: #F8F8F2\">&gt;d$i</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-d</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Del</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> mapleader</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F1FA8C\">&quot; &quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; idea action config</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nnoremap</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">gd</span><span style=\"color: #F8F8F2\"> &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoDeclaration</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nnoremap</span><span style=\"color: #F8F8F2\"> gi &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoImplementation</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nnoremap</span><span style=\"color: #F8F8F2\"> gs &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoSuperMethod</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nnoremap</span><span style=\"color: #F8F8F2\"> gt &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoTypeDeclaration</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;</span><span style=\"color: #8BE9FD; font-style: italic\">re</span><span style=\"color: #F8F8F2\">  &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">RenameElement</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;gf &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoFile</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;gt &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoSymbol</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;f: &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoAction</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;f. &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">FindInPath</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;fl &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">RecentLocations</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;</span><span style=\"color: #8BE9FD; font-style: italic\">ff</span><span style=\"color: #F8F8F2\">  &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">RecentFiles</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;</span><span style=\"color: #8BE9FD; font-style: italic\">et</span><span style=\"color: #F8F8F2\"> :NERDTreeToggle&lt;</span><span style=\"color: #BD93F9\">CR</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;</span><span style=\"color: #8BE9FD; font-style: italic\">ef</span><span style=\"color: #F8F8F2\"> :NERDTreeFocus&lt;</span><span style=\"color: #BD93F9\">CR</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;es &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">FileStructurePopup</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nmap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-W</span><span style=\"color: #F8F8F2\">&gt;q &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">CloseAllEditors</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; plugin config </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_use_default_mapping</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Default mapping</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_start_word_key      </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;C-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_select_all_word_key </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;A-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_start_key           </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;g&lt;C-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_select_all_key      </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;g&lt;A-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_next_key            </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;C-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_prev_key            </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;C-p&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_skip_key            </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;C-x&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_quit_key            </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;Esc&gt;&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre></div><h1 id=\"让其生效\"><a href=\"#让其生效\" class=\"headerlink\" title=\"让其生效\"></a>让其生效</h1><p>打开idea,source一下</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">source</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">~/.ideavimrc</span></span></code></pre></div><h1 id=\"FBI-WARNING\"><a href=\"#FBI-WARNING\" class=\"headerlink\" title=\"FBI WARNING\"></a>FBI WARNING</h1><ol>\n<li><code>.ideavimrc</code>里面有一些插件是要在idea中也要下载对应的插件才能使用的,具体参考<a href=\"https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins\">这里</a></li>\n<li><code>map &lt;leader&gt;f: &lt;Action&gt;(GotoAction)</code> 这种形式是在调用<code>idea</code>的原生功能,具体有哪些功能,可以参考<a href=\"https://github.com/JetBrains/ideavim\">这里</a>,可以打开<code>ideavim</code>的插件,查看对应操作的<code>&lt;ActionId&gt;</code></li>\n</ol>\n<p><img src=\"/post/intellij-idea-config-vim/track_action_dark.gif\" alt=\"track_action_id\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vim搓一切\"><a href=\"#vim搓一切\" class=\"headerlink\" title=\"vim搓一切?\"></a>vim搓一切?</h1><p>有一说一,vim虽然可以配置的很舒服,但是对于<code>java</code>程序员来说,用vim去写<code>java</code>是真的折磨,除非你想进行自我折磨,变成代码仙人.<br>所以最省心的方案就是在<code>idea</code>中下一个vim插件</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>首先你要有一个 <strong>java第一</strong> IDE:<code>intellij idea</code><br>然后打开插件市场,下一个idea vimrc 安装上</p>\n<h1 id=\"配置-ideavimrc\"><a href=\"#配置-ideavimrc\" class=\"headerlink\" title=\"配置.ideavimrc\"></a>配置<code>.ideavimrc</code></h1><p>创建一个<code>~/.ideavimrc</code></p>\n<p>加入一些配置:</p>\n<div class=\"language-vim\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">vim</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">&quot;                   ____       _      ____    ___    ____</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | __ )     / \\    / ___|  |_ _|  / ___|</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |  _ \\    / _ \\   \\___ \\   | |  | |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | |_) |  / ___ \\   ___) |  | |  | |___</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |____/  /_/   \\_\\ |____/  |___|  \\____|</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; 上下预留5行</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD\">so</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">5</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; 不折叠 set nowrap</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; 去掉哔哔声</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">belloff</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">all</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">noerrorbells</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> t_vb</span><span style=\"color: #FF79C6\">=</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">backspace</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">indent,</span><span style=\"color: #8BE9FD; font-style: italic\">eol</span><span style=\"color: #F8F8F2\">,start </span><span style=\"color: #8BE9FD; font-style: italic\">whichwrap</span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\">&lt;,&gt;,[,]</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Vim 的默认寄存器和系统剪贴板共享</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">clipboard</span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\">unnamedplus</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> keep-english-</span><span style=\"color: #FF79C6\">in</span><span style=\"color: #F8F8F2\">-</span><span style=\"color: #FF79C6\">normal</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; 开启相对行</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">relativenumber</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">nu</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">ignorecase</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">smartcase</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                   ____    _       _   _    ____   ___   _   _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |  _ \\  | |     | | | |  / ___| |_ _| | \\ | |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | |_) | | |     | | | | | |  _   | |  |  \\| |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |  __/  | |___  | |_| | | |_| |  | |  | |\\  |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |_|     |_____|  \\___/   \\____| |___| |_| \\_|</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;开启多光标支持</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;machakann/vim-highlightedyank&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;vim-scripts/argtextobj.vim&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;justinmk/vim-sneak&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;easymotion/vim-easymotion&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;unblevable/quick-scope&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;preservim/nerdtree&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;tpope/vim-commentary&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;USAGE </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; add surround</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; ys&#123;textobject motion&#125;&#123;indeifier&#125;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; eg:</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;   ysiw&#39;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; remove surround </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; ds&#39;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; change surround </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; cs[(</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;tpope/vim-surround&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;USAGE </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; [count][&quot;x]gr&#123;motion&#125;   Replace &#123;motion&#125; text with the contents of register x.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                         Especially when using the unnamed register, this is</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                         quicker than &quot;_d&#123;motion&#125;P or &quot;_c&#123;motion&#125;&lt;C-R&gt;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; [count][&quot;x]grr          Replace [count] lines with the contents of register x.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                         To replace from the cursor position to the end of the</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                         line use [&quot;x]gr$</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; &#123;Visual&#125;[&quot;x]gr          Replace the selection with the contents of register x.&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;vim-scripts/ReplaceWithRegister&#39;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; USAGE </span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; cx</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; On the first use, define the first &#123;motion&#125; to exchange. On the second use, define the second &#123;motion&#125; and perform the exchange.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; cxx</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Like cx, but use the current line.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; X</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Like cx, but for Visual mode.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; cxc</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Clear any &#123;motion&#125; pending for exchange.</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;tommcdo/vim-exchange&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">Plug</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;terryma/vim-multiple-cursors&#39;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; quick-scop cofnig</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:qs_highlight_on_keys </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> [</span><span style=\"color: #F1FA8C\">&#39;f&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;F&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;t&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;T&#39;</span><span style=\"color: #F8F8F2\">]</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:qs_accepted_chars </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> [</span><span style=\"color: #F1FA8C\">&#39;a&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;b&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;c&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;d&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;e&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;f&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;g&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;h&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;i&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;j&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;k&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;l&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;m&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;n&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;o&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;p&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;q&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;r&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;s&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;t&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;u&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;v&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;w&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;x&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;y&#39;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #F1FA8C\">&#39;z&#39;</span><span style=\"color: #F8F8F2\">] </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; https://github.com/JetBrains/ideavim/wiki/ideajoin-examples</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> ideajoin</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">set</span><span style=\"color: #F8F8F2\"> sneak</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                   _  __  _____  __   __  __  __      _      ____</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | |/ / | ____| \\ \\ / / |  \\/  |    / \\    |  _ \\</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | &#39; /  |  _|    \\ V /  | |\\/| |   / _ \\   | |_) |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  | . \\  | |___    | |   | |  | |  / ___ \\  |  __/</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot;                  |_|\\_\\ |_____|   |_|   |_|  |_| /_/   \\_\\ |_|</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; basic key map </span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-e</span><span style=\"color: #F8F8F2\">&gt; &lt;END&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-a</span><span style=\"color: #F8F8F2\">&gt; &lt;HOME&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-f</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Right</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-b</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Left</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-n</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Down</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-p</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Up</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">M-f</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">S-R</span><span style=\"color: #F8F8F2\">ight&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">M-b</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">S-L</span><span style=\"color: #F8F8F2\">eft&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-k</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">ESC</span><span style=\"color: #F8F8F2\">&gt;d$i</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">inoremap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-d</span><span style=\"color: #F8F8F2\">&gt; &lt;</span><span style=\"color: #BD93F9\">Del</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> mapleader</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F1FA8C\">&quot; &quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; idea action config</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nnoremap</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">gd</span><span style=\"color: #F8F8F2\"> &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoDeclaration</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nnoremap</span><span style=\"color: #F8F8F2\"> gi &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoImplementation</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nnoremap</span><span style=\"color: #F8F8F2\"> gs &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoSuperMethod</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nnoremap</span><span style=\"color: #F8F8F2\"> gt &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoTypeDeclaration</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;</span><span style=\"color: #8BE9FD; font-style: italic\">re</span><span style=\"color: #F8F8F2\">  &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">RenameElement</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;gf &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoFile</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;gt &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoSymbol</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;f: &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">GotoAction</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;f. &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">FindInPath</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;fl &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">RecentLocations</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;</span><span style=\"color: #8BE9FD; font-style: italic\">ff</span><span style=\"color: #F8F8F2\">  &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">RecentFiles</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;</span><span style=\"color: #8BE9FD; font-style: italic\">et</span><span style=\"color: #F8F8F2\"> :NERDTreeToggle&lt;</span><span style=\"color: #BD93F9\">CR</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;</span><span style=\"color: #8BE9FD; font-style: italic\">ef</span><span style=\"color: #F8F8F2\"> :NERDTreeFocus&lt;</span><span style=\"color: #BD93F9\">CR</span><span style=\"color: #F8F8F2\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">map</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">leader</span><span style=\"color: #F8F8F2\">&gt;es &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">FileStructurePopup</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">nmap</span><span style=\"color: #F8F8F2\"> &lt;</span><span style=\"color: #BD93F9\">C-W</span><span style=\"color: #F8F8F2\">&gt;q &lt;Action&gt;(</span><span style=\"color: #FFB86C; font-style: italic\">CloseAllEditors</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; plugin config </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_use_default_mapping</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">&quot; Default mapping</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_start_word_key      </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;C-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_select_all_word_key </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;A-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_start_key           </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;g&lt;C-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_select_all_key      </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;g&lt;A-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_next_key            </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;C-n&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_prev_key            </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;C-p&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_skip_key            </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;C-x&gt;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">let</span><span style=\"color: #F8F8F2\"> g:multi_cursor_quit_key            </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&#39;&lt;Esc&gt;&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre></div><h1 id=\"让其生效\"><a href=\"#让其生效\" class=\"headerlink\" title=\"让其生效\"></a>让其生效</h1><p>打开idea,source一下</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">source</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">~/.ideavimrc</span></span></code></pre></div><h1 id=\"FBI-WARNING\"><a href=\"#FBI-WARNING\" class=\"headerlink\" title=\"FBI WARNING\"></a>FBI WARNING</h1><ol>\n<li><code>.ideavimrc</code>里面有一些插件是要在idea中也要下载对应的插件才能使用的,具体参考<a href=\"https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins\">这里</a></li>\n<li><code>map &lt;leader&gt;f: &lt;Action&gt;(GotoAction)</code> 这种形式是在调用<code>idea</code>的原生功能,具体有哪些功能,可以参考<a href=\"https://github.com/JetBrains/ideavim\">这里</a>,可以打开<code>ideavim</code>的插件,查看对应操作的<code>&lt;ActionId&gt;</code></li>\n</ol>\n<p><img src=\"/post/intellij-idea-config-vim/track_action_dark.gif\" alt=\"track_action_id\"></p>\n"},{"title":"java byte array 转String在转回byte array不相等","cover":"https://source.unsplash.com/AtccjBkdl-I/1200x628","date":"2023-09-21T12:39:21.000Z","abstracts":"java byte array 转String在转回byte array不相等","feature":true,"_content":"\n\n# 背景\n\n最近在搞微软的`NBFS`协议,这个协议实际上也是基于`WebService`,只不过对`xml`进行了压缩,按照他自己的编码规则进行压缩\n网上搜罗一圈后发现有个大佬写好的`burp`的`NBFS`插件[WCF-Binary-SOAP-Plug-In](https://github.com/GDSSecurity/WCF-Binary-SOAP-Plug-In)\n这个插件会将传入的经过`base64`编码的`xml`转换成`NBFS`协议的`base64`编码的字符串\n\n测试那边要使用`jmeter`对这个`NBFS`接口性能测试\n基本思路:\n- 新建`http request`输入原始的`xml`\n- 搞一个`PreProcessor`,调用大佬写的`NBFS.exe`获取压缩后的`XML`base64编码的字符串\n\n\n\nPreProcessor 代码如下\n```groovy\nimport org.apache.commons.codec.binary.Base64;\n\n// 获取请求体数据\ndef requestBody = sampler.getArguments().getArgument(0).getValue();\n\n// 检查请求体是否存在\nif (requestBody != null) {\n    log.info(\"获取到请求体:{}\",requestBody)\n    // 进行加密操作，这里使用Base64编码作为示例\n    def reqBase64Str = Base64.encodeBase64String(requestBody.getBytes());\n    def process = Runtime.getRuntime().exec(\"./NBFS.exe\",\"encode\",reqBase64Str)\n    process.waitFor()\n    def nbfsEncodeBase64Str = process.inputStream.text\n    def result = Base64.decodeBase64(nbfsEncodeBase64Str)\n    // 将加密后的数据设置回请求体\n    sampler.getArguments().getArgument(0).setValue(new String(result));\n} else {\n    log.warn(\"请求体不存在\");\n}\n\n```\n\n这时候就会发现一个神奇的东西,接口会返回`400`错误\n\n\n# 问题分析\n\n\n先说明下`NBFS`编码的原理,为了压缩`xml`,`NBFS`会预先定义一些字典,比如:`0x90`代表`Reason`这个字符,\n也就是说,经过`NBFS.exe`返回的`Base64`字符串经过`Base64.decodeBase64(nbfsEncodeBase64Str)`这个方法返回的byte数组中可能出现`0x80,0xAA`等字节\n\n众所周知,java默认的字符串编码是`UTF-8`\n\n另一个常识是:java字符串是由`Char[]`表示的,而`Char`是由`unicode`表示\n\nok,有了上面的已知条件,返回400的问题,就是解释为什么下面代码输出是`false`就行了\n\n\n```java\n      byte[] byteArray = new byte[]{0x01, (byte)0x81, (byte)0xAA, 0x44, 0x45};\n      String str = new String(byteArray);\n      byte [] revertByteArray = str.getBytes();\n      System.out.println(Arrays.equals(byteArray,revertByteArray));\n```\n\n其实断点调试下,会发现其实`revertByteArray`这个数组其实是:`[1, -17, -65, -67, -17, -65, -67, 68, 69]`而原数组是:`[1, -128, -86, 68, 69]`\n区别就是多出了6个byte,其中`0x81`,`0xAA`对应变成`[-17,-65,-67]`,对应10进制的65533,对应的unicde就是:`\\uFFFD`\n\n\n接下来就分析一下为什么`0x81`为什么会变成`[-17,-65,-67]`这玩意就行了\n\n\n# debug大法\n\n\n对`new String(byteArr)`这段代码开始debug,\n就会发现最终会进入一个超长的方法:\n\n`sun.nio.cs.UTF_8.Decoder#decode`:\n\n```java\n// da 就是字符串找保存的char[]\n// sa 就是String构造函数传进来的byte 数组\n// 就是这个方法将byte [] -> char []\n// sp 是0,应该是偏移量,      String str = new String(byteArray,1,1,\"UTF-8\");这么创建字符串才会有,这个不重要,\n// len就是byte数组的长度\npublic int decode(byte[] sa, int sp, int len, char[] da) {\n            final int sl = sp + len;\n            int dp = 0;\n            int dlASCII = Math.min(len, da.length);\n            ByteBuffer bb = null;  // only necessary if malformed\n\n            // ASCII only optimized loop\n            //性能优化,>= 0的意思就是byte没有溢出,也就是:0~128,对应就是0x00 到 0x00 0x80\n            while (dp < dlASCII && sa[sp] >= 0)\n                da[dp++] = (char) sa[sp++];\n\n            //下面就是范围判断,判断byte是否在utf8的编码范围内\n            while (sp < sl) {\n                int b1 = sa[sp++];\n                if (b1 >= 0) {\n                    // 1 byte, 7 bits: 0xxxxxxx\n                    da[dp++] = (char) b1;\n                } else if ((b1 >> 5) == -2 && (b1 & 0x1e) != 0) {\n                    // 2 bytes, 11 bits: 110xxxxx 10xxxxxx\n                    .\n                    .\n                    .\n                } else if ((b1 >> 4) == -2) {\n                    // 3 bytes, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx\n                    .\n                    .\n                    .\n                } else if ((b1 >> 3) == -2) {\n                    // 4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n                    .\n                    .\n                    .\n                } else {\n                    if (malformedInputAction() != CodingErrorAction.REPLACE)\n                        return -1;\n                    da[dp++] = replacement().charAt(0);\n                }\n            }\n            return dp;\n        }\n```\n\n\n\n上面代码翻译成人话就是:\n循环byte数组里面的每一个byte\n1. 如果>=0,就是ASCII\n2. 如果不是,判断是否符合条件:\n    1. 1 byte, 7 bits: 0xxxxxxx\n    2. 2 bytes, 11 bits: 110xxxxx 10xxxxxx\n    3. 3 bytes, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx\n    4. 4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n3. 如果都不符合,就返回`replacement()`第0个char(打断点看,这个字符其实就是main类启动时创建的,其实这就是'65533'也就是`\\uFFFD`)\n\n\n至此,真相大白\n\n`0x80`->`0b10000000`\n`0x88`->`0b10010000`\n\n都不在上面的范围,所以他们最终的`char`最终都会变成`65533`(`\\uFFFD`)\n\n其实上面的规则就是`UTF-8`规则,参考[维基百科](https://zh.wikipedia.org/wiki/UTF-8):\n\n>   在ASCII码的范围，用一个字节表示，超出ASCII码的范围就用字节表示，这就形成了我们上面看到的UTF-8的表示方法，这样的好处是当UNICODE文件中只有ASCII码时，存储的文件都为一个字节，所以就是普通的ASCII文件无异，读取的时候也是如此，所以能与以前的ASCII文件兼容。\n>   大于ASCII码的，就会由上面的第一字节的前几位表示该unicode字符的长度，比如110xxxxx前三位的二进制表示告诉我们这是个2BYTE的UNICODE字符；1110xxxx是个三位的UNICODE字符，依此类推；xxx的位置由字符编码数的二进制表示的位填入。越靠右的x具有越少的特殊意义。只用最短的那个足够表达一个字符编码数的多字节串。注意在多字节串中，第一个字节的开头\"1\"的数目就是整个串中字节的数目。\n\n\n\n# 太长不看\n\n一句话总结:因为类似`0x80`,`0x88`等字节不在`utf-8`编码范围内,所以会返回一个默认字符,`\\uFFFD`(65533),这个字符占3个字节,所以就造成的两个byte数组不相等\n\n# 解决方法\n\n解决方法很简单:\n找一个编码覆盖`0x00` 到 `0xff`,并且只用一个字节编码的编码格式就行,\n没错,就是你-`ISO-8859-1`!\n\n所以下面代码输出就是`true`\n\n```java\n      byte[] byteArray = new byte[]{0x01, (byte)0x81, (byte)0xAA, 0x44, 0x45};\n      String str = new String(byteArray,\"ISO-8859-1\");\n      byte [] revertByteArray = str.getBytes(\"ISO-8859-1\");\n      System.out.println(Arrays.equals(byteArray,revertByteArray));\n```\n\n","source":"_posts/java-byte-convert-string-not-equal.md","raw":"---\ntitle: java byte array 转String在转回byte array不相等\ntags:\n  - java\n  - encode\ncategories:\n  - java\ncover: https://source.unsplash.com/AtccjBkdl-I/1200x628\ndate: 2023-09-21 20:39:21\nabstracts: java byte array 转String在转回byte array不相等\nfeature: true\n---\n\n\n# 背景\n\n最近在搞微软的`NBFS`协议,这个协议实际上也是基于`WebService`,只不过对`xml`进行了压缩,按照他自己的编码规则进行压缩\n网上搜罗一圈后发现有个大佬写好的`burp`的`NBFS`插件[WCF-Binary-SOAP-Plug-In](https://github.com/GDSSecurity/WCF-Binary-SOAP-Plug-In)\n这个插件会将传入的经过`base64`编码的`xml`转换成`NBFS`协议的`base64`编码的字符串\n\n测试那边要使用`jmeter`对这个`NBFS`接口性能测试\n基本思路:\n- 新建`http request`输入原始的`xml`\n- 搞一个`PreProcessor`,调用大佬写的`NBFS.exe`获取压缩后的`XML`base64编码的字符串\n\n\n\nPreProcessor 代码如下\n```groovy\nimport org.apache.commons.codec.binary.Base64;\n\n// 获取请求体数据\ndef requestBody = sampler.getArguments().getArgument(0).getValue();\n\n// 检查请求体是否存在\nif (requestBody != null) {\n    log.info(\"获取到请求体:{}\",requestBody)\n    // 进行加密操作，这里使用Base64编码作为示例\n    def reqBase64Str = Base64.encodeBase64String(requestBody.getBytes());\n    def process = Runtime.getRuntime().exec(\"./NBFS.exe\",\"encode\",reqBase64Str)\n    process.waitFor()\n    def nbfsEncodeBase64Str = process.inputStream.text\n    def result = Base64.decodeBase64(nbfsEncodeBase64Str)\n    // 将加密后的数据设置回请求体\n    sampler.getArguments().getArgument(0).setValue(new String(result));\n} else {\n    log.warn(\"请求体不存在\");\n}\n\n```\n\n这时候就会发现一个神奇的东西,接口会返回`400`错误\n\n\n# 问题分析\n\n\n先说明下`NBFS`编码的原理,为了压缩`xml`,`NBFS`会预先定义一些字典,比如:`0x90`代表`Reason`这个字符,\n也就是说,经过`NBFS.exe`返回的`Base64`字符串经过`Base64.decodeBase64(nbfsEncodeBase64Str)`这个方法返回的byte数组中可能出现`0x80,0xAA`等字节\n\n众所周知,java默认的字符串编码是`UTF-8`\n\n另一个常识是:java字符串是由`Char[]`表示的,而`Char`是由`unicode`表示\n\nok,有了上面的已知条件,返回400的问题,就是解释为什么下面代码输出是`false`就行了\n\n\n```java\n      byte[] byteArray = new byte[]{0x01, (byte)0x81, (byte)0xAA, 0x44, 0x45};\n      String str = new String(byteArray);\n      byte [] revertByteArray = str.getBytes();\n      System.out.println(Arrays.equals(byteArray,revertByteArray));\n```\n\n其实断点调试下,会发现其实`revertByteArray`这个数组其实是:`[1, -17, -65, -67, -17, -65, -67, 68, 69]`而原数组是:`[1, -128, -86, 68, 69]`\n区别就是多出了6个byte,其中`0x81`,`0xAA`对应变成`[-17,-65,-67]`,对应10进制的65533,对应的unicde就是:`\\uFFFD`\n\n\n接下来就分析一下为什么`0x81`为什么会变成`[-17,-65,-67]`这玩意就行了\n\n\n# debug大法\n\n\n对`new String(byteArr)`这段代码开始debug,\n就会发现最终会进入一个超长的方法:\n\n`sun.nio.cs.UTF_8.Decoder#decode`:\n\n```java\n// da 就是字符串找保存的char[]\n// sa 就是String构造函数传进来的byte 数组\n// 就是这个方法将byte [] -> char []\n// sp 是0,应该是偏移量,      String str = new String(byteArray,1,1,\"UTF-8\");这么创建字符串才会有,这个不重要,\n// len就是byte数组的长度\npublic int decode(byte[] sa, int sp, int len, char[] da) {\n            final int sl = sp + len;\n            int dp = 0;\n            int dlASCII = Math.min(len, da.length);\n            ByteBuffer bb = null;  // only necessary if malformed\n\n            // ASCII only optimized loop\n            //性能优化,>= 0的意思就是byte没有溢出,也就是:0~128,对应就是0x00 到 0x00 0x80\n            while (dp < dlASCII && sa[sp] >= 0)\n                da[dp++] = (char) sa[sp++];\n\n            //下面就是范围判断,判断byte是否在utf8的编码范围内\n            while (sp < sl) {\n                int b1 = sa[sp++];\n                if (b1 >= 0) {\n                    // 1 byte, 7 bits: 0xxxxxxx\n                    da[dp++] = (char) b1;\n                } else if ((b1 >> 5) == -2 && (b1 & 0x1e) != 0) {\n                    // 2 bytes, 11 bits: 110xxxxx 10xxxxxx\n                    .\n                    .\n                    .\n                } else if ((b1 >> 4) == -2) {\n                    // 3 bytes, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx\n                    .\n                    .\n                    .\n                } else if ((b1 >> 3) == -2) {\n                    // 4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n                    .\n                    .\n                    .\n                } else {\n                    if (malformedInputAction() != CodingErrorAction.REPLACE)\n                        return -1;\n                    da[dp++] = replacement().charAt(0);\n                }\n            }\n            return dp;\n        }\n```\n\n\n\n上面代码翻译成人话就是:\n循环byte数组里面的每一个byte\n1. 如果>=0,就是ASCII\n2. 如果不是,判断是否符合条件:\n    1. 1 byte, 7 bits: 0xxxxxxx\n    2. 2 bytes, 11 bits: 110xxxxx 10xxxxxx\n    3. 3 bytes, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx\n    4. 4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n3. 如果都不符合,就返回`replacement()`第0个char(打断点看,这个字符其实就是main类启动时创建的,其实这就是'65533'也就是`\\uFFFD`)\n\n\n至此,真相大白\n\n`0x80`->`0b10000000`\n`0x88`->`0b10010000`\n\n都不在上面的范围,所以他们最终的`char`最终都会变成`65533`(`\\uFFFD`)\n\n其实上面的规则就是`UTF-8`规则,参考[维基百科](https://zh.wikipedia.org/wiki/UTF-8):\n\n>   在ASCII码的范围，用一个字节表示，超出ASCII码的范围就用字节表示，这就形成了我们上面看到的UTF-8的表示方法，这样的好处是当UNICODE文件中只有ASCII码时，存储的文件都为一个字节，所以就是普通的ASCII文件无异，读取的时候也是如此，所以能与以前的ASCII文件兼容。\n>   大于ASCII码的，就会由上面的第一字节的前几位表示该unicode字符的长度，比如110xxxxx前三位的二进制表示告诉我们这是个2BYTE的UNICODE字符；1110xxxx是个三位的UNICODE字符，依此类推；xxx的位置由字符编码数的二进制表示的位填入。越靠右的x具有越少的特殊意义。只用最短的那个足够表达一个字符编码数的多字节串。注意在多字节串中，第一个字节的开头\"1\"的数目就是整个串中字节的数目。\n\n\n\n# 太长不看\n\n一句话总结:因为类似`0x80`,`0x88`等字节不在`utf-8`编码范围内,所以会返回一个默认字符,`\\uFFFD`(65533),这个字符占3个字节,所以就造成的两个byte数组不相等\n\n# 解决方法\n\n解决方法很简单:\n找一个编码覆盖`0x00` 到 `0xff`,并且只用一个字节编码的编码格式就行,\n没错,就是你-`ISO-8859-1`!\n\n所以下面代码输出就是`true`\n\n```java\n      byte[] byteArray = new byte[]{0x01, (byte)0x81, (byte)0xAA, 0x44, 0x45};\n      String str = new String(byteArray,\"ISO-8859-1\");\n      byte [] revertByteArray = str.getBytes(\"ISO-8859-1\");\n      System.out.println(Arrays.equals(byteArray,revertByteArray));\n```\n\n","slug":"java-byte-convert-string-not-equal","published":1,"updated":"2023-09-21T15:02:33.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmyzfc6a0007e2rr8or68g6l","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>最近在搞微软的<code>NBFS</code>协议,这个协议实际上也是基于<code>WebService</code>,只不过对<code>xml</code>进行了压缩,按照他自己的编码规则进行压缩<br>网上搜罗一圈后发现有个大佬写好的<code>burp</code>的<code>NBFS</code>插件<a href=\"https://github.com/GDSSecurity/WCF-Binary-SOAP-Plug-In\">WCF-Binary-SOAP-Plug-In</a><br>这个插件会将传入的经过<code>base64</code>编码的<code>xml</code>转换成<code>NBFS</code>协议的<code>base64</code>编码的字符串</p>\n<p>测试那边要使用<code>jmeter</code>对这个<code>NBFS</code>接口性能测试<br>基本思路:</p>\n<ul>\n<li>新建<code>http request</code>输入原始的<code>xml</code></li>\n<li>搞一个<code>PreProcessor</code>,调用大佬写的<code>NBFS.exe</code>获取压缩后的<code>XML</code>base64编码的字符串</li>\n</ul>\n<p>PreProcessor 代码如下</p>\n<div class=\"language-groovy\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">groovy</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">import</span><span style=\"color: #F8F8F2\"> org.apache.commons.codec.binary.Base64;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 获取请求体数据</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> requestBody </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> sampler.</span><span style=\"color: #50FA7B\">getArguments</span><span style=\"color: #F8F8F2\">().</span><span style=\"color: #50FA7B\">getArgument</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">getValue</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 检查请求体是否存在</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (requestBody </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">null</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    log.</span><span style=\"color: #50FA7B\">info</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">获取到请求体:&#123;&#125;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,requestBody)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\">// 进行加密操作，这里使用Base64编码作为示例</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> reqBase64Str </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Base64</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">encodeBase64String</span><span style=\"color: #F8F8F2\">(requestBody.</span><span style=\"color: #50FA7B\">getBytes</span><span style=\"color: #F8F8F2\">());</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> process </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Runtime</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">getRuntime</span><span style=\"color: #F8F8F2\">().</span><span style=\"color: #50FA7B\">exec</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">./NBFS.exe</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">encode</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,reqBase64Str)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    process.</span><span style=\"color: #50FA7B\">waitFor</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> nbfsEncodeBase64Str </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> process.inputStream.text</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> result </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Base64</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">decodeBase64</span><span style=\"color: #F8F8F2\">(nbfsEncodeBase64Str)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\">// 将加密后的数据设置回请求体</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    sampler.</span><span style=\"color: #50FA7B\">getArguments</span><span style=\"color: #F8F8F2\">().</span><span style=\"color: #50FA7B\">getArgument</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">setValue</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">String</span><span style=\"color: #F8F8F2\">(result));</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    log.</span><span style=\"color: #50FA7B\">warn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">请求体不存在</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>这时候就会发现一个神奇的东西,接口会返回<code>400</code>错误</p>\n<h1 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h1><p>先说明下<code>NBFS</code>编码的原理,为了压缩<code>xml</code>,<code>NBFS</code>会预先定义一些字典,比如:<code>0x90</code>代表<code>Reason</code>这个字符,<br>也就是说,经过<code>NBFS.exe</code>返回的<code>Base64</code>字符串经过<code>Base64.decodeBase64(nbfsEncodeBase64Str)</code>这个方法返回的byte数组中可能出现<code>0x80,0xAA</code>等字节</p>\n<p>众所周知,java默认的字符串编码是<code>UTF-8</code></p>\n<p>另一个常识是:java字符串是由<code>Char[]</code>表示的,而<code>Char</code>是由<code>unicode</code>表示</p>\n<p>ok,有了上面的已知条件,返回400的问题,就是解释为什么下面代码输出是<code>false</code>就行了</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[] byteArray </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[]&#123;</span><span style=\"color: #BD93F9\">0x01</span><span style=\"color: #F8F8F2\">, (</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #BD93F9\">0x81</span><span style=\"color: #F8F8F2\">, (</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #BD93F9\">0xAA</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0x44</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0x45</span><span style=\"color: #F8F8F2\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">String</span><span style=\"color: #F8F8F2\"> str </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">String</span><span style=\"color: #F8F8F2\">(byteArray);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\"> [] revertByteArray </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> str.</span><span style=\"color: #50FA7B\">getBytes</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      System.out.</span><span style=\"color: #50FA7B\">println</span><span style=\"color: #F8F8F2\">(Arrays.</span><span style=\"color: #50FA7B\">equals</span><span style=\"color: #F8F8F2\">(byteArray,revertByteArray));</span></span></code></pre></div><p>其实断点调试下,会发现其实<code>revertByteArray</code>这个数组其实是:<code>[1, -17, -65, -67, -17, -65, -67, 68, 69]</code>而原数组是:<code>[1, -128, -86, 68, 69]</code><br>区别就是多出了6个byte,其中<code>0x81</code>,<code>0xAA</code>对应变成<code>[-17,-65,-67]</code>,对应10进制的65533,对应的unicde就是:<code>\\uFFFD</code></p>\n<p>接下来就分析一下为什么<code>0x81</code>为什么会变成<code>[-17,-65,-67]</code>这玩意就行了</p>\n<h1 id=\"debug大法\"><a href=\"#debug大法\" class=\"headerlink\" title=\"debug大法\"></a>debug大法</h1><p>对<code>new String(byteArr)</code>这段代码开始debug,<br>就会发现最终会进入一个超长的方法:</p>\n<p><code>sun.nio.cs.UTF_8.Decoder#decode</code>:</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// da 就是字符串找保存的char[]</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// sa 就是String构造函数传进来的byte 数组</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 就是这个方法将byte [] -&gt; char []</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// sp 是0,应该是偏移量,      String str = new String(byteArray,1,1,&quot;UTF-8&quot;);这么创建字符串才会有,这个不重要,</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// len就是byte数组的长度</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">public</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">decode</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[] sa, </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> sp, </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> len, </span><span style=\"color: #8BE9FD; font-style: italic\">char</span><span style=\"color: #F8F8F2\">[] da) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">final</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> sl </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> sp </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> len;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> dp </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> dlASCII </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> Math.</span><span style=\"color: #50FA7B\">min</span><span style=\"color: #F8F8F2\">(len, da.length);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FD; font-style: italic\">ByteBuffer</span><span style=\"color: #F8F8F2\"> bb </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">null</span><span style=\"color: #F8F8F2\">;  </span><span style=\"color: #6272A4\">// only necessary if malformed</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #6272A4\">// ASCII only optimized loop</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #6272A4\">//性能优化,&gt;= 0的意思就是byte没有溢出,也就是:0~128,对应就是0x00 到 0x00 0x80</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (dp </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> dlASCII </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> sa[sp] </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                da[dp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #8BE9FD; font-style: italic\">char</span><span style=\"color: #F8F8F2\">) sa[sp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #6272A4\">//下面就是范围判断,判断byte是否在utf8的编码范围内</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (sp </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> sl) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> b1 </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> sa[sp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (b1 </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #6272A4\">// 1 byte, 7 bits: 0xxxxxxx</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    da[dp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #8BE9FD; font-style: italic\">char</span><span style=\"color: #F8F8F2\">) b1;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> ((b1 </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">5</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> (b1 </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0x1e</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #6272A4\">// 2 bytes, 11 bits: 110xxxxx 10xxxxxx</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> ((b1 </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">4</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #6272A4\">// 3 bytes, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> ((b1 </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">3</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #6272A4\">// 4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">malformedInputAction</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> CodingErrorAction.REPLACE)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    da[dp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">replacement</span><span style=\"color: #F8F8F2\">().</span><span style=\"color: #50FA7B\">charAt</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> dp;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span></code></pre></div><p>上面代码翻译成人话就是:<br>循环byte数组里面的每一个byte</p>\n<ol>\n<li>如果&gt;&#x3D;0,就是ASCII</li>\n<li>如果不是,判断是否符合条件:<ol>\n<li>1 byte, 7 bits: 0xxxxxxx</li>\n<li>2 bytes, 11 bits: 110xxxxx 10xxxxxx</li>\n<li>3 bytes, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx</li>\n<li>4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</li>\n</ol>\n</li>\n<li>如果都不符合,就返回<code>replacement()</code>第0个char(打断点看,这个字符其实就是main类启动时创建的,其实这就是’65533’也就是<code>\\uFFFD</code>)</li>\n</ol>\n<p>至此,真相大白</p>\n<p><code>0x80</code>-&gt;<code>0b10000000</code><br><code>0x88</code>-&gt;<code>0b10010000</code></p>\n<p>都不在上面的范围,所以他们最终的<code>char</code>最终都会变成<code>65533</code>(<code>\\uFFFD</code>)</p>\n<p>其实上面的规则就是<code>UTF-8</code>规则,参考<a href=\"https://zh.wikipedia.org/wiki/UTF-8\">维基百科</a>:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>  在ASCII码的范围，用一个字节表示，超出ASCII码的范围就用字节表示，这就形成了我们上面看到的UTF-8的表示方法，这样的好处是当UNICODE文件中只有ASCII码时，存储的文件都为一个字节，所以就是普通的ASCII文件无异，读取的时候也是如此，所以能与以前的ASCII文件兼容。<br>  大于ASCII码的，就会由上面的第一字节的前几位表示该unicode字符的长度，比如110xxxxx前三位的二进制表示告诉我们这是个2BYTE的UNICODE字符；1110xxxx是个三位的UNICODE字符，依此类推；xxx的位置由字符编码数的二进制表示的位填入。越靠右的x具有越少的特殊意义。只用最短的那个足够表达一个字符编码数的多字节串。注意在多字节串中，第一个字节的开头”1”的数目就是整个串中字节的数目。</p></blockquote>\n<h1 id=\"太长不看\"><a href=\"#太长不看\" class=\"headerlink\" title=\"太长不看\"></a>太长不看</h1><p>一句话总结:因为类似<code>0x80</code>,<code>0x88</code>等字节不在<code>utf-8</code>编码范围内,所以会返回一个默认字符,<code>\\uFFFD</code>(65533),这个字符占3个字节,所以就造成的两个byte数组不相等</p>\n<h1 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h1><p>解决方法很简单:<br>找一个编码覆盖<code>0x00</code> 到 <code>0xff</code>,并且只用一个字节编码的编码格式就行,<br>没错,就是你-<code>ISO-8859-1</code>!</p>\n<p>所以下面代码输出就是<code>true</code></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[] byteArray </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[]&#123;</span><span style=\"color: #BD93F9\">0x01</span><span style=\"color: #F8F8F2\">, (</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #BD93F9\">0x81</span><span style=\"color: #F8F8F2\">, (</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #BD93F9\">0xAA</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0x44</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0x45</span><span style=\"color: #F8F8F2\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">String</span><span style=\"color: #F8F8F2\"> str </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">String</span><span style=\"color: #F8F8F2\">(byteArray,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">ISO-8859-1</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\"> [] revertByteArray </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> str.</span><span style=\"color: #50FA7B\">getBytes</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">ISO-8859-1</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      System.out.</span><span style=\"color: #50FA7B\">println</span><span style=\"color: #F8F8F2\">(Arrays.</span><span style=\"color: #50FA7B\">equals</span><span style=\"color: #F8F8F2\">(byteArray,revertByteArray));</span></span></code></pre></div>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>最近在搞微软的<code>NBFS</code>协议,这个协议实际上也是基于<code>WebService</code>,只不过对<code>xml</code>进行了压缩,按照他自己的编码规则进行压缩<br>网上搜罗一圈后发现有个大佬写好的<code>burp</code>的<code>NBFS</code>插件<a href=\"https://github.com/GDSSecurity/WCF-Binary-SOAP-Plug-In\">WCF-Binary-SOAP-Plug-In</a><br>这个插件会将传入的经过<code>base64</code>编码的<code>xml</code>转换成<code>NBFS</code>协议的<code>base64</code>编码的字符串</p>\n<p>测试那边要使用<code>jmeter</code>对这个<code>NBFS</code>接口性能测试<br>基本思路:</p>\n<ul>\n<li>新建<code>http request</code>输入原始的<code>xml</code></li>\n<li>搞一个<code>PreProcessor</code>,调用大佬写的<code>NBFS.exe</code>获取压缩后的<code>XML</code>base64编码的字符串</li>\n</ul>\n<p>PreProcessor 代码如下</p>\n<div class=\"language-groovy\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">groovy</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">import</span><span style=\"color: #F8F8F2\"> org.apache.commons.codec.binary.Base64;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 获取请求体数据</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> requestBody </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> sampler.</span><span style=\"color: #50FA7B\">getArguments</span><span style=\"color: #F8F8F2\">().</span><span style=\"color: #50FA7B\">getArgument</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">getValue</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 检查请求体是否存在</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (requestBody </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">null</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    log.</span><span style=\"color: #50FA7B\">info</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">获取到请求体:&#123;&#125;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,requestBody)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\">// 进行加密操作，这里使用Base64编码作为示例</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> reqBase64Str </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Base64</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">encodeBase64String</span><span style=\"color: #F8F8F2\">(requestBody.</span><span style=\"color: #50FA7B\">getBytes</span><span style=\"color: #F8F8F2\">());</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> process </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Runtime</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">getRuntime</span><span style=\"color: #F8F8F2\">().</span><span style=\"color: #50FA7B\">exec</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">./NBFS.exe</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">encode</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,reqBase64Str)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    process.</span><span style=\"color: #50FA7B\">waitFor</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> nbfsEncodeBase64Str </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> process.inputStream.text</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">def</span><span style=\"color: #F8F8F2\"> result </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Base64</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">decodeBase64</span><span style=\"color: #F8F8F2\">(nbfsEncodeBase64Str)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\">// 将加密后的数据设置回请求体</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    sampler.</span><span style=\"color: #50FA7B\">getArguments</span><span style=\"color: #F8F8F2\">().</span><span style=\"color: #50FA7B\">getArgument</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">setValue</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">String</span><span style=\"color: #F8F8F2\">(result));</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    log.</span><span style=\"color: #50FA7B\">warn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">请求体不存在</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>这时候就会发现一个神奇的东西,接口会返回<code>400</code>错误</p>\n<h1 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h1><p>先说明下<code>NBFS</code>编码的原理,为了压缩<code>xml</code>,<code>NBFS</code>会预先定义一些字典,比如:<code>0x90</code>代表<code>Reason</code>这个字符,<br>也就是说,经过<code>NBFS.exe</code>返回的<code>Base64</code>字符串经过<code>Base64.decodeBase64(nbfsEncodeBase64Str)</code>这个方法返回的byte数组中可能出现<code>0x80,0xAA</code>等字节</p>\n<p>众所周知,java默认的字符串编码是<code>UTF-8</code></p>\n<p>另一个常识是:java字符串是由<code>Char[]</code>表示的,而<code>Char</code>是由<code>unicode</code>表示</p>\n<p>ok,有了上面的已知条件,返回400的问题,就是解释为什么下面代码输出是<code>false</code>就行了</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[] byteArray </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[]&#123;</span><span style=\"color: #BD93F9\">0x01</span><span style=\"color: #F8F8F2\">, (</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #BD93F9\">0x81</span><span style=\"color: #F8F8F2\">, (</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #BD93F9\">0xAA</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0x44</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0x45</span><span style=\"color: #F8F8F2\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">String</span><span style=\"color: #F8F8F2\"> str </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">String</span><span style=\"color: #F8F8F2\">(byteArray);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\"> [] revertByteArray </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> str.</span><span style=\"color: #50FA7B\">getBytes</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      System.out.</span><span style=\"color: #50FA7B\">println</span><span style=\"color: #F8F8F2\">(Arrays.</span><span style=\"color: #50FA7B\">equals</span><span style=\"color: #F8F8F2\">(byteArray,revertByteArray));</span></span></code></pre></div><p>其实断点调试下,会发现其实<code>revertByteArray</code>这个数组其实是:<code>[1, -17, -65, -67, -17, -65, -67, 68, 69]</code>而原数组是:<code>[1, -128, -86, 68, 69]</code><br>区别就是多出了6个byte,其中<code>0x81</code>,<code>0xAA</code>对应变成<code>[-17,-65,-67]</code>,对应10进制的65533,对应的unicde就是:<code>\\uFFFD</code></p>\n<p>接下来就分析一下为什么<code>0x81</code>为什么会变成<code>[-17,-65,-67]</code>这玩意就行了</p>\n<h1 id=\"debug大法\"><a href=\"#debug大法\" class=\"headerlink\" title=\"debug大法\"></a>debug大法</h1><p>对<code>new String(byteArr)</code>这段代码开始debug,<br>就会发现最终会进入一个超长的方法:</p>\n<p><code>sun.nio.cs.UTF_8.Decoder#decode</code>:</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// da 就是字符串找保存的char[]</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// sa 就是String构造函数传进来的byte 数组</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 就是这个方法将byte [] -&gt; char []</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// sp 是0,应该是偏移量,      String str = new String(byteArray,1,1,&quot;UTF-8&quot;);这么创建字符串才会有,这个不重要,</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// len就是byte数组的长度</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">public</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">decode</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[] sa, </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> sp, </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> len, </span><span style=\"color: #8BE9FD; font-style: italic\">char</span><span style=\"color: #F8F8F2\">[] da) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">final</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> sl </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> sp </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> len;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> dp </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> dlASCII </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> Math.</span><span style=\"color: #50FA7B\">min</span><span style=\"color: #F8F8F2\">(len, da.length);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FD; font-style: italic\">ByteBuffer</span><span style=\"color: #F8F8F2\"> bb </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">null</span><span style=\"color: #F8F8F2\">;  </span><span style=\"color: #6272A4\">// only necessary if malformed</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #6272A4\">// ASCII only optimized loop</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #6272A4\">//性能优化,&gt;= 0的意思就是byte没有溢出,也就是:0~128,对应就是0x00 到 0x00 0x80</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (dp </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> dlASCII </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> sa[sp] </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                da[dp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #8BE9FD; font-style: italic\">char</span><span style=\"color: #F8F8F2\">) sa[sp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #6272A4\">//下面就是范围判断,判断byte是否在utf8的编码范围内</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (sp </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> sl) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #8BE9FD; font-style: italic\">int</span><span style=\"color: #F8F8F2\"> b1 </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> sa[sp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (b1 </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #6272A4\">// 1 byte, 7 bits: 0xxxxxxx</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    da[dp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #8BE9FD; font-style: italic\">char</span><span style=\"color: #F8F8F2\">) b1;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> ((b1 </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">5</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> (b1 </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0x1e</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #6272A4\">// 2 bytes, 11 bits: 110xxxxx 10xxxxxx</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> ((b1 </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">4</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #6272A4\">// 3 bytes, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> ((b1 </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">3</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #6272A4\">// 4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    .</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125; </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">malformedInputAction</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> CodingErrorAction.REPLACE)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    da[dp</span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">replacement</span><span style=\"color: #F8F8F2\">().</span><span style=\"color: #50FA7B\">charAt</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> dp;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span></code></pre></div><p>上面代码翻译成人话就是:<br>循环byte数组里面的每一个byte</p>\n<ol>\n<li>如果&gt;&#x3D;0,就是ASCII</li>\n<li>如果不是,判断是否符合条件:<ol>\n<li>1 byte, 7 bits: 0xxxxxxx</li>\n<li>2 bytes, 11 bits: 110xxxxx 10xxxxxx</li>\n<li>3 bytes, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx</li>\n<li>4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</li>\n</ol>\n</li>\n<li>如果都不符合,就返回<code>replacement()</code>第0个char(打断点看,这个字符其实就是main类启动时创建的,其实这就是’65533’也就是<code>\\uFFFD</code>)</li>\n</ol>\n<p>至此,真相大白</p>\n<p><code>0x80</code>-&gt;<code>0b10000000</code><br><code>0x88</code>-&gt;<code>0b10010000</code></p>\n<p>都不在上面的范围,所以他们最终的<code>char</code>最终都会变成<code>65533</code>(<code>\\uFFFD</code>)</p>\n<p>其实上面的规则就是<code>UTF-8</code>规则,参考<a href=\"https://zh.wikipedia.org/wiki/UTF-8\">维基百科</a>:</p>\n<blockquote>\n<p>  在ASCII码的范围，用一个字节表示，超出ASCII码的范围就用字节表示，这就形成了我们上面看到的UTF-8的表示方法，这样的好处是当UNICODE文件中只有ASCII码时，存储的文件都为一个字节，所以就是普通的ASCII文件无异，读取的时候也是如此，所以能与以前的ASCII文件兼容。<br>  大于ASCII码的，就会由上面的第一字节的前几位表示该unicode字符的长度，比如110xxxxx前三位的二进制表示告诉我们这是个2BYTE的UNICODE字符；1110xxxx是个三位的UNICODE字符，依此类推；xxx的位置由字符编码数的二进制表示的位填入。越靠右的x具有越少的特殊意义。只用最短的那个足够表达一个字符编码数的多字节串。注意在多字节串中，第一个字节的开头”1”的数目就是整个串中字节的数目。</p>\n</blockquote>\n<h1 id=\"太长不看\"><a href=\"#太长不看\" class=\"headerlink\" title=\"太长不看\"></a>太长不看</h1><p>一句话总结:因为类似<code>0x80</code>,<code>0x88</code>等字节不在<code>utf-8</code>编码范围内,所以会返回一个默认字符,<code>\\uFFFD</code>(65533),这个字符占3个字节,所以就造成的两个byte数组不相等</p>\n<h1 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h1><p>解决方法很简单:<br>找一个编码覆盖<code>0x00</code> 到 <code>0xff</code>,并且只用一个字节编码的编码格式就行,<br>没错,就是你-<code>ISO-8859-1</code>!</p>\n<p>所以下面代码输出就是<code>true</code></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[] byteArray </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">[]&#123;</span><span style=\"color: #BD93F9\">0x01</span><span style=\"color: #F8F8F2\">, (</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #BD93F9\">0x81</span><span style=\"color: #F8F8F2\">, (</span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #BD93F9\">0xAA</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0x44</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0x45</span><span style=\"color: #F8F8F2\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">String</span><span style=\"color: #F8F8F2\"> str </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6; font-weight: bold\">new</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">String</span><span style=\"color: #F8F8F2\">(byteArray,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">ISO-8859-1</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FD; font-style: italic\">byte</span><span style=\"color: #F8F8F2\"> [] revertByteArray </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> str.</span><span style=\"color: #50FA7B\">getBytes</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">ISO-8859-1</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      System.out.</span><span style=\"color: #50FA7B\">println</span><span style=\"color: #F8F8F2\">(Arrays.</span><span style=\"color: #50FA7B\">equals</span><span style=\"color: #F8F8F2\">(byteArray,revertByteArray));</span></span></code></pre></div>"},{"title":"macos下,实现vim切换模式自动切换输入法","date":"2023-09-20T02:37:19.000Z","cover":"https://source.unsplash.com/m_HRfLhgABo/1200x628","abstracts":"macos结合使用,vim切换模式实现自动切换输入法","feature":true,"_content":"\n\n# macos下,实现vim切换模式自动切换输入法\n\n作为一个重度`vim`模式使用用户,切换模式输入法不自动切换一直是一个蛋疼的问题,目前主要解决方案就是使用`im-select`,在对应使用的应用里面设置`im-select`的路径\n但是这种方式有一个问题就是如果应用不支持,就不会自动切换\n\n另一种方式就是使用`rime`输入法,但是对于我来说配置成本太高,不划算.\n\n经过我的研究,发现`karabiner`可以实现在任意应用中使用`vim`,按下对应的模式切换键实现自动切换输入法.\n\n\n## 安装karabiner\n\n`karabiner`是mac下一个按键功能映射的软件,可以自己定义`json`文件实现许多复杂的功能的映射\n\n`brew`不解释连招\n\n```bash\nbrew install karabiner\n```\n\n## 安装im-select\n\n继续`brew`不解释连招\n\n```bash\nbrew install im-select\n```\n\n## 创建映射文件\n\n`/Users/fingerfrings/.config/karabiner/assets/complex_modifications`路径创建一个`vim-esc.json`文件\n\n文件内容如下:\n\n```json\n{\n  \"title\": \"Vim shortcuts\",\n  \"rules\": [\n     {\n      \"description\": \"Map ^+[ to esc\",\n      \"manipulators\": [\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"open_bracket\",\n            \"modifiers\": {\n              \"mandatory\": [\"control\"]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"escape\"\n            },{\n              \"shell_command\": \"/usr/local/bin/im-select com.apple.keylayout.ABC\"\n            }\n          ]\n        }\n      ]\n     },\n    \n  ]\n}\n\n```\n\n上面文件的映射内容就是将`Ctrl-[`映射为`Esc`,同时执行`/usr/local/bin/im-select com.apple.keylayout.ABC`命令\n\n## 设置karabiner\n\n在`complex Modifications`选项中启用`Map ^+[ to esc`\n\n\n## 参考文档\n[https://karabiner-elements.pqrs.org/docs](https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to/shell-command/)\n","source":"_posts/macos-vim-auto-change-input-method.md","raw":"---\ntitle: macos下,实现vim切换模式自动切换输入法\ntags:\n  - macos \n  - vim\ncategories:\n  - some litttle tricks\ndate: 2023-09-20 10:37:19\ncover: https://source.unsplash.com/m_HRfLhgABo/1200x628\nabstracts: macos结合使用,vim切换模式实现自动切换输入法\nfeature: true\n---\n\n\n# macos下,实现vim切换模式自动切换输入法\n\n作为一个重度`vim`模式使用用户,切换模式输入法不自动切换一直是一个蛋疼的问题,目前主要解决方案就是使用`im-select`,在对应使用的应用里面设置`im-select`的路径\n但是这种方式有一个问题就是如果应用不支持,就不会自动切换\n\n另一种方式就是使用`rime`输入法,但是对于我来说配置成本太高,不划算.\n\n经过我的研究,发现`karabiner`可以实现在任意应用中使用`vim`,按下对应的模式切换键实现自动切换输入法.\n\n\n## 安装karabiner\n\n`karabiner`是mac下一个按键功能映射的软件,可以自己定义`json`文件实现许多复杂的功能的映射\n\n`brew`不解释连招\n\n```bash\nbrew install karabiner\n```\n\n## 安装im-select\n\n继续`brew`不解释连招\n\n```bash\nbrew install im-select\n```\n\n## 创建映射文件\n\n`/Users/fingerfrings/.config/karabiner/assets/complex_modifications`路径创建一个`vim-esc.json`文件\n\n文件内容如下:\n\n```json\n{\n  \"title\": \"Vim shortcuts\",\n  \"rules\": [\n     {\n      \"description\": \"Map ^+[ to esc\",\n      \"manipulators\": [\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"open_bracket\",\n            \"modifiers\": {\n              \"mandatory\": [\"control\"]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"escape\"\n            },{\n              \"shell_command\": \"/usr/local/bin/im-select com.apple.keylayout.ABC\"\n            }\n          ]\n        }\n      ]\n     },\n    \n  ]\n}\n\n```\n\n上面文件的映射内容就是将`Ctrl-[`映射为`Esc`,同时执行`/usr/local/bin/im-select com.apple.keylayout.ABC`命令\n\n## 设置karabiner\n\n在`complex Modifications`选项中启用`Map ^+[ to esc`\n\n\n## 参考文档\n[https://karabiner-elements.pqrs.org/docs](https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to/shell-command/)\n","slug":"macos-vim-auto-change-input-method","published":1,"updated":"2023-09-21T14:56:36.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmyzfc6a0008e2rr571i56du","content":"<h1 id=\"macos下-实现vim切换模式自动切换输入法\"><a href=\"#macos下-实现vim切换模式自动切换输入法\" class=\"headerlink\" title=\"macos下,实现vim切换模式自动切换输入法\"></a>macos下,实现vim切换模式自动切换输入法</h1><p>作为一个重度<code>vim</code>模式使用用户,切换模式输入法不自动切换一直是一个蛋疼的问题,目前主要解决方案就是使用<code>im-select</code>,在对应使用的应用里面设置<code>im-select</code>的路径<br>但是这种方式有一个问题就是如果应用不支持,就不会自动切换</p>\n<p>另一种方式就是使用<code>rime</code>输入法,但是对于我来说配置成本太高,不划算.</p>\n<p>经过我的研究,发现<code>karabiner</code>可以实现在任意应用中使用<code>vim</code>,按下对应的模式切换键实现自动切换输入法.</p>\n<h2 id=\"安装karabiner\"><a href=\"#安装karabiner\" class=\"headerlink\" title=\"安装karabiner\"></a>安装karabiner</h2><p><code>karabiner</code>是mac下一个按键功能映射的软件,可以自己定义<code>json</code>文件实现许多复杂的功能的映射</p>\n<p><code>brew</code>不解释连招</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">brew</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">karabiner</span></span></code></pre></div><h2 id=\"安装im-select\"><a href=\"#安装im-select\" class=\"headerlink\" title=\"安装im-select\"></a>安装im-select</h2><p>继续<code>brew</code>不解释连招</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">brew</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">im-select</span></span></code></pre></div><h2 id=\"创建映射文件\"><a href=\"#创建映射文件\" class=\"headerlink\" title=\"创建映射文件\"></a>创建映射文件</h2><p><code>/Users/fingerfrings/.config/karabiner/assets/complex_modifications</code>路径创建一个<code>vim-esc.json</code>文件</p>\n<p>文件内容如下:</p>\n<div class=\"language-json\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">json</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">title</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Vim shortcuts</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">rules</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">     &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">description</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Map ^+[ to esc</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">manipulators</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">type</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">basic</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">from</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">key_code</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">open_bracket</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">modifiers</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">              </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">mandatory</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> [</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">control</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">to</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">              </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">key_code</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">escape</span><span style=\"color: #E9F284\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;,&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">              </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">shell_command</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">/usr/local/bin/im-select com.apple.keylayout.ABC</span><span style=\"color: #E9F284\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          ]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      ]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">     &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>上面文件的映射内容就是将<code>Ctrl-[</code>映射为<code>Esc</code>,同时执行<code>/usr/local/bin/im-select com.apple.keylayout.ABC</code>命令</p>\n<h2 id=\"设置karabiner\"><a href=\"#设置karabiner\" class=\"headerlink\" title=\"设置karabiner\"></a>设置karabiner</h2><p>在<code>complex Modifications</code>选项中启用<code>Map ^+[ to esc</code></p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to/shell-command/\">https://karabiner-elements.pqrs.org/docs</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"macos下-实现vim切换模式自动切换输入法\"><a href=\"#macos下-实现vim切换模式自动切换输入法\" class=\"headerlink\" title=\"macos下,实现vim切换模式自动切换输入法\"></a>macos下,实现vim切换模式自动切换输入法</h1><p>作为一个重度<code>vim</code>模式使用用户,切换模式输入法不自动切换一直是一个蛋疼的问题,目前主要解决方案就是使用<code>im-select</code>,在对应使用的应用里面设置<code>im-select</code>的路径<br>但是这种方式有一个问题就是如果应用不支持,就不会自动切换</p>\n<p>另一种方式就是使用<code>rime</code>输入法,但是对于我来说配置成本太高,不划算.</p>\n<p>经过我的研究,发现<code>karabiner</code>可以实现在任意应用中使用<code>vim</code>,按下对应的模式切换键实现自动切换输入法.</p>\n<h2 id=\"安装karabiner\"><a href=\"#安装karabiner\" class=\"headerlink\" title=\"安装karabiner\"></a>安装karabiner</h2><p><code>karabiner</code>是mac下一个按键功能映射的软件,可以自己定义<code>json</code>文件实现许多复杂的功能的映射</p>\n<p><code>brew</code>不解释连招</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">brew</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">karabiner</span></span></code></pre></div><h2 id=\"安装im-select\"><a href=\"#安装im-select\" class=\"headerlink\" title=\"安装im-select\"></a>安装im-select</h2><p>继续<code>brew</code>不解释连招</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">brew</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">im-select</span></span></code></pre></div><h2 id=\"创建映射文件\"><a href=\"#创建映射文件\" class=\"headerlink\" title=\"创建映射文件\"></a>创建映射文件</h2><p><code>/Users/fingerfrings/.config/karabiner/assets/complex_modifications</code>路径创建一个<code>vim-esc.json</code>文件</p>\n<p>文件内容如下:</p>\n<div class=\"language-json\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">json</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">title</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Vim shortcuts</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">rules</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">     &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">description</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Map ^+[ to esc</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">manipulators</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">type</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">basic</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">from</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">key_code</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">open_bracket</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">modifiers</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">              </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">mandatory</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> [</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">control</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">to</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">              </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">key_code</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">escape</span><span style=\"color: #E9F284\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;,&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">              </span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #8BE9FD\">shell_command</span><span style=\"color: #8BE9FE\">&quot;</span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">/usr/local/bin/im-select com.apple.keylayout.ABC</span><span style=\"color: #E9F284\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">          ]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">      ]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">     &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>上面文件的映射内容就是将<code>Ctrl-[</code>映射为<code>Esc</code>,同时执行<code>/usr/local/bin/im-select com.apple.keylayout.ABC</code>命令</p>\n<h2 id=\"设置karabiner\"><a href=\"#设置karabiner\" class=\"headerlink\" title=\"设置karabiner\"></a>设置karabiner</h2><p>在<code>complex Modifications</code>选项中启用<code>Map ^+[ to esc</code></p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to/shell-command/\">https://karabiner-elements.pqrs.org/docs</a></p>\n"},{"title":"终端下常用快捷键汇总","cover":"https://source.unsplash.com/zGuBURGGmdY/1200x628","date":"2023-09-24T07:44:05.000Z","abstracts":"终端各种快捷键汇总","_content":"\n# 说明\n\n**其实大部分都是`emacs`的快捷键,终端也可以切换为`vim`模式,快捷键就会有变化**\n\n`C` : `Ctrl`\n`A` : `ALT`\n\n\n# 光标移动\n\n\n| 快捷键      | 效果                             |\n|-------------|----------------------------------|\n| C-a         | 移动到行首                       |\n| C-e         | 移动到行尾                       |\n| C-f         | 向后移动一个字符                 |\n| C-b         | 向前移动一个字符                 |\n| C-xx        | 在行首和当前光标位置之间互相切换 |\n| A-f / ESC-f | 向后移动一个单词                 |\n| A-b / ESC-b | 向前移动一个单词                 |\n\n\n# 控制和处理流程\n\n| 快捷键 | 效果               |\n|--------|--------------------|\n| C-l    | 清除命令行历史输出 |\n| C-z    | 挂起当前程序       |\n| C-q    | 回复挂起的程序     |\n| C-i    | 等于tab            |\n| C-j    | 等于enter          |\n\n# 编辑\n\n| 快捷键      | 效果                                 |\n|-------------|--------------------------------------|\n| C-d         | 删除后一个字符                       |\n| C-h         | 删除光标钱一个字符                   |\n| C-k         | 从光标删除到行尾                     |\n| C-u         | 从光标删除到行首                     |\n| C-w         | 删除光标前的一个单词                 |\n| A-t / Esc-t | 替换当前光标的单词和前一个单词的位置 |\n\n\n# 历史相关的\n\n| 快捷键 | 效果       |\n|--------|------------|\n| C-r    | 搜索历史   |\n| C-p    | 上一条命令 |\n| C-n    | 下一条命令 |\n","source":"_posts/terminal-shortcuts.md","raw":"---\ntitle: 终端下常用快捷键汇总\ntags:\n  - terminal\n  - linux\n  - 快捷键\ncategories:\n  - 键指如飞\ncover: https://source.unsplash.com/zGuBURGGmdY/1200x628\ndate: 2023-09-24 15:44:05\nabstracts: 终端各种快捷键汇总\n---\n\n# 说明\n\n**其实大部分都是`emacs`的快捷键,终端也可以切换为`vim`模式,快捷键就会有变化**\n\n`C` : `Ctrl`\n`A` : `ALT`\n\n\n# 光标移动\n\n\n| 快捷键      | 效果                             |\n|-------------|----------------------------------|\n| C-a         | 移动到行首                       |\n| C-e         | 移动到行尾                       |\n| C-f         | 向后移动一个字符                 |\n| C-b         | 向前移动一个字符                 |\n| C-xx        | 在行首和当前光标位置之间互相切换 |\n| A-f / ESC-f | 向后移动一个单词                 |\n| A-b / ESC-b | 向前移动一个单词                 |\n\n\n# 控制和处理流程\n\n| 快捷键 | 效果               |\n|--------|--------------------|\n| C-l    | 清除命令行历史输出 |\n| C-z    | 挂起当前程序       |\n| C-q    | 回复挂起的程序     |\n| C-i    | 等于tab            |\n| C-j    | 等于enter          |\n\n# 编辑\n\n| 快捷键      | 效果                                 |\n|-------------|--------------------------------------|\n| C-d         | 删除后一个字符                       |\n| C-h         | 删除光标钱一个字符                   |\n| C-k         | 从光标删除到行尾                     |\n| C-u         | 从光标删除到行首                     |\n| C-w         | 删除光标前的一个单词                 |\n| A-t / Esc-t | 替换当前光标的单词和前一个单词的位置 |\n\n\n# 历史相关的\n\n| 快捷键 | 效果       |\n|--------|------------|\n| C-r    | 搜索历史   |\n| C-p    | 上一条命令 |\n| C-n    | 下一条命令 |\n","slug":"terminal-shortcuts","published":1,"updated":"2023-10-17T13:23:32.260Z","_id":"clmyzfc6b0009e2rr2qiib2qj","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p><strong>其实大部分都是<code>emacs</code>的快捷键,终端也可以切换为<code>vim</code>模式,快捷键就会有变化</strong></p>\n<p><code>C</code> : <code>Ctrl</code><br><code>A</code> : <code>ALT</code></p>\n<h1 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-a</td>\n<td>移动到行首</td>\n</tr>\n<tr>\n<td>C-e</td>\n<td>移动到行尾</td>\n</tr>\n<tr>\n<td>C-f</td>\n<td>向后移动一个字符</td>\n</tr>\n<tr>\n<td>C-b</td>\n<td>向前移动一个字符</td>\n</tr>\n<tr>\n<td>C-xx</td>\n<td>在行首和当前光标位置之间互相切换</td>\n</tr>\n<tr>\n<td>A-f &#x2F; ESC-f</td>\n<td>向后移动一个单词</td>\n</tr>\n<tr>\n<td>A-b &#x2F; ESC-b</td>\n<td>向前移动一个单词</td>\n</tr>\n</tbody></table>\n<h1 id=\"控制和处理流程\"><a href=\"#控制和处理流程\" class=\"headerlink\" title=\"控制和处理流程\"></a>控制和处理流程</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-l</td>\n<td>清除命令行历史输出</td>\n</tr>\n<tr>\n<td>C-z</td>\n<td>挂起当前程序</td>\n</tr>\n<tr>\n<td>C-q</td>\n<td>回复挂起的程序</td>\n</tr>\n<tr>\n<td>C-i</td>\n<td>等于tab</td>\n</tr>\n<tr>\n<td>C-j</td>\n<td>等于enter</td>\n</tr>\n</tbody></table>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-d</td>\n<td>删除后一个字符</td>\n</tr>\n<tr>\n<td>C-h</td>\n<td>删除光标钱一个字符</td>\n</tr>\n<tr>\n<td>C-k</td>\n<td>从光标删除到行尾</td>\n</tr>\n<tr>\n<td>C-u</td>\n<td>从光标删除到行首</td>\n</tr>\n<tr>\n<td>C-w</td>\n<td>删除光标前的一个单词</td>\n</tr>\n<tr>\n<td>A-t &#x2F; Esc-t</td>\n<td>替换当前光标的单词和前一个单词的位置</td>\n</tr>\n</tbody></table>\n<h1 id=\"历史相关的\"><a href=\"#历史相关的\" class=\"headerlink\" title=\"历史相关的\"></a>历史相关的</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-r</td>\n<td>搜索历史</td>\n</tr>\n<tr>\n<td>C-p</td>\n<td>上一条命令</td>\n</tr>\n<tr>\n<td>C-n</td>\n<td>下一条命令</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p><strong>其实大部分都是<code>emacs</code>的快捷键,终端也可以切换为<code>vim</code>模式,快捷键就会有变化</strong></p>\n<p><code>C</code> : <code>Ctrl</code><br><code>A</code> : <code>ALT</code></p>\n<h1 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-a</td>\n<td>移动到行首</td>\n</tr>\n<tr>\n<td>C-e</td>\n<td>移动到行尾</td>\n</tr>\n<tr>\n<td>C-f</td>\n<td>向后移动一个字符</td>\n</tr>\n<tr>\n<td>C-b</td>\n<td>向前移动一个字符</td>\n</tr>\n<tr>\n<td>C-xx</td>\n<td>在行首和当前光标位置之间互相切换</td>\n</tr>\n<tr>\n<td>A-f &#x2F; ESC-f</td>\n<td>向后移动一个单词</td>\n</tr>\n<tr>\n<td>A-b &#x2F; ESC-b</td>\n<td>向前移动一个单词</td>\n</tr>\n</tbody></table>\n<h1 id=\"控制和处理流程\"><a href=\"#控制和处理流程\" class=\"headerlink\" title=\"控制和处理流程\"></a>控制和处理流程</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-l</td>\n<td>清除命令行历史输出</td>\n</tr>\n<tr>\n<td>C-z</td>\n<td>挂起当前程序</td>\n</tr>\n<tr>\n<td>C-q</td>\n<td>回复挂起的程序</td>\n</tr>\n<tr>\n<td>C-i</td>\n<td>等于tab</td>\n</tr>\n<tr>\n<td>C-j</td>\n<td>等于enter</td>\n</tr>\n</tbody></table>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-d</td>\n<td>删除后一个字符</td>\n</tr>\n<tr>\n<td>C-h</td>\n<td>删除光标钱一个字符</td>\n</tr>\n<tr>\n<td>C-k</td>\n<td>从光标删除到行尾</td>\n</tr>\n<tr>\n<td>C-u</td>\n<td>从光标删除到行首</td>\n</tr>\n<tr>\n<td>C-w</td>\n<td>删除光标前的一个单词</td>\n</tr>\n<tr>\n<td>A-t &#x2F; Esc-t</td>\n<td>替换当前光标的单词和前一个单词的位置</td>\n</tr>\n</tbody></table>\n<h1 id=\"历史相关的\"><a href=\"#历史相关的\" class=\"headerlink\" title=\"历史相关的\"></a>历史相关的</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-r</td>\n<td>搜索历史</td>\n</tr>\n<tr>\n<td>C-p</td>\n<td>上一条命令</td>\n</tr>\n<tr>\n<td>C-n</td>\n<td>下一条命令</td>\n</tr>\n</tbody></table>\n"},{"title":"vscode更好用的vim插件","cover":"https://source.unsplash.com/oA7MMRxTVzo/1200x628","date":"2023-09-23T11:10:04.000Z","abstracts":"vscode更好用的vim插件:Neovim","_content":"\n\n# 前言\n\n对我来说,使用`vim`后有两个后遗症,一是想把`vim`配置的全知全能,二是在任何软件中都想启用`vim`模式,现在前者的症状已经有所减轻,后者愈发严重\n\n# 更好用的vim插件\n\n之前在 `vscode`中使用的 `vim`插件一直是[vim](https://marketplace.visualstudio.com/items?itemName=vscodevim.vim),但是这个插件有一个让我非常苦恼的问题,\n就是这个插件没有`neovim`中的`flash`插件,它默认的快速移动插件是`easymotion`,个人觉得,`easymotion`这个插件的已送快捷键方式实在是太不方便,举个简单的例子:\n他的`prefix`是要按两下`leader`按键,而`flash`插件就十分的方便,按下`s`然后输入词就可以快速搜索,这点就是很舒服的地方,下面两个图\n\n`flash`\n![flash](flash-demo.gif)\n\n`easy-motion`\n\n![easymotion](easy-motion.gif)\n\n另外我也没有在`vim`插件的文档中找到如何更改`easymotion`的快捷键的地方,如果可以改的话也可以进行配置(我的`intellij idea`就是通过这个更改实现类`flash`模式)\n\n而`vscode`中的[neovim](https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim)插件可以使用`neovim`的原生插件,这一点就非常舒服了,\n这个插件的基本原理大概就是:使用`vscode`去连接一个`neovim`实例,然后在`command`和`normal`模式下,将用户输入的命令直接传给`neovim`\n\n\n\n# 配置\n\n安装就不多说了,有手就行\n\n有一些需要注意的地方是:\n\n1. 需要指定`neovim`的安装位置\n2. 如果需要个性化配置,可以制定一个`init.lua`/`init.vim`文件\n\n\n具体配置选项可以看[这里](https://github.com/vscode-neovim/vscode-neovim)\n\n\n# 我的配置\n\n\n```lua\n--                              _                   _\n--                      _ __   | |  _   _    __ _  (_)  _ __\n--                     | '_ \\  | | | | | |  / _` | | | | '_ \\\n--                     | |_) | | | | |_| | | (_| | | | | | | |\n--                     | .__/  |_|  \\__,_|  \\__, | |_| |_| |_|\n--                     |_|                  |___/\n--\n\nlocal lazypath = vim.fn.stdpath(\"data\") .. \"/lazy/lazy.nvim\"\nif not vim.loop.fs_stat(lazypath) then\n  -- bootstrap lazy.nvim\n  -- stylua: ignore\n  vim.fn.system({ \"git\", \"clone\", \"--filter=blob:none\", \"https://github.com/folke/lazy.nvim.git\", \"--branch=stable\", lazypath })\nend\nvim.opt.rtp:prepend(vim.env.LAZY or lazypath)\n\n\nrequire('lazy').setup({\n\n    {\n        \"kylechui/nvim-surround\",\n        version = \"*\", -- Use for stability; omit to use `main` branch for the latest features\n        event = \"VeryLazy\",\n        config = function()\n            require(\"nvim-surround\").setup({\n                -- Configuration here, or leave empty to use defaults\n            })\n        end\n    },\n    {\n        \"folke/flash.nvim\",\n        event = \"VeryLazy\",\n        ---@type Flash.Config\n        opts = {},\n        -- stylua: ignore\n        keys = {\n            { \"s\", mode = { \"n\", \"o\", \"x\" }, function() require(\"flash\").jump() end, desc = \"Flash\" },\n            { \"S\", mode = { \"n\", \"o\", \"x\" }, function() require(\"flash\").treesitter() end, desc = \"Flash Treesitter\" },\n            -- { \"r\", mode = \"o\", function() require(\"flash\").remote() end, desc = \"Remote Flash\" },\n            { \"R\", mode = { \"o\", \"x\" }, function() require(\"flash\").treesitter_search() end, desc = \"Treesitter Search\" },\n            { \"<c-s>\", mode = { \"c\" }, function() require(\"flash\").toggle() end, desc = \"Toggle Flash Search\" },\n        },\n    }\n})\n\n--                                                     _\n--                   __   __  ___    ___    ___     __| |   ___\n--                   \\ \\ / / / __|  / __|  / _ \\   / _` |  / _ \\\n--                    \\ V /  \\__ \\ | (__  | (_) | | (_| | |  __/\n--                     \\_/   |___/  \\___|  \\___/   \\__,_|  \\___|\n--\n--                                             __   _\n--                      ___    ___    _ __    / _| (_)   __ _\n--                     / __|  / _ \\  | '_ \\  | |_  | |  / _` |\n--                    | (__  | (_) | | | | | |  _| | | | (_| |\n--                     \\___|  \\___/  |_| |_| |_|   |_|  \\__, |\n--                                                      |___/\n--\nlocal map = vim.keymap.set\nlocal expr_options = { expr = true, silent = true }\n\n-- 这里很重要,防止光标到折叠为止,折叠自动展开\nmap(\"n\",\"k\",\"gk\",{remap = true})\nmap(\"n\",\"j\",\"gj\",{remap = true})\n\nmap('n','zc',\"<cmd>call VSCodeCall('editor.fold')<cr>\")\nmap('n','zo',\"<cmd>call VSCodeCall('editor.unfold')<cr>\")\nmap('n','zR',\"<cmd>call VSCodeCall('editor.unfoldAll')<cr>\")\nmap('n','zM',\"<cmd>call VSCodeCall('editor.foldAll')<cr>\")\n\nmap('n','<leader>e',\"<cmd>call VSCodeCall('workbench.action.quickOpenNavigateNextInFilePicker')<cr>\",{remap=true})\n```\n\n**注意**\n\n```lua\n-- 这里很重要,防止光标到折叠为止,折叠自动展开\nmap(\"n\",\"k\",\"gk\",{remap = true})\nmap(\"n\",\"j\",\"gj\",{remap = true})\n```\n\n这两句配置很是很重要的,如果不配置,在`neovim`模式下,光标移动到折叠为止,折叠会自动展开\n\n\n\n\n","source":"_posts/vscode-neovim-plugin.md","raw":"---\ntitle: vscode更好用的vim插件\ntags:\n  - vim\n  - vscode\ncategories:\n  - 万物皆可vim\ncover: https://source.unsplash.com/oA7MMRxTVzo/1200x628\ndate: 2023-09-23 19:10:04\nabstracts: vscode更好用的vim插件:Neovim\n---\n\n\n# 前言\n\n对我来说,使用`vim`后有两个后遗症,一是想把`vim`配置的全知全能,二是在任何软件中都想启用`vim`模式,现在前者的症状已经有所减轻,后者愈发严重\n\n# 更好用的vim插件\n\n之前在 `vscode`中使用的 `vim`插件一直是[vim](https://marketplace.visualstudio.com/items?itemName=vscodevim.vim),但是这个插件有一个让我非常苦恼的问题,\n就是这个插件没有`neovim`中的`flash`插件,它默认的快速移动插件是`easymotion`,个人觉得,`easymotion`这个插件的已送快捷键方式实在是太不方便,举个简单的例子:\n他的`prefix`是要按两下`leader`按键,而`flash`插件就十分的方便,按下`s`然后输入词就可以快速搜索,这点就是很舒服的地方,下面两个图\n\n`flash`\n![flash](flash-demo.gif)\n\n`easy-motion`\n\n![easymotion](easy-motion.gif)\n\n另外我也没有在`vim`插件的文档中找到如何更改`easymotion`的快捷键的地方,如果可以改的话也可以进行配置(我的`intellij idea`就是通过这个更改实现类`flash`模式)\n\n而`vscode`中的[neovim](https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim)插件可以使用`neovim`的原生插件,这一点就非常舒服了,\n这个插件的基本原理大概就是:使用`vscode`去连接一个`neovim`实例,然后在`command`和`normal`模式下,将用户输入的命令直接传给`neovim`\n\n\n\n# 配置\n\n安装就不多说了,有手就行\n\n有一些需要注意的地方是:\n\n1. 需要指定`neovim`的安装位置\n2. 如果需要个性化配置,可以制定一个`init.lua`/`init.vim`文件\n\n\n具体配置选项可以看[这里](https://github.com/vscode-neovim/vscode-neovim)\n\n\n# 我的配置\n\n\n```lua\n--                              _                   _\n--                      _ __   | |  _   _    __ _  (_)  _ __\n--                     | '_ \\  | | | | | |  / _` | | | | '_ \\\n--                     | |_) | | | | |_| | | (_| | | | | | | |\n--                     | .__/  |_|  \\__,_|  \\__, | |_| |_| |_|\n--                     |_|                  |___/\n--\n\nlocal lazypath = vim.fn.stdpath(\"data\") .. \"/lazy/lazy.nvim\"\nif not vim.loop.fs_stat(lazypath) then\n  -- bootstrap lazy.nvim\n  -- stylua: ignore\n  vim.fn.system({ \"git\", \"clone\", \"--filter=blob:none\", \"https://github.com/folke/lazy.nvim.git\", \"--branch=stable\", lazypath })\nend\nvim.opt.rtp:prepend(vim.env.LAZY or lazypath)\n\n\nrequire('lazy').setup({\n\n    {\n        \"kylechui/nvim-surround\",\n        version = \"*\", -- Use for stability; omit to use `main` branch for the latest features\n        event = \"VeryLazy\",\n        config = function()\n            require(\"nvim-surround\").setup({\n                -- Configuration here, or leave empty to use defaults\n            })\n        end\n    },\n    {\n        \"folke/flash.nvim\",\n        event = \"VeryLazy\",\n        ---@type Flash.Config\n        opts = {},\n        -- stylua: ignore\n        keys = {\n            { \"s\", mode = { \"n\", \"o\", \"x\" }, function() require(\"flash\").jump() end, desc = \"Flash\" },\n            { \"S\", mode = { \"n\", \"o\", \"x\" }, function() require(\"flash\").treesitter() end, desc = \"Flash Treesitter\" },\n            -- { \"r\", mode = \"o\", function() require(\"flash\").remote() end, desc = \"Remote Flash\" },\n            { \"R\", mode = { \"o\", \"x\" }, function() require(\"flash\").treesitter_search() end, desc = \"Treesitter Search\" },\n            { \"<c-s>\", mode = { \"c\" }, function() require(\"flash\").toggle() end, desc = \"Toggle Flash Search\" },\n        },\n    }\n})\n\n--                                                     _\n--                   __   __  ___    ___    ___     __| |   ___\n--                   \\ \\ / / / __|  / __|  / _ \\   / _` |  / _ \\\n--                    \\ V /  \\__ \\ | (__  | (_) | | (_| | |  __/\n--                     \\_/   |___/  \\___|  \\___/   \\__,_|  \\___|\n--\n--                                             __   _\n--                      ___    ___    _ __    / _| (_)   __ _\n--                     / __|  / _ \\  | '_ \\  | |_  | |  / _` |\n--                    | (__  | (_) | | | | | |  _| | | | (_| |\n--                     \\___|  \\___/  |_| |_| |_|   |_|  \\__, |\n--                                                      |___/\n--\nlocal map = vim.keymap.set\nlocal expr_options = { expr = true, silent = true }\n\n-- 这里很重要,防止光标到折叠为止,折叠自动展开\nmap(\"n\",\"k\",\"gk\",{remap = true})\nmap(\"n\",\"j\",\"gj\",{remap = true})\n\nmap('n','zc',\"<cmd>call VSCodeCall('editor.fold')<cr>\")\nmap('n','zo',\"<cmd>call VSCodeCall('editor.unfold')<cr>\")\nmap('n','zR',\"<cmd>call VSCodeCall('editor.unfoldAll')<cr>\")\nmap('n','zM',\"<cmd>call VSCodeCall('editor.foldAll')<cr>\")\n\nmap('n','<leader>e',\"<cmd>call VSCodeCall('workbench.action.quickOpenNavigateNextInFilePicker')<cr>\",{remap=true})\n```\n\n**注意**\n\n```lua\n-- 这里很重要,防止光标到折叠为止,折叠自动展开\nmap(\"n\",\"k\",\"gk\",{remap = true})\nmap(\"n\",\"j\",\"gj\",{remap = true})\n```\n\n这两句配置很是很重要的,如果不配置,在`neovim`模式下,光标移动到折叠为止,折叠会自动展开\n\n\n\n\n","slug":"vscode-neovim-plugin","published":1,"updated":"2023-09-23T13:35:26.957Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmyzfc6c000de2rrgmngbjbd","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>对我来说,使用<code>vim</code>后有两个后遗症,一是想把<code>vim</code>配置的全知全能,二是在任何软件中都想启用<code>vim</code>模式,现在前者的症状已经有所减轻,后者愈发严重</p>\n<h1 id=\"更好用的vim插件\"><a href=\"#更好用的vim插件\" class=\"headerlink\" title=\"更好用的vim插件\"></a>更好用的vim插件</h1><p>之前在 <code>vscode</code>中使用的 <code>vim</code>插件一直是<a href=\"https://marketplace.visualstudio.com/items?itemName=vscodevim.vim\">vim</a>,但是这个插件有一个让我非常苦恼的问题,<br>就是这个插件没有<code>neovim</code>中的<code>flash</code>插件,它默认的快速移动插件是<code>easymotion</code>,个人觉得,<code>easymotion</code>这个插件的已送快捷键方式实在是太不方便,举个简单的例子:<br>他的<code>prefix</code>是要按两下<code>leader</code>按键,而<code>flash</code>插件就十分的方便,按下<code>s</code>然后输入词就可以快速搜索,这点就是很舒服的地方,下面两个图</p>\n<p><code>flash</code><br><img src=\"/post/vscode-neovim-plugin/flash-demo.gif\" alt=\"flash\"></p>\n<p><code>easy-motion</code></p>\n<p><img src=\"/post/vscode-neovim-plugin/easy-motion.gif\" alt=\"easymotion\"></p>\n<p>另外我也没有在<code>vim</code>插件的文档中找到如何更改<code>easymotion</code>的快捷键的地方,如果可以改的话也可以进行配置(我的<code>intellij idea</code>就是通过这个更改实现类<code>flash</code>模式)</p>\n<p>而<code>vscode</code>中的<a href=\"https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim\">neovim</a>插件可以使用<code>neovim</code>的原生插件,这一点就非常舒服了,<br>这个插件的基本原理大概就是:使用<code>vscode</code>去连接一个<code>neovim</code>实例,然后在<code>command</code>和<code>normal</code>模式下,将用户输入的命令直接传给<code>neovim</code></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>安装就不多说了,有手就行</p>\n<p>有一些需要注意的地方是:</p>\n<ol>\n<li>需要指定<code>neovim</code>的安装位置</li>\n<li>如果需要个性化配置,可以制定一个<code>init.lua</code>&#x2F;<code>init.vim</code>文件</li>\n</ol>\n<p>具体配置选项可以看<a href=\"https://github.com/vscode-neovim/vscode-neovim\">这里</a></p>\n<h1 id=\"我的配置\"><a href=\"#我的配置\" class=\"headerlink\" title=\"我的配置\"></a>我的配置</h1><div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">--                              _                   _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                      _ __   | |  _   _    __ _  (_)  _ __</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     | &#39;_ \\  | | | | | |  / _` | | | | &#39;_ \\</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     | |_) | | | | |_| | | (_| | | | | | | |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     | .__/  |_|  \\__,_|  \\__, | |_| |_| |_|</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     |_|                  |___/</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> lazypath </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> vim.fn.</span><span style=\"color: #50FA7B\">stdpath</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">data</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">..</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">/lazy/lazy.nvim</span><span style=\"color: #E9F284\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">not</span><span style=\"color: #F8F8F2\"> vim.loop.</span><span style=\"color: #50FA7B\">fs_stat</span><span style=\"color: #F8F8F2\">(lazypath) </span><span style=\"color: #FF79C6\">then</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\">-- bootstrap lazy.nvim</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\">-- stylua: ignore</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  vim.fn.</span><span style=\"color: #50FA7B\">system</span><span style=\"color: #F8F8F2\">(&#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">git</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">clone</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">--filter=blob:none</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">https://github.com/folke/lazy.nvim.git</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">--branch=stable</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, lazypath &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">vim.opt.</span><span style=\"color: #8BE9FD\">rtp</span><span style=\"color: #F8F8F2\">:</span><span style=\"color: #50FA7B\">prepend</span><span style=\"color: #F8F8F2\">(vim.env.LAZY </span><span style=\"color: #FF79C6\">or</span><span style=\"color: #F8F8F2\"> lazypath)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">lazy</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">setup</span><span style=\"color: #F8F8F2\">(&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">kylechui/nvim-surround</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        version </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">*</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #6272A4\">-- Use for stability; omit to use `main` branch for the latest features</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        event </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">VeryLazy</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">config</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">nvim-surround</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">setup</span><span style=\"color: #F8F8F2\">(&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #6272A4\">-- Configuration here, or leave empty to use defaults</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">folke/flash.nvim</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        event </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">VeryLazy</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\">---</span><span style=\"color: #FF79C6\">@type</span><span style=\"color: #6272A4\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Flash.Config</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        opts </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\">-- stylua: ignore</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        keys </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">s</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, mode </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">o</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">x</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;, </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">flash</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">jump</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">end</span><span style=\"color: #F8F8F2\">, desc </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Flash</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">S</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, mode </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">o</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">x</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;, </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">flash</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">treesitter</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">end</span><span style=\"color: #F8F8F2\">, desc </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Flash Treesitter</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #6272A4\">-- &#123; &quot;r&quot;, mode = &quot;o&quot;, function() require(&quot;flash&quot;).remote() end, desc = &quot;Remote Flash&quot; &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">R</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, mode </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">o</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">x</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;, </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">flash</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">treesitter_search</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">end</span><span style=\"color: #F8F8F2\">, desc </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Treesitter Search</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;c-s&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, mode </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">c</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;, </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">flash</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">toggle</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">end</span><span style=\"color: #F8F8F2\">, desc </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Toggle Flash Search</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                                                     _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                   __   __  ___    ___    ___     __| |   ___</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                   \\ \\ / / / __|  / __|  / _ \\   / _` |  / _ \\</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                    \\ V /  \\__ \\ | (__  | (_) | | (_| | |  __/</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     \\_/   |___/  \\___|  \\___/   \\__,_|  \\___|</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                                             __   _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                      ___    ___    _ __    / _| (_)   __ _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     / __|  / _ \\  | &#39;_ \\  | |_  | |  / _` |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                    | (__  | (_) | | | | | |  _| | | | (_| |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     \\___|  \\___/  |_| |_| |_|   |_|  \\__, |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                                                      |___/</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> map </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> vim.keymap.set</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> expr_options </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; expr </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">, silent </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\"> &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">-- 这里很重要,防止光标到折叠为止,折叠自动展开</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">k</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">gk</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">j</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">gj</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">zc</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;editor.fold&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">zo</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;editor.unfold&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">zR</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;editor.unfoldAll&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">zM</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;editor.foldAll&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">&lt;leader&gt;e</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;workbench.action.quickOpenNavigateNextInFilePicker&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span></code></pre></div><p><strong>注意</strong></p>\n<div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">-- 这里很重要,防止光标到折叠为止,折叠自动展开</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">k</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">gk</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">j</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">gj</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span></code></pre></div><p>这两句配置很是很重要的,如果不配置,在<code>neovim</code>模式下,光标移动到折叠为止,折叠会自动展开</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>对我来说,使用<code>vim</code>后有两个后遗症,一是想把<code>vim</code>配置的全知全能,二是在任何软件中都想启用<code>vim</code>模式,现在前者的症状已经有所减轻,后者愈发严重</p>\n<h1 id=\"更好用的vim插件\"><a href=\"#更好用的vim插件\" class=\"headerlink\" title=\"更好用的vim插件\"></a>更好用的vim插件</h1><p>之前在 <code>vscode</code>中使用的 <code>vim</code>插件一直是<a href=\"https://marketplace.visualstudio.com/items?itemName=vscodevim.vim\">vim</a>,但是这个插件有一个让我非常苦恼的问题,<br>就是这个插件没有<code>neovim</code>中的<code>flash</code>插件,它默认的快速移动插件是<code>easymotion</code>,个人觉得,<code>easymotion</code>这个插件的已送快捷键方式实在是太不方便,举个简单的例子:<br>他的<code>prefix</code>是要按两下<code>leader</code>按键,而<code>flash</code>插件就十分的方便,按下<code>s</code>然后输入词就可以快速搜索,这点就是很舒服的地方,下面两个图</p>\n<p><code>flash</code><br><img src=\"/post/vscode-neovim-plugin/flash-demo.gif\" alt=\"flash\"></p>\n<p><code>easy-motion</code></p>\n<p><img src=\"/post/vscode-neovim-plugin/easy-motion.gif\" alt=\"easymotion\"></p>\n<p>另外我也没有在<code>vim</code>插件的文档中找到如何更改<code>easymotion</code>的快捷键的地方,如果可以改的话也可以进行配置(我的<code>intellij idea</code>就是通过这个更改实现类<code>flash</code>模式)</p>\n<p>而<code>vscode</code>中的<a href=\"https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim\">neovim</a>插件可以使用<code>neovim</code>的原生插件,这一点就非常舒服了,<br>这个插件的基本原理大概就是:使用<code>vscode</code>去连接一个<code>neovim</code>实例,然后在<code>command</code>和<code>normal</code>模式下,将用户输入的命令直接传给<code>neovim</code></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>安装就不多说了,有手就行</p>\n<p>有一些需要注意的地方是:</p>\n<ol>\n<li>需要指定<code>neovim</code>的安装位置</li>\n<li>如果需要个性化配置,可以制定一个<code>init.lua</code>&#x2F;<code>init.vim</code>文件</li>\n</ol>\n<p>具体配置选项可以看<a href=\"https://github.com/vscode-neovim/vscode-neovim\">这里</a></p>\n<h1 id=\"我的配置\"><a href=\"#我的配置\" class=\"headerlink\" title=\"我的配置\"></a>我的配置</h1><div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">--                              _                   _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                      _ __   | |  _   _    __ _  (_)  _ __</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     | &#39;_ \\  | | | | | |  / _` | | | | &#39;_ \\</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     | |_) | | | | |_| | | (_| | | | | | | |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     | .__/  |_|  \\__,_|  \\__, | |_| |_| |_|</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     |_|                  |___/</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> lazypath </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> vim.fn.</span><span style=\"color: #50FA7B\">stdpath</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">data</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">..</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">/lazy/lazy.nvim</span><span style=\"color: #E9F284\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">not</span><span style=\"color: #F8F8F2\"> vim.loop.</span><span style=\"color: #50FA7B\">fs_stat</span><span style=\"color: #F8F8F2\">(lazypath) </span><span style=\"color: #FF79C6\">then</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\">-- bootstrap lazy.nvim</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\">-- stylua: ignore</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">  vim.fn.</span><span style=\"color: #50FA7B\">system</span><span style=\"color: #F8F8F2\">(&#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">git</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">clone</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">--filter=blob:none</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">https://github.com/folke/lazy.nvim.git</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">--branch=stable</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, lazypath &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">vim.opt.</span><span style=\"color: #8BE9FD\">rtp</span><span style=\"color: #F8F8F2\">:</span><span style=\"color: #50FA7B\">prepend</span><span style=\"color: #F8F8F2\">(vim.env.LAZY </span><span style=\"color: #FF79C6\">or</span><span style=\"color: #F8F8F2\"> lazypath)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">lazy</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">setup</span><span style=\"color: #F8F8F2\">(&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">kylechui/nvim-surround</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        version </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">*</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #6272A4\">-- Use for stability; omit to use `main` branch for the latest features</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        event </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">VeryLazy</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">config</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">nvim-surround</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">setup</span><span style=\"color: #F8F8F2\">(&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #6272A4\">-- Configuration here, or leave empty to use defaults</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">folke/flash.nvim</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        event </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">VeryLazy</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\">---</span><span style=\"color: #FF79C6\">@type</span><span style=\"color: #6272A4\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Flash.Config</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        opts </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\">-- stylua: ignore</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        keys </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">s</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, mode </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">o</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">x</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;, </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">flash</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">jump</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">end</span><span style=\"color: #F8F8F2\">, desc </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Flash</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">S</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, mode </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">o</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">x</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;, </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">flash</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">treesitter</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">end</span><span style=\"color: #F8F8F2\">, desc </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Flash Treesitter</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #6272A4\">-- &#123; &quot;r&quot;, mode = &quot;o&quot;, function() require(&quot;flash&quot;).remote() end, desc = &quot;Remote Flash&quot; &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">R</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, mode </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">o</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">x</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;, </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">flash</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">treesitter_search</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">end</span><span style=\"color: #F8F8F2\">, desc </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Treesitter Search</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;c-s&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">, mode </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">c</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;, </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">flash</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">toggle</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">end</span><span style=\"color: #F8F8F2\">, desc </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Toggle Flash Search</span><span style=\"color: #E9F284\">&quot; </span><span style=\"color: #F8F8F2\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                                                     _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                   __   __  ___    ___    ___     __| |   ___</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                   \\ \\ / / / __|  / __|  / _ \\   / _` |  / _ \\</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                    \\ V /  \\__ \\ | (__  | (_) | | (_| | |  __/</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     \\_/   |___/  \\___|  \\___/   \\__,_|  \\___|</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                                             __   _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                      ___    ___    _ __    / _| (_)   __ _</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     / __|  / _ \\  | &#39;_ \\  | |_  | |  / _` |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                    | (__  | (_) | | | | | |  _| | | | (_| |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                     \\___|  \\___/  |_| |_| |_|   |_|  \\__, |</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--                                                      |___/</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">--</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> map </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> vim.keymap.set</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> expr_options </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123; expr </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">, silent </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\"> &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">-- 这里很重要,防止光标到折叠为止,折叠自动展开</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">k</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">gk</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">j</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">gj</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">zc</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;editor.fold&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">zo</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;editor.unfold&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">zR</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;editor.unfoldAll&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">zM</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;editor.foldAll&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">&lt;leader&gt;e</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">&lt;cmd&gt;call VSCodeCall(&#39;workbench.action.quickOpenNavigateNextInFilePicker&#39;)&lt;cr&gt;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span></code></pre></div><p><strong>注意</strong></p>\n<div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">-- 这里很重要,防止光标到折叠为止,折叠自动展开</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">k</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">gk</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">map</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">n</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">j</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">gj</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,&#123;remap </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">&#125;)</span></span></code></pre></div><p>这两句配置很是很重要的,如果不配置,在<code>neovim</code>模式下,光标移动到折叠为止,折叠会自动展开</p>\n"},{"title":"使用asdf管理你的sdk","cover":"https://source.unsplash.com/monitor-displaying-indexhtml-codes-_SgRNwAVNKw/1200x628","date":"2023-09-26T04:18:16.000Z","abstracts":null,"_content":"\n对于我这种使用多种语言开发,并且可能在给个版本之前来回切换的人来说,一直渴望一个好的`sdk`管理工具\n举个具体的例子:有两个项目,一个项目使用`jdk-8`另一个项目使用`jdk-17`,在`ide`里面还好说,毕竟可选择,但是当你在命令行里面操作时,来回切换`jdk`有多难受就不必我多说了吧\n而且如果要用两个`jdk`,这两个就要使用`HomeBrew`安装两个`jdk`,而且安装的路径还不一样\n\n除此之外,还有前端的`node`版本,不同的项目使用的`NodeJs`版本不同,换来换区也是麻烦的不行\n\n这个时候就体现了[asdf](https://asdf-vm.com)这个工具的方便之处,\n\n如果使用来`asdf`,那么安装和切换`jdk`的版本就会如此美妙\n\n现在假设在使用`asdf`的情况下,如果有两个项目`a` 和 `b`,分别使用`jdk-8`和`jdk-17`,那么管理的流程就是如下的\n\n1. 安装对应的`jdk`:`asdf install java openjdk-8`, `asdf install java openjdk-17`\n2. 分别进入`a`和`b`两个目录,执行`asdf local java openjdk-8`,`asdf local java openjdk-17`\n\n这个时候,当你在命令行进入对应的项目,你执行`java -version`就会对应不同的`jdk`版本\n\n而且安装的`jdk`统一的都在`~/.asdf.plugins/java`目录下,丝毫不会污染你其他的目录,干净又卫生了属于是\n\n\n\n下面简单说下安装以及使用,基本上是官方文档内容\n\n# 安装\n\n我是使用`HomeBrew`安装\n\n```bash\nbrew install asdf\n\necho -e \"\\n. $(brew --prefix asdf)/libexec/asdf.sh\" >> ${ZDOTDIR:-~}/.zshrc\n```\n\n\n# 使用(以java为例)\n\n\n## plugin\n\n在`asdf`的语义中,`plugin`就是帮你管理对应语言`sdk`的模块,比如你需要下载是管理`java`的版本,你就需要下载对应的`java plugin`\n\n\n## 搜索plugin\n\n```bash\nasdf plugin list all | grep java\n```\n\n\n## 安装plugin\n\n```bash\nasdf plugin add java\n```\n\n\n## 安装sdk\n\n```bash \n# 搜索jdk\nasdf list all java | grep jdk \n\n# 安装jdk\n    # 安装指定版本\nasdf install java openjdk-17.0\n    # 安装指定版本的最新版本\nasdf install java openjdk-17:latest\n    # 安装最新稳定版\nasdf install java latest\n```\n\n## 设置\n\n```bash\n\n# 设置命令行使用的版本\nasdf global java openjdk-17\n# 设置当前路径使用的jdk版本,会在当前目录下生成一个.tool-versions文件\nasdf local java openjdk-17\n```\n\n\n##  其他常用命令\n\n\n```bash\n# 查看当前各个sdk的版本\nasdf current\n# 查看当前java使用的sdk版本\nasdf current java\n# 查看安装那些plugin\nasdf plugin list\n# 查看当前使用的java 命令的路径\nasdf  which java\n# 查看当前使用的java sdk的路径\nasdf where java\n# 移除对应的sdk\nasdf uninstall java openjdk-17\n# 移除对应的plugin\nasdf plugin remove java\n# 更新(所有)plugin\nasdf plugin update [--all]\n```\n\n# 参考资料\n\n`asdf`[官方文档](https://asdf-vm.com)\n\n","source":"_posts/use-asdf-manage-sdk.md","raw":"---\ntitle: 使用asdf管理你的sdk\ntags:\n  - asdf\n  - asdf manage\ncategories:\n  - 效率工具\ncover: https://source.unsplash.com/monitor-displaying-indexhtml-codes-_SgRNwAVNKw/1200x628\ndate: 2023-09-26 12:18:16\nabstracts:\n---\n\n对于我这种使用多种语言开发,并且可能在给个版本之前来回切换的人来说,一直渴望一个好的`sdk`管理工具\n举个具体的例子:有两个项目,一个项目使用`jdk-8`另一个项目使用`jdk-17`,在`ide`里面还好说,毕竟可选择,但是当你在命令行里面操作时,来回切换`jdk`有多难受就不必我多说了吧\n而且如果要用两个`jdk`,这两个就要使用`HomeBrew`安装两个`jdk`,而且安装的路径还不一样\n\n除此之外,还有前端的`node`版本,不同的项目使用的`NodeJs`版本不同,换来换区也是麻烦的不行\n\n这个时候就体现了[asdf](https://asdf-vm.com)这个工具的方便之处,\n\n如果使用来`asdf`,那么安装和切换`jdk`的版本就会如此美妙\n\n现在假设在使用`asdf`的情况下,如果有两个项目`a` 和 `b`,分别使用`jdk-8`和`jdk-17`,那么管理的流程就是如下的\n\n1. 安装对应的`jdk`:`asdf install java openjdk-8`, `asdf install java openjdk-17`\n2. 分别进入`a`和`b`两个目录,执行`asdf local java openjdk-8`,`asdf local java openjdk-17`\n\n这个时候,当你在命令行进入对应的项目,你执行`java -version`就会对应不同的`jdk`版本\n\n而且安装的`jdk`统一的都在`~/.asdf.plugins/java`目录下,丝毫不会污染你其他的目录,干净又卫生了属于是\n\n\n\n下面简单说下安装以及使用,基本上是官方文档内容\n\n# 安装\n\n我是使用`HomeBrew`安装\n\n```bash\nbrew install asdf\n\necho -e \"\\n. $(brew --prefix asdf)/libexec/asdf.sh\" >> ${ZDOTDIR:-~}/.zshrc\n```\n\n\n# 使用(以java为例)\n\n\n## plugin\n\n在`asdf`的语义中,`plugin`就是帮你管理对应语言`sdk`的模块,比如你需要下载是管理`java`的版本,你就需要下载对应的`java plugin`\n\n\n## 搜索plugin\n\n```bash\nasdf plugin list all | grep java\n```\n\n\n## 安装plugin\n\n```bash\nasdf plugin add java\n```\n\n\n## 安装sdk\n\n```bash \n# 搜索jdk\nasdf list all java | grep jdk \n\n# 安装jdk\n    # 安装指定版本\nasdf install java openjdk-17.0\n    # 安装指定版本的最新版本\nasdf install java openjdk-17:latest\n    # 安装最新稳定版\nasdf install java latest\n```\n\n## 设置\n\n```bash\n\n# 设置命令行使用的版本\nasdf global java openjdk-17\n# 设置当前路径使用的jdk版本,会在当前目录下生成一个.tool-versions文件\nasdf local java openjdk-17\n```\n\n\n##  其他常用命令\n\n\n```bash\n# 查看当前各个sdk的版本\nasdf current\n# 查看当前java使用的sdk版本\nasdf current java\n# 查看安装那些plugin\nasdf plugin list\n# 查看当前使用的java 命令的路径\nasdf  which java\n# 查看当前使用的java sdk的路径\nasdf where java\n# 移除对应的sdk\nasdf uninstall java openjdk-17\n# 移除对应的plugin\nasdf plugin remove java\n# 更新(所有)plugin\nasdf plugin update [--all]\n```\n\n# 参考资料\n\n`asdf`[官方文档](https://asdf-vm.com)\n\n","slug":"use-asdf-manage-sdk","published":1,"updated":"2023-11-01T07:59:40.301Z","_id":"clmzuhztu0000w0rrge6l6ut2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>对于我这种使用多种语言开发,并且可能在给个版本之前来回切换的人来说,一直渴望一个好的<code>sdk</code>管理工具<br>举个具体的例子:有两个项目,一个项目使用<code>jdk-8</code>另一个项目使用<code>jdk-17</code>,在<code>ide</code>里面还好说,毕竟可选择,但是当你在命令行里面操作时,来回切换<code>jdk</code>有多难受就不必我多说了吧<br>而且如果要用两个<code>jdk</code>,这两个就要使用<code>HomeBrew</code>安装两个<code>jdk</code>,而且安装的路径还不一样</p>\n<p>除此之外,还有前端的<code>node</code>版本,不同的项目使用的<code>NodeJs</code>版本不同,换来换区也是麻烦的不行</p>\n<p>这个时候就体现了<a href=\"https://asdf-vm.com/\">asdf</a>这个工具的方便之处,</p>\n<p>如果使用来<code>asdf</code>,那么安装和切换<code>jdk</code>的版本就会如此美妙</p>\n<p>现在假设在使用<code>asdf</code>的情况下,如果有两个项目<code>a</code> 和 <code>b</code>,分别使用<code>jdk-8</code>和<code>jdk-17</code>,那么管理的流程就是如下的</p>\n<ol>\n<li>安装对应的<code>jdk</code>:<code>asdf install java openjdk-8</code>, <code>asdf install java openjdk-17</code></li>\n<li>分别进入<code>a</code>和<code>b</code>两个目录,执行<code>asdf local java openjdk-8</code>,<code>asdf local java openjdk-17</code></li>\n</ol>\n<p>这个时候,当你在命令行进入对应的项目,你执行<code>java -version</code>就会对应不同的<code>jdk</code>版本</p>\n<p>而且安装的<code>jdk</code>统一的都在<code>~/.asdf.plugins/java</code>目录下,丝毫不会污染你其他的目录,干净又卫生了属于是</p>\n<p>下面简单说下安装以及使用,基本上是官方文档内容</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>我是使用<code>HomeBrew</code>安装</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">brew</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">asdf</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD\">echo</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-e</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">\\n. $(</span><span style=\"color: #50FA7B\">brew</span><span style=\"color: #F1FA8C\"> </span><span style=\"color: #BD93F9\">--prefix</span><span style=\"color: #F1FA8C\"> asdf)/libexec/asdf.sh</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> $&#123;</span><span style=\"color: #BD93F9\">ZDOTDIR</span><span style=\"color: #FF79C6\">:-</span><span style=\"color: #F8F8F2\">~&#125;</span><span style=\"color: #F1FA8C\">/.zshrc</span></span></code></pre></div><h1 id=\"使用-以java为例\"><a href=\"#使用-以java为例\" class=\"headerlink\" title=\"使用(以java为例)\"></a>使用(以java为例)</h1><h2 id=\"plugin\"><a href=\"#plugin\" class=\"headerlink\" title=\"plugin\"></a>plugin</h2><p>在<code>asdf</code>的语义中,<code>plugin</code>就是帮你管理对应语言<code>sdk</code>的模块,比如你需要下载是管理<code>java</code>的版本,你就需要下载对应的<code>java plugin</code></p>\n<h2 id=\"搜索plugin\"><a href=\"#搜索plugin\" class=\"headerlink\" title=\"搜索plugin\"></a>搜索plugin</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">list</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">all</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">grep</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span></code></pre></div><h2 id=\"安装plugin\"><a href=\"#安装plugin\" class=\"headerlink\" title=\"安装plugin\"></a>安装plugin</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">add</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span></code></pre></div><h2 id=\"安装sdk\"><a href=\"#安装sdk\" class=\"headerlink\" title=\"安装sdk\"></a>安装sdk</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\"># 搜索jdk</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">list</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">all</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">grep</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">jdk</span><span style=\"color: #F8F8F2\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 安装jdk</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\"># 安装指定版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17.0</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\"># 安装指定版本的最新版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17:latest</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\"># 安装最新稳定版</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">latest</span></span></code></pre></div><h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 设置命令行使用的版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">global</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 设置当前路径使用的jdk版本,会在当前目录下生成一个.tool-versions文件</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">local</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17</span></span></code></pre></div><h2 id=\"其他常用命令\"><a href=\"#其他常用命令\" class=\"headerlink\" title=\"其他常用命令\"></a>其他常用命令</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\"># 查看当前各个sdk的版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">current</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 查看当前java使用的sdk版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">current</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 查看安装那些plugin</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">list</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 查看当前使用的java 命令的路径</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #F1FA8C\">which</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 查看当前使用的java sdk的路径</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">where</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 移除对应的sdk</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">uninstall</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 移除对应的plugin</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">remove</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 更新(所有)plugin</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">update</span><span style=\"color: #F8F8F2\"> [--all]</span></span></code></pre></div><h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><code>asdf</code><a href=\"https://asdf-vm.com/\">官方文档</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>对于我这种使用多种语言开发,并且可能在给个版本之前来回切换的人来说,一直渴望一个好的<code>sdk</code>管理工具<br>举个具体的例子:有两个项目,一个项目使用<code>jdk-8</code>另一个项目使用<code>jdk-17</code>,在<code>ide</code>里面还好说,毕竟可选择,但是当你在命令行里面操作时,来回切换<code>jdk</code>有多难受就不必我多说了吧<br>而且如果要用两个<code>jdk</code>,这两个就要使用<code>HomeBrew</code>安装两个<code>jdk</code>,而且安装的路径还不一样</p>\n<p>除此之外,还有前端的<code>node</code>版本,不同的项目使用的<code>NodeJs</code>版本不同,换来换区也是麻烦的不行</p>\n<p>这个时候就体现了<a href=\"https://asdf-vm.com/\">asdf</a>这个工具的方便之处,</p>\n<p>如果使用来<code>asdf</code>,那么安装和切换<code>jdk</code>的版本就会如此美妙</p>\n<p>现在假设在使用<code>asdf</code>的情况下,如果有两个项目<code>a</code> 和 <code>b</code>,分别使用<code>jdk-8</code>和<code>jdk-17</code>,那么管理的流程就是如下的</p>\n<ol>\n<li>安装对应的<code>jdk</code>:<code>asdf install java openjdk-8</code>, <code>asdf install java openjdk-17</code></li>\n<li>分别进入<code>a</code>和<code>b</code>两个目录,执行<code>asdf local java openjdk-8</code>,<code>asdf local java openjdk-17</code></li>\n</ol>\n<p>这个时候,当你在命令行进入对应的项目,你执行<code>java -version</code>就会对应不同的<code>jdk</code>版本</p>\n<p>而且安装的<code>jdk</code>统一的都在<code>~/.asdf.plugins/java</code>目录下,丝毫不会污染你其他的目录,干净又卫生了属于是</p>\n<p>下面简单说下安装以及使用,基本上是官方文档内容</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>我是使用<code>HomeBrew</code>安装</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">brew</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">asdf</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD\">echo</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-e</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">\\n. $(</span><span style=\"color: #50FA7B\">brew</span><span style=\"color: #F1FA8C\"> </span><span style=\"color: #BD93F9\">--prefix</span><span style=\"color: #F1FA8C\"> asdf)/libexec/asdf.sh</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> $&#123;</span><span style=\"color: #BD93F9\">ZDOTDIR</span><span style=\"color: #FF79C6\">:-</span><span style=\"color: #F8F8F2\">~&#125;</span><span style=\"color: #F1FA8C\">/.zshrc</span></span></code></pre></div><h1 id=\"使用-以java为例\"><a href=\"#使用-以java为例\" class=\"headerlink\" title=\"使用(以java为例)\"></a>使用(以java为例)</h1><h2 id=\"plugin\"><a href=\"#plugin\" class=\"headerlink\" title=\"plugin\"></a>plugin</h2><p>在<code>asdf</code>的语义中,<code>plugin</code>就是帮你管理对应语言<code>sdk</code>的模块,比如你需要下载是管理<code>java</code>的版本,你就需要下载对应的<code>java plugin</code></p>\n<h2 id=\"搜索plugin\"><a href=\"#搜索plugin\" class=\"headerlink\" title=\"搜索plugin\"></a>搜索plugin</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">list</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">all</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">grep</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span></code></pre></div><h2 id=\"安装plugin\"><a href=\"#安装plugin\" class=\"headerlink\" title=\"安装plugin\"></a>安装plugin</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">add</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span></code></pre></div><h2 id=\"安装sdk\"><a href=\"#安装sdk\" class=\"headerlink\" title=\"安装sdk\"></a>安装sdk</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\"># 搜索jdk</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">list</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">all</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">grep</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">jdk</span><span style=\"color: #F8F8F2\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 安装jdk</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\"># 安装指定版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17.0</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\"># 安装指定版本的最新版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17:latest</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #6272A4\"># 安装最新稳定版</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">install</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">latest</span></span></code></pre></div><h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 设置命令行使用的版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">global</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 设置当前路径使用的jdk版本,会在当前目录下生成一个.tool-versions文件</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">local</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17</span></span></code></pre></div><h2 id=\"其他常用命令\"><a href=\"#其他常用命令\" class=\"headerlink\" title=\"其他常用命令\"></a>其他常用命令</h2><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\"># 查看当前各个sdk的版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">current</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 查看当前java使用的sdk版本</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">current</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 查看安装那些plugin</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">list</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 查看当前使用的java 命令的路径</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #F1FA8C\">which</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 查看当前使用的java sdk的路径</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">where</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 移除对应的sdk</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">uninstall</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">openjdk-17</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 移除对应的plugin</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">remove</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">java</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 更新(所有)plugin</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">asdf</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">plugin</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">update</span><span style=\"color: #F8F8F2\"> [--all]</span></span></code></pre></div><h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><code>asdf</code><a href=\"https://asdf-vm.com/\">官方文档</a></p>\n"},{"title":"手把手教你开发一个neovim插件","cover":"https://source.unsplash.com/iMwiPZNX3SI/1200x628","date":"2023-10-12T09:10:19.000Z","abstracts":"手把手胸贴胸教你开发一个neovim插件","_content":"\n\n# 开篇废话\n\n使用`neovim`久了,使用了众多插件,不自己开发一个插件,怎么好标榜自己是一个`vimer`?\n今天老夫就手把手教大家开发一个自己的`neovim`插件\n\n# 项目结构与插件路径\n\n## 插件路径\n\n这里差不多也是废话,理论上来说,`vim`的插件可以在任何位置,插件的方式也可以是各种形式,不过为了这里面还是有一些潜规则的.\n首先就是插件的路径,一般来说,`neovim`会默认加载一些路径,可以在`neovim`中执行`echo &rtp`(rtp:runtime path)来查看默认的加载路径有哪些,不过由于我们是\n自己开发的插件,就暂时不要放在这些路径里面了,避免启动时报错,假设我现在放在了`~/temp/neovim/lua/lowb`这个目录下进行开发`lowb`插件,然后在启动`neovim`的时候使用`nvim --cmd \"set rtp+=~/temp/neovim\"`启动就可以加载`lowb`插件了,\n插件名就是`lua`路径下的文件夹名,如果你的插件比较简单,可以不用新建一个文件夹,直接搞一个`lowb.lua`就可以加载了,不过按照约定一般是有一个文件夹的,方便发布,供其他人使用\n\n**这里需要注意,一定放在`lua`的子目录下,否则`neovim`是不会进行加载这个插件的,[参考](https://neovim.io/doc/user/lua-guide.html#lua-guide-modules)**\n\n## 项目结构\n\n\n### init.lua\n\n`neovim`会自动加载目录下的`init.lua`作为`neovim`的默认加载文件\n\n\n# 开始开发\n\n## 加载\n\n确定了插件路径和项目结构,就可以开发`lowb`插件了,在`~/temp/neovim/lua/lowb`,先新建一个`init.lua`文件,文件内容如下:\n```lua\nprint(\"Hello lowb\")\n\n```\n\n然后使用`nvim -c \"set rtp+=~/temp/neovim\"`启动`neovim` \n\n进入`neovim`的命令模式执行:`lua require('lowb')`\n可以看到会打印`Hello lowb`\nOK,现在插件成功加载了\n\n\n## 导出函数\n\n插件肯定不能简单的加载,还要导出一些函数供用户使用,更新`init.lua`\n\n```lua\nlocal M = {}\nfunction M.say_lowb()\n    print(\"hello lowb\")\nend\n\nreturn M\n```\n\n\n保存插件,重新使用命令`nvim -c \"set rtp+=~/temp/neovim\"`启动`neovim`\n进入`neovim`的命令模式执行:`lua require('lowb').say_lowb()`\n\n现在`lowb`插件基本完成,还有一项功能就是给用户设置的能力\n\n\n## setup函数\n\n`neovim`插件一般是通过向外暴露一个`setup`函数来给用户设定,这倒不是强制规定,只是一个默认约定,像一些插件管理工具,比如[lazy.vim](https://github.com/folke/lazy.nvim)一般就是默认使用`setup`来进行初始化插件,\n\n现在再改一下`init.lua`文件\n\n```lua\nlocal default_config = {\n    name = \"狗蛋\"\n}\n\nlocal M = {\n    config = default_config\n}\nfunction M.say_lowb()\n    print(\"hello lowb \"..M.config.name)\nend\n\n\n\nfunction M.setup(config)\n    M.config = config\n    vim.print(M)\nend\n\nreturn M\n\n```\n\n保存退出,重新使用命令:`nvim -c \"set rtp+=~/temp/neovim\"` 启动`neovim`,\n\n进入命令模式执行以下命令\n\n```vim\nlua require('lowb').setup({name=finger})\nlua require('lowb').say_lowb()\n\n```\n就会看到打印的信息从\"狗蛋\"更新为\"finger\"\n\n\n\n现在一个简单的`neovim`插件就开发完成了,至于能做什么\n\n**想象力越大,能力越大**\n","source":"_posts/how-to-develope-a-neovim-plugin.md","raw":"\ntitle: 手把手教你开发一个neovim插件\ntags:\n  - neovim\ncategories:\n  - neovim奇技淫巧\ncover: https://source.unsplash.com/iMwiPZNX3SI/1200x628\ndate: 2023-10-12 17:10:19\nabstracts: 手把手胸贴胸教你开发一个neovim插件\n---\n\n\n# 开篇废话\n\n使用`neovim`久了,使用了众多插件,不自己开发一个插件,怎么好标榜自己是一个`vimer`?\n今天老夫就手把手教大家开发一个自己的`neovim`插件\n\n# 项目结构与插件路径\n\n## 插件路径\n\n这里差不多也是废话,理论上来说,`vim`的插件可以在任何位置,插件的方式也可以是各种形式,不过为了这里面还是有一些潜规则的.\n首先就是插件的路径,一般来说,`neovim`会默认加载一些路径,可以在`neovim`中执行`echo &rtp`(rtp:runtime path)来查看默认的加载路径有哪些,不过由于我们是\n自己开发的插件,就暂时不要放在这些路径里面了,避免启动时报错,假设我现在放在了`~/temp/neovim/lua/lowb`这个目录下进行开发`lowb`插件,然后在启动`neovim`的时候使用`nvim --cmd \"set rtp+=~/temp/neovim\"`启动就可以加载`lowb`插件了,\n插件名就是`lua`路径下的文件夹名,如果你的插件比较简单,可以不用新建一个文件夹,直接搞一个`lowb.lua`就可以加载了,不过按照约定一般是有一个文件夹的,方便发布,供其他人使用\n\n**这里需要注意,一定放在`lua`的子目录下,否则`neovim`是不会进行加载这个插件的,[参考](https://neovim.io/doc/user/lua-guide.html#lua-guide-modules)**\n\n## 项目结构\n\n\n### init.lua\n\n`neovim`会自动加载目录下的`init.lua`作为`neovim`的默认加载文件\n\n\n# 开始开发\n\n## 加载\n\n确定了插件路径和项目结构,就可以开发`lowb`插件了,在`~/temp/neovim/lua/lowb`,先新建一个`init.lua`文件,文件内容如下:\n```lua\nprint(\"Hello lowb\")\n\n```\n\n然后使用`nvim -c \"set rtp+=~/temp/neovim\"`启动`neovim` \n\n进入`neovim`的命令模式执行:`lua require('lowb')`\n可以看到会打印`Hello lowb`\nOK,现在插件成功加载了\n\n\n## 导出函数\n\n插件肯定不能简单的加载,还要导出一些函数供用户使用,更新`init.lua`\n\n```lua\nlocal M = {}\nfunction M.say_lowb()\n    print(\"hello lowb\")\nend\n\nreturn M\n```\n\n\n保存插件,重新使用命令`nvim -c \"set rtp+=~/temp/neovim\"`启动`neovim`\n进入`neovim`的命令模式执行:`lua require('lowb').say_lowb()`\n\n现在`lowb`插件基本完成,还有一项功能就是给用户设置的能力\n\n\n## setup函数\n\n`neovim`插件一般是通过向外暴露一个`setup`函数来给用户设定,这倒不是强制规定,只是一个默认约定,像一些插件管理工具,比如[lazy.vim](https://github.com/folke/lazy.nvim)一般就是默认使用`setup`来进行初始化插件,\n\n现在再改一下`init.lua`文件\n\n```lua\nlocal default_config = {\n    name = \"狗蛋\"\n}\n\nlocal M = {\n    config = default_config\n}\nfunction M.say_lowb()\n    print(\"hello lowb \"..M.config.name)\nend\n\n\n\nfunction M.setup(config)\n    M.config = config\n    vim.print(M)\nend\n\nreturn M\n\n```\n\n保存退出,重新使用命令:`nvim -c \"set rtp+=~/temp/neovim\"` 启动`neovim`,\n\n进入命令模式执行以下命令\n\n```vim\nlua require('lowb').setup({name=finger})\nlua require('lowb').say_lowb()\n\n```\n就会看到打印的信息从\"狗蛋\"更新为\"finger\"\n\n\n\n现在一个简单的`neovim`插件就开发完成了,至于能做什么\n\n**想象力越大,能力越大**\n","slug":"how-to-develope-a-neovim-plugin","published":1,"updated":"2023-11-11T08:02:25.426Z","_id":"clnn4akny0000n7rrbpai9sai","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"开篇废话\"><a href=\"#开篇废话\" class=\"headerlink\" title=\"开篇废话\"></a>开篇废话</h1><p>使用<code>neovim</code>久了,使用了众多插件,不自己开发一个插件,怎么好标榜自己是一个<code>vimer</code>?<br>今天老夫就手把手教大家开发一个自己的<code>neovim</code>插件</p>\n<h1 id=\"项目结构与插件路径\"><a href=\"#项目结构与插件路径\" class=\"headerlink\" title=\"项目结构与插件路径\"></a>项目结构与插件路径</h1><h2 id=\"插件路径\"><a href=\"#插件路径\" class=\"headerlink\" title=\"插件路径\"></a>插件路径</h2><p>这里差不多也是废话,理论上来说,<code>vim</code>的插件可以在任何位置,插件的方式也可以是各种形式,不过为了这里面还是有一些潜规则的.<br>首先就是插件的路径,一般来说,<code>neovim</code>会默认加载一些路径,可以在<code>neovim</code>中执行<code>echo &amp;rtp</code>(rtp:runtime path)来查看默认的加载路径有哪些,不过由于我们是<br>自己开发的插件,就暂时不要放在这些路径里面了,避免启动时报错,假设我现在放在了<code>~/temp/neovim/lua/lowb</code>这个目录下进行开发<code>lowb</code>插件,然后在启动<code>neovim</code>的时候使用<code>nvim --cmd &quot;set rtp+=~/temp/neovim&quot;</code>启动就可以加载<code>lowb</code>插件了,<br>插件名就是<code>lua</code>路径下的文件夹名,如果你的插件比较简单,可以不用新建一个文件夹,直接搞一个<code>lowb.lua</code>就可以加载了,不过按照约定一般是有一个文件夹的,方便发布,供其他人使用</p>\n<p><strong>这里需要注意,一定放在<code>lua</code>的子目录下,否则<code>neovim</code>是不会进行加载这个插件的,<a href=\"https://neovim.io/doc/user/lua-guide.html#lua-guide-modules\">参考</a></strong></p>\n<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><h3 id=\"init-lua\"><a href=\"#init-lua\" class=\"headerlink\" title=\"init.lua\"></a>init.lua</h3><p><code>neovim</code>会自动加载目录下的<code>init.lua</code>作为<code>neovim</code>的默认加载文件</p>\n<h1 id=\"开始开发\"><a href=\"#开始开发\" class=\"headerlink\" title=\"开始开发\"></a>开始开发</h1><h2 id=\"加载\"><a href=\"#加载\" class=\"headerlink\" title=\"加载\"></a>加载</h2><p>确定了插件路径和项目结构,就可以开发<code>lowb</code>插件了,在<code>~/temp/neovim/lua/lowb</code>,先新建一个<code>init.lua</code>文件,文件内容如下:</p>\n<div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">print</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Hello lowb</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span></code></pre></div><p>然后使用<code>nvim -c &quot;set rtp+=~/temp/neovim&quot;</code>启动<code>neovim</code> </p>\n<p>进入<code>neovim</code>的命令模式执行:<code>lua require(&#39;lowb&#39;)</code><br>可以看到会打印<code>Hello lowb</code><br>OK,现在插件成功加载了</p>\n<h2 id=\"导出函数\"><a href=\"#导出函数\" class=\"headerlink\" title=\"导出函数\"></a>导出函数</h2><p>插件肯定不能简单的加载,还要导出一些函数供用户使用,更新<code>init.lua</code></p>\n<div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> M </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">M</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">say_lowb</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">print</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">hello lowb</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> M</span></span></code></pre></div><p>保存插件,重新使用命令<code>nvim -c &quot;set rtp+=~/temp/neovim&quot;</code>启动<code>neovim</code><br>进入<code>neovim</code>的命令模式执行:<code>lua require(&#39;lowb&#39;).say_lowb()</code></p>\n<p>现在<code>lowb</code>插件基本完成,还有一项功能就是给用户设置的能力</p>\n<h2 id=\"setup函数\"><a href=\"#setup函数\" class=\"headerlink\" title=\"setup函数\"></a>setup函数</h2><p><code>neovim</code>插件一般是通过向外暴露一个<code>setup</code>函数来给用户设定,这倒不是强制规定,只是一个默认约定,像一些插件管理工具,比如<a href=\"https://github.com/folke/lazy.nvim\">lazy.vim</a>一般就是默认使用<code>setup</code>来进行初始化插件,</p>\n<p>现在再改一下<code>init.lua</code>文件</p>\n<div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> default_config </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    name </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">狗蛋</span><span style=\"color: #E9F284\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> M </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    config </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> default_config</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">M</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">say_lowb</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">print</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">hello lowb </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #FF79C6\">..</span><span style=\"color: #F8F8F2\">M.config.name)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">M</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">setup</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FFB86C; font-style: italic\">config</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    M.config </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> config</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vim.</span><span style=\"color: #50FA7B\">print</span><span style=\"color: #F8F8F2\">(M)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> M</span></span>\n<span class=\"line\"></span></code></pre></div><p>保存退出,重新使用命令:<code>nvim -c &quot;set rtp+=~/temp/neovim&quot;</code> 启动<code>neovim</code>,</p>\n<p>进入命令模式执行以下命令</p>\n<div class=\"language-vim\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">vim</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">lua </span><span style=\"color: #50FA7B\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&#39;lowb&#39;</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #50FA7B\">.setup</span><span style=\"color: #F8F8F2\">(&#123;name</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">finger&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">lua </span><span style=\"color: #50FA7B\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&#39;lowb&#39;</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #50FA7B\">.say_lowb</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"></span></code></pre></div><p>就会看到打印的信息从”狗蛋”更新为”finger”</p>\n<p>现在一个简单的<code>neovim</code>插件就开发完成了,至于能做什么</p>\n<p><strong>想象力越大,能力越大</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"开篇废话\"><a href=\"#开篇废话\" class=\"headerlink\" title=\"开篇废话\"></a>开篇废话</h1><p>使用<code>neovim</code>久了,使用了众多插件,不自己开发一个插件,怎么好标榜自己是一个<code>vimer</code>?<br>今天老夫就手把手教大家开发一个自己的<code>neovim</code>插件</p>\n<h1 id=\"项目结构与插件路径\"><a href=\"#项目结构与插件路径\" class=\"headerlink\" title=\"项目结构与插件路径\"></a>项目结构与插件路径</h1><h2 id=\"插件路径\"><a href=\"#插件路径\" class=\"headerlink\" title=\"插件路径\"></a>插件路径</h2><p>这里差不多也是废话,理论上来说,<code>vim</code>的插件可以在任何位置,插件的方式也可以是各种形式,不过为了这里面还是有一些潜规则的.<br>首先就是插件的路径,一般来说,<code>neovim</code>会默认加载一些路径,可以在<code>neovim</code>中执行<code>echo &amp;rtp</code>(rtp:runtime path)来查看默认的加载路径有哪些,不过由于我们是<br>自己开发的插件,就暂时不要放在这些路径里面了,避免启动时报错,假设我现在放在了<code>~/temp/neovim/lua/lowb</code>这个目录下进行开发<code>lowb</code>插件,然后在启动<code>neovim</code>的时候使用<code>nvim --cmd &quot;set rtp+=~/temp/neovim&quot;</code>启动就可以加载<code>lowb</code>插件了,<br>插件名就是<code>lua</code>路径下的文件夹名,如果你的插件比较简单,可以不用新建一个文件夹,直接搞一个<code>lowb.lua</code>就可以加载了,不过按照约定一般是有一个文件夹的,方便发布,供其他人使用</p>\n<p><strong>这里需要注意,一定放在<code>lua</code>的子目录下,否则<code>neovim</code>是不会进行加载这个插件的,<a href=\"https://neovim.io/doc/user/lua-guide.html#lua-guide-modules\">参考</a></strong></p>\n<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><h3 id=\"init-lua\"><a href=\"#init-lua\" class=\"headerlink\" title=\"init.lua\"></a>init.lua</h3><p><code>neovim</code>会自动加载目录下的<code>init.lua</code>作为<code>neovim</code>的默认加载文件</p>\n<h1 id=\"开始开发\"><a href=\"#开始开发\" class=\"headerlink\" title=\"开始开发\"></a>开始开发</h1><h2 id=\"加载\"><a href=\"#加载\" class=\"headerlink\" title=\"加载\"></a>加载</h2><p>确定了插件路径和项目结构,就可以开发<code>lowb</code>插件了,在<code>~/temp/neovim/lua/lowb</code>,先新建一个<code>init.lua</code>文件,文件内容如下:</p>\n<div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">print</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">Hello lowb</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span></code></pre></div><p>然后使用<code>nvim -c &quot;set rtp+=~/temp/neovim&quot;</code>启动<code>neovim</code> </p>\n<p>进入<code>neovim</code>的命令模式执行:<code>lua require(&#39;lowb&#39;)</code><br>可以看到会打印<code>Hello lowb</code><br>OK,现在插件成功加载了</p>\n<h2 id=\"导出函数\"><a href=\"#导出函数\" class=\"headerlink\" title=\"导出函数\"></a>导出函数</h2><p>插件肯定不能简单的加载,还要导出一些函数供用户使用,更新<code>init.lua</code></p>\n<div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> M </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">M</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">say_lowb</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">print</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">hello lowb</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> M</span></span></code></pre></div><p>保存插件,重新使用命令<code>nvim -c &quot;set rtp+=~/temp/neovim&quot;</code>启动<code>neovim</code><br>进入<code>neovim</code>的命令模式执行:<code>lua require(&#39;lowb&#39;).say_lowb()</code></p>\n<p>现在<code>lowb</code>插件基本完成,还有一项功能就是给用户设置的能力</p>\n<h2 id=\"setup函数\"><a href=\"#setup函数\" class=\"headerlink\" title=\"setup函数\"></a>setup函数</h2><p><code>neovim</code>插件一般是通过向外暴露一个<code>setup</code>函数来给用户设定,这倒不是强制规定,只是一个默认约定,像一些插件管理工具,比如<a href=\"https://github.com/folke/lazy.nvim\">lazy.vim</a>一般就是默认使用<code>setup</code>来进行初始化插件,</p>\n<p>现在再改一下<code>init.lua</code>文件</p>\n<div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> default_config </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    name </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">狗蛋</span><span style=\"color: #E9F284\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> M </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    config </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> default_config</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">M</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">say_lowb</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #8BE9FD\">print</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">hello lowb </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #FF79C6\">..</span><span style=\"color: #F8F8F2\">M.config.name)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">M</span><span style=\"color: #F8F8F2\">.</span><span style=\"color: #50FA7B\">setup</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FFB86C; font-style: italic\">config</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    M.config </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> config</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vim.</span><span style=\"color: #50FA7B\">print</span><span style=\"color: #F8F8F2\">(M)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> M</span></span>\n<span class=\"line\"></span></code></pre></div><p>保存退出,重新使用命令:<code>nvim -c &quot;set rtp+=~/temp/neovim&quot;</code> 启动<code>neovim</code>,</p>\n<p>进入命令模式执行以下命令</p>\n<div class=\"language-vim\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">vim</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">lua </span><span style=\"color: #50FA7B\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&#39;lowb&#39;</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #50FA7B\">.setup</span><span style=\"color: #F8F8F2\">(&#123;name</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">finger&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">lua </span><span style=\"color: #50FA7B\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&#39;lowb&#39;</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #50FA7B\">.say_lowb</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"></span></code></pre></div><p>就会看到打印的信息从”狗蛋”更新为”finger”</p>\n<p>现在一个简单的<code>neovim</code>插件就开发完成了,至于能做什么</p>\n<p><strong>想象力越大,能力越大</strong></p>\n"},{"title":"idea怎么在project 选项卡中隐藏特定的文件和文件夹","cover":"https://source.unsplash.com/a-close-up-of-a-laptop-computer-with-code-on-the-screen-lYFERR5dTG4/1200x628","date":"2023-10-13T07:01:29.000Z","abstracts":"idea在特定选项卡中隐藏特定的文件或文件夹","_content":"\n在日常使用`idea`项目开发中,有些文件或者文件夹不想在`project`选项卡中显示,想要隐藏掉,\n隐藏方法:\n\n`File -> Settings -> Editor -> File Types -> Ignore Files And folders`\n","source":"_posts/idea-how-to-hide-folder-in-project.md","raw":"---\ntitle: idea怎么在project 选项卡中隐藏特定的文件和文件夹\ntags:\n  - idea\ncategories:\n  - some litttle tricks\ncover: https://source.unsplash.com/a-close-up-of-a-laptop-computer-with-code-on-the-screen-lYFERR5dTG4/1200x628\ndate: 2023-10-13 15:01:29\nabstracts: idea在特定选项卡中隐藏特定的文件或文件夹\n---\n\n在日常使用`idea`项目开发中,有些文件或者文件夹不想在`project`选项卡中显示,想要隐藏掉,\n隐藏方法:\n\n`File -> Settings -> Editor -> File Types -> Ignore Files And folders`\n","slug":"idea-how-to-hide-folder-in-project","published":1,"updated":"2023-11-01T07:58:19.615Z","_id":"clnucuxmp00004lrrdw340n7h","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在日常使用<code>idea</code>项目开发中,有些文件或者文件夹不想在<code>project</code>选项卡中显示,想要隐藏掉,<br>隐藏方法:</p>\n<p><code>File -&gt; Settings -&gt; Editor -&gt; File Types -&gt; Ignore Files And folders</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在日常使用<code>idea</code>项目开发中,有些文件或者文件夹不想在<code>project</code>选项卡中显示,想要隐藏掉,<br>隐藏方法:</p>\n<p><code>File -&gt; Settings -&gt; Editor -&gt; File Types -&gt; Ignore Files And folders</code></p>\n"},{"title":"vim重用高效快捷键","cover":"https://source.unsplash.com/1200x628","date":"2023-10-17T13:22:24.000Z","abstracts":"neovim中有很多快捷键,不说浩如星辰,也可以说是眼花缭乱,老夫整理了一些使用起来非常高效的快捷键,用来记录","_content":"\n# INSERT MODE\n\n| 快捷键 | 说明                                    |\n|--------|-----------------------------------------|\n| C-R    | 插入寄存器内容,一般用于快速插入粘贴内容 |\n| C-O    | 执行命令                                |\n\n\n\n# NORMAL MODE\n\n","source":"_drafts/vim-userful-shortcut.md","raw":"---\ntitle: vim重用高效快捷键\ntags:\n  - vim\ncategories:\n  - vim奇技淫巧\ncover: https://source.unsplash.com/1200x628\ndate: 2023-10-17 21:22:24\nabstracts: neovim中有很多快捷键,不说浩如星辰,也可以说是眼花缭乱,老夫整理了一些使用起来非常高效的快捷键,用来记录\n---\n\n# INSERT MODE\n\n| 快捷键 | 说明                                    |\n|--------|-----------------------------------------|\n| C-R    | 插入寄存器内容,一般用于快速插入粘贴内容 |\n| C-O    | 执行命令                                |\n\n\n\n# NORMAL MODE\n\n","slug":"vim-userful-shortcut","published":0,"updated":"2023-10-17T13:32:13.064Z","_id":"clnucuxmx00034lrr0nqfcz7y","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"INSERT-MODE\"><a href=\"#INSERT-MODE\" class=\"headerlink\" title=\"INSERT MODE\"></a>INSERT MODE</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-R</td>\n<td>插入寄存器内容,一般用于快速插入粘贴内容</td>\n</tr>\n<tr>\n<td>C-O</td>\n<td>执行命令</td>\n</tr>\n</tbody></table>\n<h1 id=\"NORMAL-MODE\"><a href=\"#NORMAL-MODE\" class=\"headerlink\" title=\"NORMAL MODE\"></a>NORMAL MODE</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"INSERT-MODE\"><a href=\"#INSERT-MODE\" class=\"headerlink\" title=\"INSERT MODE\"></a>INSERT MODE</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-R</td>\n<td>插入寄存器内容,一般用于快速插入粘贴内容</td>\n</tr>\n<tr>\n<td>C-O</td>\n<td>执行命令</td>\n</tr>\n</tbody></table>\n<h1 id=\"NORMAL-MODE\"><a href=\"#NORMAL-MODE\" class=\"headerlink\" title=\"NORMAL MODE\"></a>NORMAL MODE</h1>"},{"title":"管道操作符和xargs的区别","cover":"https://source.unsplash.com/a-computer-screen-with-a-program-running-on-it-NLSXFjl_nhc/1200x628","date":"2023-10-31T09:38:16.000Z","abstracts":"shell中管道操作符和xargs的区别","_content":"\n\n之前一直没有理解shell中管道操作符和xargs的区别,为什么有一些命令要用可以直接用管道操作符链接,为什么一些需要加个`xargs`,最近翻了一些文档之后,终于理解\n\n\n# 官方定义\n\n最好的解释永远来自于官方文档,正所谓真传一句话,假传万卷书.\n\n## 管道操作符\n\nA pipeline is a sequence of one or more commands separated by one of the control operators ‘|’ or ‘|&’.\nThe output of each command in the pipeline is connected via a pipe to the input of the next command. That is, each command reads the previous command’s output. This connection is performed before any redirections specified by command1.\n\n\n简单来说就是,管道操作符连接一系列命令,前面的标准输出作为后面的标准输入\n\n\n\n## xargs\n\nThe xargs utility reads space, tab, newline and end-of-file delimited strings from the standard input and executes utility with the strings\n     as arguments.\nAny arguments specified on the command line are given to utility upon each invocation, followed by some number of the arguments read from\nthe standard input of xargs.  This is repeated until standard input is exhausted.\n\nSpaces, tabs and newlines may be embedded in arguments using single (`` ' '') or double (``\"'') quotes or backslashes (``\\'').  Single\nquotes escape all non-single quote characters, excluding newlines, up to the matching single quote.  Double quotes escape all non-double\nquote characters, excluding newlines, up to the matching double quote.  Any single character, including newlines, may be escaped by a\nbackslash.\n\n\n\n简单来说,就是xargs是从标准输入读取内容,作为`xrags`命令后面跟的命令的参数\n\n\n## 举个例子\n\n### 管道操作符\n\n```shell\necho \"hello \\n world\" | grep hello\n```\n\n`echo \"hello world\"` 会将`hello world`字符串输出到**标准输出**,然后通过管道操作符作为 `grep hello`这条命令的**标准输入**\n\n上面的命令相当于下面的命令\n\n```shell\n\ngrep hello      # 执行完按回车\nhello       # 输入hello world\nhello      # 打印hello\nworld   # 输入world 什么也不打印\n```\n\n### xargs\n\n```shell\nxargs ls #按回车\n/usr     #按ctrl-d 会打印/usr目录下的所有文件\n```\n\n`ctrl-d`相当于向`shell`输入了一个`eof`,表示输入完成\n\n### 组合\n\n这两个命令一般是组合使用\n\n比如:\n\n```shell\ncat a.txt | xargs mkdir -p \n```\n\n这条命令的含义是,将a.ext文件中的内容作为文件夹名,新建一个文件夹\n其中,`cat a.txt`命令是将`a.txt`中的内容输出到**标准输出**,然后通过管道操作符作为`xargs mkdir -p`这个命令的标准输入,`xargs`将前面传过来的标准输入作为`mkdir -p` 这条命令的**参数**\n\n# 标准输入/标准输出/参数\n\n在linux中,默认情况下\n\n标准输入是指键盘\n标准输出是指屏幕\n参数就是命令后面跟着的内容\n\n\n## 举个例子\n\n```shell\n$ cat hello-world.txt #  hello-world.txt 是参数\n\n$ cat   #执行cat命令后回车\n$ hello  #输入hello   这里的hello就是标准输入\n$ hello  # 命令行打印hello  这里打印的hello就是找女友输入\n```\n\n\n\n\n","source":"_posts/shell-pipeline-and-xargs.md","raw":"---\ntitle: 管道操作符和xargs的区别\ntags:\n  - shell\ncategories:\n  - shell\ncover: https://source.unsplash.com/a-computer-screen-with-a-program-running-on-it-NLSXFjl_nhc/1200x628\ndate: 2023-10-31 17:38:16\nabstracts: shell中管道操作符和xargs的区别\n---\n\n\n之前一直没有理解shell中管道操作符和xargs的区别,为什么有一些命令要用可以直接用管道操作符链接,为什么一些需要加个`xargs`,最近翻了一些文档之后,终于理解\n\n\n# 官方定义\n\n最好的解释永远来自于官方文档,正所谓真传一句话,假传万卷书.\n\n## 管道操作符\n\nA pipeline is a sequence of one or more commands separated by one of the control operators ‘|’ or ‘|&’.\nThe output of each command in the pipeline is connected via a pipe to the input of the next command. That is, each command reads the previous command’s output. This connection is performed before any redirections specified by command1.\n\n\n简单来说就是,管道操作符连接一系列命令,前面的标准输出作为后面的标准输入\n\n\n\n## xargs\n\nThe xargs utility reads space, tab, newline and end-of-file delimited strings from the standard input and executes utility with the strings\n     as arguments.\nAny arguments specified on the command line are given to utility upon each invocation, followed by some number of the arguments read from\nthe standard input of xargs.  This is repeated until standard input is exhausted.\n\nSpaces, tabs and newlines may be embedded in arguments using single (`` ' '') or double (``\"'') quotes or backslashes (``\\'').  Single\nquotes escape all non-single quote characters, excluding newlines, up to the matching single quote.  Double quotes escape all non-double\nquote characters, excluding newlines, up to the matching double quote.  Any single character, including newlines, may be escaped by a\nbackslash.\n\n\n\n简单来说,就是xargs是从标准输入读取内容,作为`xrags`命令后面跟的命令的参数\n\n\n## 举个例子\n\n### 管道操作符\n\n```shell\necho \"hello \\n world\" | grep hello\n```\n\n`echo \"hello world\"` 会将`hello world`字符串输出到**标准输出**,然后通过管道操作符作为 `grep hello`这条命令的**标准输入**\n\n上面的命令相当于下面的命令\n\n```shell\n\ngrep hello      # 执行完按回车\nhello       # 输入hello world\nhello      # 打印hello\nworld   # 输入world 什么也不打印\n```\n\n### xargs\n\n```shell\nxargs ls #按回车\n/usr     #按ctrl-d 会打印/usr目录下的所有文件\n```\n\n`ctrl-d`相当于向`shell`输入了一个`eof`,表示输入完成\n\n### 组合\n\n这两个命令一般是组合使用\n\n比如:\n\n```shell\ncat a.txt | xargs mkdir -p \n```\n\n这条命令的含义是,将a.ext文件中的内容作为文件夹名,新建一个文件夹\n其中,`cat a.txt`命令是将`a.txt`中的内容输出到**标准输出**,然后通过管道操作符作为`xargs mkdir -p`这个命令的标准输入,`xargs`将前面传过来的标准输入作为`mkdir -p` 这条命令的**参数**\n\n# 标准输入/标准输出/参数\n\n在linux中,默认情况下\n\n标准输入是指键盘\n标准输出是指屏幕\n参数就是命令后面跟着的内容\n\n\n## 举个例子\n\n```shell\n$ cat hello-world.txt #  hello-world.txt 是参数\n\n$ cat   #执行cat命令后回车\n$ hello  #输入hello   这里的hello就是标准输入\n$ hello  # 命令行打印hello  这里打印的hello就是找女友输入\n```\n\n\n\n\n","slug":"shell-pipeline-and-xargs","published":1,"updated":"2023-11-01T07:57:28.588Z","_id":"clofgk1ln0000s67q2uh402a7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>之前一直没有理解shell中管道操作符和xargs的区别,为什么有一些命令要用可以直接用管道操作符链接,为什么一些需要加个<code>xargs</code>,最近翻了一些文档之后,终于理解</p>\n<h1 id=\"官方定义\"><a href=\"#官方定义\" class=\"headerlink\" title=\"官方定义\"></a>官方定义</h1><p>最好的解释永远来自于官方文档,正所谓真传一句话,假传万卷书.</p>\n<h2 id=\"管道操作符\"><a href=\"#管道操作符\" class=\"headerlink\" title=\"管道操作符\"></a>管道操作符</h2><p>A pipeline is a sequence of one or more commands separated by one of the control operators ‘|’ or ‘|&amp;’.<br>The output of each command in the pipeline is connected via a pipe to the input of the next command. That is, each command reads the previous command’s output. This connection is performed before any redirections specified by command1.</p>\n<p>简单来说就是,管道操作符连接一系列命令,前面的标准输出作为后面的标准输入</p>\n<h2 id=\"xargs\"><a href=\"#xargs\" class=\"headerlink\" title=\"xargs\"></a>xargs</h2><p>The xargs utility reads space, tab, newline and end-of-file delimited strings from the standard input and executes utility with the strings<br>     as arguments.<br>Any arguments specified on the command line are given to utility upon each invocation, followed by some number of the arguments read from<br>the standard input of xargs.  This is repeated until standard input is exhausted.</p>\n<p>Spaces, tabs and newlines may be embedded in arguments using single (<code> &#39; &#39;&#39;) or double (</code>“‘’) quotes or backslashes (&#96;&#96;&#39;‘).  Single<br>quotes escape all non-single quote characters, excluding newlines, up to the matching single quote.  Double quotes escape all non-double<br>quote characters, excluding newlines, up to the matching double quote.  Any single character, including newlines, may be escaped by a<br>backslash.</p>\n<p>简单来说,就是xargs是从标准输入读取内容,作为<code>xrags</code>命令后面跟的命令的参数</p>\n<h2 id=\"举个例子\"><a href=\"#举个例子\" class=\"headerlink\" title=\"举个例子\"></a>举个例子</h2><h3 id=\"管道操作符-1\"><a href=\"#管道操作符-1\" class=\"headerlink\" title=\"管道操作符\"></a>管道操作符</h3><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">echo</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">hello \\n world</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">grep</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello</span></span></code></pre></div><p><code>echo &quot;hello world&quot;</code> 会将<code>hello world</code>字符串输出到<strong>标准输出</strong>,然后通过管道操作符作为 <code>grep hello</code>这条命令的<strong>标准输入</strong></p>\n<p>上面的命令相当于下面的命令</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">grep</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello</span><span style=\"color: #F8F8F2\">      </span><span style=\"color: #6272A4\"># 执行完按回车</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">hello</span><span style=\"color: #F8F8F2\">       </span><span style=\"color: #6272A4\"># 输入hello world</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">hello</span><span style=\"color: #F8F8F2\">      </span><span style=\"color: #6272A4\"># 打印hello</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">world</span><span style=\"color: #F8F8F2\">   </span><span style=\"color: #6272A4\"># 输入world 什么也不打印</span></span></code></pre></div><h3 id=\"xargs-1\"><a href=\"#xargs-1\" class=\"headerlink\" title=\"xargs\"></a>xargs</h3><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">xargs</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">ls</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #6272A4\">#按回车</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">/usr</span><span style=\"color: #F8F8F2\">     </span><span style=\"color: #6272A4\">#按ctrl-d 会打印/usr目录下的所有文件</span></span></code></pre></div><p><code>ctrl-d</code>相当于向<code>shell</code>输入了一个<code>eof</code>,表示输入完成</p>\n<h3 id=\"组合\"><a href=\"#组合\" class=\"headerlink\" title=\"组合\"></a>组合</h3><p>这两个命令一般是组合使用</p>\n<p>比如:</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">cat</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">a.txt</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">xargs</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">mkdir</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-p</span><span style=\"color: #F8F8F2\"> </span></span></code></pre></div><p>这条命令的含义是,将a.ext文件中的内容作为文件夹名,新建一个文件夹<br>其中,<code>cat a.txt</code>命令是将<code>a.txt</code>中的内容输出到<strong>标准输出</strong>,然后通过管道操作符作为<code>xargs mkdir -p</code>这个命令的标准输入,<code>xargs</code>将前面传过来的标准输入作为<code>mkdir -p</code> 这条命令的<strong>参数</strong></p>\n<h1 id=\"标准输入-标准输出-参数\"><a href=\"#标准输入-标准输出-参数\" class=\"headerlink\" title=\"标准输入&#x2F;标准输出&#x2F;参数\"></a>标准输入&#x2F;标准输出&#x2F;参数</h1><p>在linux中,默认情况下</p>\n<p>标准输入是指键盘<br>标准输出是指屏幕<br>参数就是命令后面跟着的内容</p>\n<h2 id=\"举个例子-1\"><a href=\"#举个例子-1\" class=\"headerlink\" title=\"举个例子\"></a>举个例子</h2><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">$</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">cat</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello-world.txt</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #6272A4\">#  hello-world.txt 是参数</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">$</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">cat</span><span style=\"color: #F8F8F2\">   </span><span style=\"color: #6272A4\">#执行cat命令后回车</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">$</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\">#输入hello   这里的hello就是标准输入</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">$</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\"># 命令行打印hello  这里打印的hello就是找女友输入</span></span></code></pre></div>","site":{"data":{}},"excerpt":"","more":"<p>之前一直没有理解shell中管道操作符和xargs的区别,为什么有一些命令要用可以直接用管道操作符链接,为什么一些需要加个<code>xargs</code>,最近翻了一些文档之后,终于理解</p>\n<h1 id=\"官方定义\"><a href=\"#官方定义\" class=\"headerlink\" title=\"官方定义\"></a>官方定义</h1><p>最好的解释永远来自于官方文档,正所谓真传一句话,假传万卷书.</p>\n<h2 id=\"管道操作符\"><a href=\"#管道操作符\" class=\"headerlink\" title=\"管道操作符\"></a>管道操作符</h2><p>A pipeline is a sequence of one or more commands separated by one of the control operators ‘|’ or ‘|&amp;’.<br>The output of each command in the pipeline is connected via a pipe to the input of the next command. That is, each command reads the previous command’s output. This connection is performed before any redirections specified by command1.</p>\n<p>简单来说就是,管道操作符连接一系列命令,前面的标准输出作为后面的标准输入</p>\n<h2 id=\"xargs\"><a href=\"#xargs\" class=\"headerlink\" title=\"xargs\"></a>xargs</h2><p>The xargs utility reads space, tab, newline and end-of-file delimited strings from the standard input and executes utility with the strings<br>     as arguments.<br>Any arguments specified on the command line are given to utility upon each invocation, followed by some number of the arguments read from<br>the standard input of xargs.  This is repeated until standard input is exhausted.</p>\n<p>Spaces, tabs and newlines may be embedded in arguments using single (<code> &#39; &#39;&#39;) or double (</code>“‘’) quotes or backslashes (&#96;&#96;&#39;‘).  Single<br>quotes escape all non-single quote characters, excluding newlines, up to the matching single quote.  Double quotes escape all non-double<br>quote characters, excluding newlines, up to the matching double quote.  Any single character, including newlines, may be escaped by a<br>backslash.</p>\n<p>简单来说,就是xargs是从标准输入读取内容,作为<code>xrags</code>命令后面跟的命令的参数</p>\n<h2 id=\"举个例子\"><a href=\"#举个例子\" class=\"headerlink\" title=\"举个例子\"></a>举个例子</h2><h3 id=\"管道操作符-1\"><a href=\"#管道操作符-1\" class=\"headerlink\" title=\"管道操作符\"></a>管道操作符</h3><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">echo</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">hello \\n world</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">grep</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello</span></span></code></pre></div><p><code>echo &quot;hello world&quot;</code> 会将<code>hello world</code>字符串输出到<strong>标准输出</strong>,然后通过管道操作符作为 <code>grep hello</code>这条命令的<strong>标准输入</strong></p>\n<p>上面的命令相当于下面的命令</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">grep</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello</span><span style=\"color: #F8F8F2\">      </span><span style=\"color: #6272A4\"># 执行完按回车</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">hello</span><span style=\"color: #F8F8F2\">       </span><span style=\"color: #6272A4\"># 输入hello world</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">hello</span><span style=\"color: #F8F8F2\">      </span><span style=\"color: #6272A4\"># 打印hello</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">world</span><span style=\"color: #F8F8F2\">   </span><span style=\"color: #6272A4\"># 输入world 什么也不打印</span></span></code></pre></div><h3 id=\"xargs-1\"><a href=\"#xargs-1\" class=\"headerlink\" title=\"xargs\"></a>xargs</h3><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">xargs</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">ls</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #6272A4\">#按回车</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">/usr</span><span style=\"color: #F8F8F2\">     </span><span style=\"color: #6272A4\">#按ctrl-d 会打印/usr目录下的所有文件</span></span></code></pre></div><p><code>ctrl-d</code>相当于向<code>shell</code>输入了一个<code>eof</code>,表示输入完成</p>\n<h3 id=\"组合\"><a href=\"#组合\" class=\"headerlink\" title=\"组合\"></a>组合</h3><p>这两个命令一般是组合使用</p>\n<p>比如:</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">cat</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">a.txt</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">xargs</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">mkdir</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-p</span><span style=\"color: #F8F8F2\"> </span></span></code></pre></div><p>这条命令的含义是,将a.ext文件中的内容作为文件夹名,新建一个文件夹<br>其中,<code>cat a.txt</code>命令是将<code>a.txt</code>中的内容输出到<strong>标准输出</strong>,然后通过管道操作符作为<code>xargs mkdir -p</code>这个命令的标准输入,<code>xargs</code>将前面传过来的标准输入作为<code>mkdir -p</code> 这条命令的<strong>参数</strong></p>\n<h1 id=\"标准输入-标准输出-参数\"><a href=\"#标准输入-标准输出-参数\" class=\"headerlink\" title=\"标准输入&#x2F;标准输出&#x2F;参数\"></a>标准输入&#x2F;标准输出&#x2F;参数</h1><p>在linux中,默认情况下</p>\n<p>标准输入是指键盘<br>标准输出是指屏幕<br>参数就是命令后面跟着的内容</p>\n<h2 id=\"举个例子-1\"><a href=\"#举个例子-1\" class=\"headerlink\" title=\"举个例子\"></a>举个例子</h2><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">$</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">cat</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello-world.txt</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #6272A4\">#  hello-world.txt 是参数</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">$</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">cat</span><span style=\"color: #F8F8F2\">   </span><span style=\"color: #6272A4\">#执行cat命令后回车</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">$</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\">#输入hello   这里的hello就是标准输入</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">$</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">hello</span><span style=\"color: #F8F8F2\">  </span><span style=\"color: #6272A4\"># 命令行打印hello  这里打印的hello就是找女友输入</span></span></code></pre></div>"},{"title":"jyy-operate-system","cover":"https://source.unsplash.com/1200x628","date":"2023-10-21T05:55:24.000Z","abstracts":null,"_content":"\n\n# 什么是程序\n\n## 源码视角 \n\n程序其实也是状态机(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=16m28s]\n函数调用就是状态机状态的变化,其实就是栈帧的变化(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=23m:49s]\n\n## 二进制视角\n\n只进行计算的程序是无法停止的(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=43m44s]\n所以需要`syscall`来停止程序(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=46m12s]\n操作系统只是操作了程序当前的程序内存的状态(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=49m47s]\n","source":"_drafts/jyy-operate-system.md","raw":"---\ntitle: jyy-operate-system\ntags:\n  - null\ncategories:\n  - null\ncover: https://source.unsplash.com/1200x628\ndate: 2023-10-21 13:55:24\nabstracts:\n---\n\n\n# 什么是程序\n\n## 源码视角 \n\n程序其实也是状态机(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=16m28s]\n函数调用就是状态机状态的变化,其实就是栈帧的变化(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=23m:49s]\n\n## 二进制视角\n\n只进行计算的程序是无法停止的(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=43m44s]\n所以需要`syscall`来停止程序(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=46m12s]\n操作系统只是操作了程序当前的程序内存的状态(🚩)[https://www.bilibili.com/video/BV12L4y1379V?t=49m47s]\n","slug":"jyy-operate-system","published":0,"updated":"2023-10-24T09:12:49.234Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clofgk1lq0001s67qag752do0","content":"<h1 id=\"什么是程序\"><a href=\"#什么是程序\" class=\"headerlink\" title=\"什么是程序\"></a>什么是程序</h1><h2 id=\"源码视角\"><a href=\"#源码视角\" class=\"headerlink\" title=\"源码视角\"></a>源码视角</h2><p>程序其实也是状态机(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=16m28s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=16m28s]</a><br>函数调用就是状态机状态的变化,其实就是栈帧的变化(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=23m:49s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=23m:49s]</a></p>\n<h2 id=\"二进制视角\"><a href=\"#二进制视角\" class=\"headerlink\" title=\"二进制视角\"></a>二进制视角</h2><p>只进行计算的程序是无法停止的(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=43m44s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=43m44s]</a><br>所以需要<code>syscall</code>来停止程序(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=46m12s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=46m12s]</a><br>操作系统只是操作了程序当前的程序内存的状态(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=49m47s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=49m47s]</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"什么是程序\"><a href=\"#什么是程序\" class=\"headerlink\" title=\"什么是程序\"></a>什么是程序</h1><h2 id=\"源码视角\"><a href=\"#源码视角\" class=\"headerlink\" title=\"源码视角\"></a>源码视角</h2><p>程序其实也是状态机(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=16m28s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=16m28s]</a><br>函数调用就是状态机状态的变化,其实就是栈帧的变化(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=23m:49s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=23m:49s]</a></p>\n<h2 id=\"二进制视角\"><a href=\"#二进制视角\" class=\"headerlink\" title=\"二进制视角\"></a>二进制视角</h2><p>只进行计算的程序是无法停止的(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=43m44s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=43m44s]</a><br>所以需要<code>syscall</code>来停止程序(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=46m12s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=46m12s]</a><br>操作系统只是操作了程序当前的程序内存的状态(🚩)[<a href=\"https://www.bilibili.com/video/BV12L4y1379V?t=49m47s%5D\">https://www.bilibili.com/video/BV12L4y1379V?t=49m47s]</a></p>\n"},{"title":"neovim配置formatters","cover":"https://source.unsplash.com/gray-laptop-computer-turned-on-EaB4Ml7C7fE/1200x628","date":"2023-11-01T08:05:14.000Z","abstracts":"neovim配置formatters","_content":"\n最近再搞`vue3`,使用了[element plus admin](https://element-plus-admin.cn/)这个模版库,没想到一直报错\n后来经过排查发现是这个模板库使用了[prettier](https://prettier.io/)这位`lint`的配置项,简单来说就是如果不符合他的格式就会报错,\n而我的`neovim`是使用的`volar`这个`lsp`作为格式化话的后端,想要保存自动安装`prettier`的格式格式化,需要额外加一些配置\n\n本来是想打算用[null-ls](https://github.com/jose-elias-alvarez/null-ls.nvim),因为更符合哲学的,其实就是将一些`formatter`作为`neovim`原生的`lsp`inject进去\n不过这个项目目前停更了,而且我也只是想保存的时候格式化就行了,所以就选择了另一个插件[formatter.nvim](https://github.com/mhartington/formatter.nvim)\n\n\n# 安装\n\n\n## 安装prettier\n\n在`mason`中找到`prettier`安装就行\n不过这个地方比较有意思,`mason`其实是安装了`prettier`的,按时我在终端中缺无法使用,后来发现`mason`安装的工具其实是在`~/.local/share/nvim/mason/bin/`里面,然后在放到`neovim`内置的环境变量中是,在`neovim`的命令模式执行`:!env`就可以看到\n\n## 安装formatter.nvim\n\n```lua\n    {\n            \"mhartington/formatter.nvim\",\n            name = \"formatter\",\n                event = \"BufEnter\",\n                enabled = true,\n                # 这个配置一定要写到config选项中,不然会报错\n                config = function(LazyPlugin,opts)\n                local opts = {\n                    logging = true,\n                    log_level = vim.log.levels.WARN,\n                    filetype = {\n                        vue = {\n                            require(\"formatter.filetypes.vue\").prettier(),\n                            _\n                            }\n                    }\n                }\n                require(\"formatter\").setup(opts)\n            end\n        }\n\n```\n\n这里需要注意的点是\n1. formatter并没用给默认的格式化配置,所以没中文件都要配置\n2. 配置想要写到`lazyvim`的`config`选项中,不然会提示找不到`formatter.filetypes.vue`\n\n\n# 保存自动格式化\n\n```lua\nvim.api.nvim_create_autocmd({\"BufWritePost\"},{pattern = {\"*\"},command = \"FormatWrite\"})\n\n```\n\n# 原理\n\n`formatter.nvim`相当于一个接口,然后自己配置格式化命令,当执行格式化命令时,会调用你配置的格式化命令,如果不配置就是使用默认的,想上面的`vue`执行格式化的时候其实就是在执行默认的格式化,约等于下面的伪代码:\n\n```shell\nprettier --stdin-filepath %\n```\n","source":"_posts/neovim-config-formatter.md","raw":"---\ntitle: neovim配置formatters\ntags:\n  - neovim\ncategories:\n  - neovim奇技淫巧\ncover: https://source.unsplash.com/gray-laptop-computer-turned-on-EaB4Ml7C7fE/1200x628\ndate: 2023-11-01 16:05:14\nabstracts: neovim配置formatters\n---\n\n最近再搞`vue3`,使用了[element plus admin](https://element-plus-admin.cn/)这个模版库,没想到一直报错\n后来经过排查发现是这个模板库使用了[prettier](https://prettier.io/)这位`lint`的配置项,简单来说就是如果不符合他的格式就会报错,\n而我的`neovim`是使用的`volar`这个`lsp`作为格式化话的后端,想要保存自动安装`prettier`的格式格式化,需要额外加一些配置\n\n本来是想打算用[null-ls](https://github.com/jose-elias-alvarez/null-ls.nvim),因为更符合哲学的,其实就是将一些`formatter`作为`neovim`原生的`lsp`inject进去\n不过这个项目目前停更了,而且我也只是想保存的时候格式化就行了,所以就选择了另一个插件[formatter.nvim](https://github.com/mhartington/formatter.nvim)\n\n\n# 安装\n\n\n## 安装prettier\n\n在`mason`中找到`prettier`安装就行\n不过这个地方比较有意思,`mason`其实是安装了`prettier`的,按时我在终端中缺无法使用,后来发现`mason`安装的工具其实是在`~/.local/share/nvim/mason/bin/`里面,然后在放到`neovim`内置的环境变量中是,在`neovim`的命令模式执行`:!env`就可以看到\n\n## 安装formatter.nvim\n\n```lua\n    {\n            \"mhartington/formatter.nvim\",\n            name = \"formatter\",\n                event = \"BufEnter\",\n                enabled = true,\n                # 这个配置一定要写到config选项中,不然会报错\n                config = function(LazyPlugin,opts)\n                local opts = {\n                    logging = true,\n                    log_level = vim.log.levels.WARN,\n                    filetype = {\n                        vue = {\n                            require(\"formatter.filetypes.vue\").prettier(),\n                            _\n                            }\n                    }\n                }\n                require(\"formatter\").setup(opts)\n            end\n        }\n\n```\n\n这里需要注意的点是\n1. formatter并没用给默认的格式化配置,所以没中文件都要配置\n2. 配置想要写到`lazyvim`的`config`选项中,不然会提示找不到`formatter.filetypes.vue`\n\n\n# 保存自动格式化\n\n```lua\nvim.api.nvim_create_autocmd({\"BufWritePost\"},{pattern = {\"*\"},command = \"FormatWrite\"})\n\n```\n\n# 原理\n\n`formatter.nvim`相当于一个接口,然后自己配置格式化命令,当执行格式化命令时,会调用你配置的格式化命令,如果不配置就是使用默认的,想上面的`vue`执行格式化的时候其实就是在执行默认的格式化,约等于下面的伪代码:\n\n```shell\nprettier --stdin-filepath %\n```\n","slug":"neovim-config-formatter","published":1,"updated":"2023-11-01T08:27:31.037Z","_id":"clofhtz9b00009p7q848z0eo4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近再搞<code>vue3</code>,使用了<a href=\"https://element-plus-admin.cn/\">element plus admin</a>这个模版库,没想到一直报错<br>后来经过排查发现是这个模板库使用了<a href=\"https://prettier.io/\">prettier</a>这位<code>lint</code>的配置项,简单来说就是如果不符合他的格式就会报错,<br>而我的<code>neovim</code>是使用的<code>volar</code>这个<code>lsp</code>作为格式化话的后端,想要保存自动安装<code>prettier</code>的格式格式化,需要额外加一些配置</p>\n<p>本来是想打算用<a href=\"https://github.com/jose-elias-alvarez/null-ls.nvim\">null-ls</a>,因为更符合哲学的,其实就是将一些<code>formatter</code>作为<code>neovim</code>原生的<code>lsp</code>inject进去<br>不过这个项目目前停更了,而且我也只是想保存的时候格式化就行了,所以就选择了另一个插件<a href=\"https://github.com/mhartington/formatter.nvim\">formatter.nvim</a></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"安装prettier\"><a href=\"#安装prettier\" class=\"headerlink\" title=\"安装prettier\"></a>安装prettier</h2><p>在<code>mason</code>中找到<code>prettier</code>安装就行<br>不过这个地方比较有意思,<code>mason</code>其实是安装了<code>prettier</code>的,按时我在终端中缺无法使用,后来发现<code>mason</code>安装的工具其实是在<code>~/.local/share/nvim/mason/bin/</code>里面,然后在放到<code>neovim</code>内置的环境变量中是,在<code>neovim</code>的命令模式执行<code>:!env</code>就可以看到</p>\n<h2 id=\"安装formatter-nvim\"><a href=\"#安装formatter-nvim\" class=\"headerlink\" title=\"安装formatter.nvim\"></a>安装formatter.nvim</h2><div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">mhartington/formatter.nvim</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            name </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">formatter</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                event </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">BufEnter</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                enabled </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">#</span><span style=\"color: #F8F8F2\"> 这个配置一定要写到config选项中,不然会报错</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #50FA7B\">config</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FFB86C; font-style: italic\">LazyPlugin</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #FFB86C; font-style: italic\">opts</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> opts </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    logging </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    log_level </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> vim.log.levels.WARN,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    filetype </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                        vue </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                            </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">formatter.filetypes.vue</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">prettier</span><span style=\"color: #F8F8F2\">(),</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                            _</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">formatter</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">setup</span><span style=\"color: #F8F8F2\">(opts)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>这里需要注意的点是</p>\n<ol>\n<li>formatter并没用给默认的格式化配置,所以没中文件都要配置</li>\n<li>配置想要写到<code>lazyvim</code>的<code>config</code>选项中,不然会提示找不到<code>formatter.filetypes.vue</code></li>\n</ol>\n<h1 id=\"保存自动格式化\"><a href=\"#保存自动格式化\" class=\"headerlink\" title=\"保存自动格式化\"></a>保存自动格式化</h1><div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">vim.api.</span><span style=\"color: #50FA7B\">nvim_create_autocmd</span><span style=\"color: #F8F8F2\">(&#123;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">BufWritePost</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">&#125;,&#123;pattern </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">*</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">&#125;,command </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">FormatWrite</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"></span></code></pre></div><h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p><code>formatter.nvim</code>相当于一个接口,然后自己配置格式化命令,当执行格式化命令时,会调用你配置的格式化命令,如果不配置就是使用默认的,想上面的<code>vue</code>执行格式化的时候其实就是在执行默认的格式化,约等于下面的伪代码:</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">prettier</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">--stdin-filepath</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">%</span></span></code></pre></div>","site":{"data":{}},"excerpt":"","more":"<p>最近再搞<code>vue3</code>,使用了<a href=\"https://element-plus-admin.cn/\">element plus admin</a>这个模版库,没想到一直报错<br>后来经过排查发现是这个模板库使用了<a href=\"https://prettier.io/\">prettier</a>这位<code>lint</code>的配置项,简单来说就是如果不符合他的格式就会报错,<br>而我的<code>neovim</code>是使用的<code>volar</code>这个<code>lsp</code>作为格式化话的后端,想要保存自动安装<code>prettier</code>的格式格式化,需要额外加一些配置</p>\n<p>本来是想打算用<a href=\"https://github.com/jose-elias-alvarez/null-ls.nvim\">null-ls</a>,因为更符合哲学的,其实就是将一些<code>formatter</code>作为<code>neovim</code>原生的<code>lsp</code>inject进去<br>不过这个项目目前停更了,而且我也只是想保存的时候格式化就行了,所以就选择了另一个插件<a href=\"https://github.com/mhartington/formatter.nvim\">formatter.nvim</a></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"安装prettier\"><a href=\"#安装prettier\" class=\"headerlink\" title=\"安装prettier\"></a>安装prettier</h2><p>在<code>mason</code>中找到<code>prettier</code>安装就行<br>不过这个地方比较有意思,<code>mason</code>其实是安装了<code>prettier</code>的,按时我在终端中缺无法使用,后来发现<code>mason</code>安装的工具其实是在<code>~/.local/share/nvim/mason/bin/</code>里面,然后在放到<code>neovim</code>内置的环境变量中是,在<code>neovim</code>的命令模式执行<code>:!env</code>就可以看到</p>\n<h2 id=\"安装formatter-nvim\"><a href=\"#安装formatter-nvim\" class=\"headerlink\" title=\"安装formatter.nvim\"></a>安装formatter.nvim</h2><div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">    &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">mhartington/formatter.nvim</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            name </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">formatter</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                event </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">BufEnter</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                enabled </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">#</span><span style=\"color: #F8F8F2\"> 这个配置一定要写到config选项中,不然会报错</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #50FA7B\">config</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">function</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FFB86C; font-style: italic\">LazyPlugin</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #FFB86C; font-style: italic\">opts</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">local</span><span style=\"color: #F8F8F2\"> opts </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    logging </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    log_level </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> vim.log.levels.WARN,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    filetype </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                        vue </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                            </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">formatter.filetypes.vue</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">prettier</span><span style=\"color: #F8F8F2\">(),</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                            _</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #8BE9FD\">require</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">formatter</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">setup</span><span style=\"color: #F8F8F2\">(opts)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">end</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>这里需要注意的点是</p>\n<ol>\n<li>formatter并没用给默认的格式化配置,所以没中文件都要配置</li>\n<li>配置想要写到<code>lazyvim</code>的<code>config</code>选项中,不然会提示找不到<code>formatter.filetypes.vue</code></li>\n</ol>\n<h1 id=\"保存自动格式化\"><a href=\"#保存自动格式化\" class=\"headerlink\" title=\"保存自动格式化\"></a>保存自动格式化</h1><div class=\"language-lua\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">lua</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">vim.api.</span><span style=\"color: #50FA7B\">nvim_create_autocmd</span><span style=\"color: #F8F8F2\">(&#123;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">BufWritePost</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">&#125;,&#123;pattern </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> &#123;</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">*</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">&#125;,command </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">FormatWrite</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\">&#125;)</span></span>\n<span class=\"line\"></span></code></pre></div><h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p><code>formatter.nvim</code>相当于一个接口,然后自己配置格式化命令,当执行格式化命令时,会调用你配置的格式化命令,如果不配置就是使用默认的,想上面的<code>vue</code>执行格式化的时候其实就是在执行默认的格式化,约等于下面的伪代码:</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">prettier</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">--stdin-filepath</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">%</span></span></code></pre></div>"},{"title":"gradle将spring-boot和vue打入一个jar包","cover":"https://source.unsplash.com/1200x628","date":"2023-11-11T07:23:43.000Z","abstracts":"使用gradle将spring-boot和vue打入一个jar包","_content":"\n之前用`maven`搞过将`spring-boot`和`vue`打成一个jar包,现在的项目,我使用了`gralde`,又是同样的需求,使用`gradle`的`composite`似乎更优雅一些.\n\n\n# 项目结构\n\n\n```bash\n.\n├── build.gradle.kts\n├── settings.gradle.kts\n├── app #spring-boot 目录\n│   ├── build.gradle.kts\n│   ├── settings.gradle.kts\n├── web #vue目录\n│   ├── build.gradle.kts\n│   ├── settings.gradle.kts\n\n```\n# 结构说明\n\n`app`和`web`分别为`spring-boot`和`vue`项目,就正常写就行,唯一不同的就是,`vue`项目里面添加一个`gradle`配置文件,\n\n# 配置文件说明\n\n需要改动的地方就只有`web`和最外面的项目的`gradle`的配置文件需要改动\n\n## web\n\n其中`web`的`build.gradle.kts`内容如下:\n\n```kotlin\n\nplugins{\n        base\n}\n\ntasks{\n        register<Exec>(\"build-dev\"){\n            workingDir(\"./\")\n            commandLine(\"pnpm\",\"run\",\"build:dev\")\n        }\n}\n\n```\n就是添加了一个打包任务\n\n## 根目录\n\n根目录的`gradle`配置文件需要调整的地方比较多\n\n\n`setting.gradle.kts`:\n\n\n```kotlin\n\nrootProject.name = \"example\"\n\n// 这里很重要,使用includeBuild完成组合构建\nincludeBuild(\"./app\")\nincludeBuild(\"./web\")\n\n```\n\n`build.gradle.kts`:\n\n\n```kotlin\nplugins {\n        base\n}\n\ntasks{\n    register(\"build-all\"){\n        dependsOn(gradle.includedBuild(\"app\").task(\":classes\"))\n        dependsOn(gradle.includedBuild(\"web\").task(\":build-dev\"))\n    }\n    register<Copy>(\"copy-static\"){\n        dependsOn(\"build-all\")\n        // gradle没有提供通过includeBuild直接获取build目录的api,只能这样写死\n        val webDistPath = gradle.includedBuild(\"web\").projectDir.getPath() + \"/dist-dev\"\n        val appClassesPath = gradle.includedBuild(\"app\").projectDir.getPath() + \"/build/resources/main/static\"\n        from(webDistPath){\n                include(\"*\")\n        }\n        into(appClassesPath)\n    }\n    register(\"build-jar\"){\n        dependsOn(\"copy-static\")\n        dependsOn(gradle.includedBuild(\"app\").task(\":jar\"))\n    }\n}\n```\n\n这样执行`gradle :build-jar`,就会生成一个带有`vue`打包后的`dist`目录的`jar`包\n","source":"_posts/gradle-spring-boot-vue-one-jar.md","raw":"---\ntitle: gradle将spring-boot和vue打入一个jar包\ntags:\n  - gradle\n  - spring-boot\ncategories:\n  - gradle\ncover: https://source.unsplash.com/1200x628\ndate: 2023-11-11 15:23:43\nabstracts: 使用gradle将spring-boot和vue打入一个jar包\n---\n\n之前用`maven`搞过将`spring-boot`和`vue`打成一个jar包,现在的项目,我使用了`gralde`,又是同样的需求,使用`gradle`的`composite`似乎更优雅一些.\n\n\n# 项目结构\n\n\n```bash\n.\n├── build.gradle.kts\n├── settings.gradle.kts\n├── app #spring-boot 目录\n│   ├── build.gradle.kts\n│   ├── settings.gradle.kts\n├── web #vue目录\n│   ├── build.gradle.kts\n│   ├── settings.gradle.kts\n\n```\n# 结构说明\n\n`app`和`web`分别为`spring-boot`和`vue`项目,就正常写就行,唯一不同的就是,`vue`项目里面添加一个`gradle`配置文件,\n\n# 配置文件说明\n\n需要改动的地方就只有`web`和最外面的项目的`gradle`的配置文件需要改动\n\n## web\n\n其中`web`的`build.gradle.kts`内容如下:\n\n```kotlin\n\nplugins{\n        base\n}\n\ntasks{\n        register<Exec>(\"build-dev\"){\n            workingDir(\"./\")\n            commandLine(\"pnpm\",\"run\",\"build:dev\")\n        }\n}\n\n```\n就是添加了一个打包任务\n\n## 根目录\n\n根目录的`gradle`配置文件需要调整的地方比较多\n\n\n`setting.gradle.kts`:\n\n\n```kotlin\n\nrootProject.name = \"example\"\n\n// 这里很重要,使用includeBuild完成组合构建\nincludeBuild(\"./app\")\nincludeBuild(\"./web\")\n\n```\n\n`build.gradle.kts`:\n\n\n```kotlin\nplugins {\n        base\n}\n\ntasks{\n    register(\"build-all\"){\n        dependsOn(gradle.includedBuild(\"app\").task(\":classes\"))\n        dependsOn(gradle.includedBuild(\"web\").task(\":build-dev\"))\n    }\n    register<Copy>(\"copy-static\"){\n        dependsOn(\"build-all\")\n        // gradle没有提供通过includeBuild直接获取build目录的api,只能这样写死\n        val webDistPath = gradle.includedBuild(\"web\").projectDir.getPath() + \"/dist-dev\"\n        val appClassesPath = gradle.includedBuild(\"app\").projectDir.getPath() + \"/build/resources/main/static\"\n        from(webDistPath){\n                include(\"*\")\n        }\n        into(appClassesPath)\n    }\n    register(\"build-jar\"){\n        dependsOn(\"copy-static\")\n        dependsOn(gradle.includedBuild(\"app\").task(\":jar\"))\n    }\n}\n```\n\n这样执行`gradle :build-jar`,就会生成一个带有`vue`打包后的`dist`目录的`jar`包\n","slug":"gradle-spring-boot-vue-one-jar","published":1,"updated":"2023-11-11T07:48:48.040Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clotqwnaw0000tnrrcvhm0b5c","content":"<p>之前用<code>maven</code>搞过将<code>spring-boot</code>和<code>vue</code>打成一个jar包,现在的项目,我使用了<code>gralde</code>,又是同样的需求,使用<code>gradle</code>的<code>composite</code>似乎更优雅一些.</p>\n<h1 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h1><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">.</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">build.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">settings.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">app</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #6272A4\">#spring-boot 目录</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">│  </span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">build.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">│  </span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">settings.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">web</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #6272A4\">#vue目录</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">│  </span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">build.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">│  </span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">settings.gradle.kts</span></span>\n<span class=\"line\"></span></code></pre></div><h1 id=\"结构说明\"><a href=\"#结构说明\" class=\"headerlink\" title=\"结构说明\"></a>结构说明</h1><p><code>app</code>和<code>web</code>分别为<code>spring-boot</code>和<code>vue</code>项目,就正常写就行,唯一不同的就是,<code>vue</code>项目里面添加一个<code>gradle</code>配置文件,</p>\n<h1 id=\"配置文件说明\"><a href=\"#配置文件说明\" class=\"headerlink\" title=\"配置文件说明\"></a>配置文件说明</h1><p>需要改动的地方就只有<code>web</code>和最外面的项目的<code>gradle</code>的配置文件需要改动</p>\n<h2 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h2><p>其中<code>web</code>的<code>build.gradle.kts</code>内容如下:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">plugins</span><span style=\"color: #F8F8F2\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        base</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">tasks</span><span style=\"color: #F8F8F2\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Exec</span><span style=\"color: #F8F8F2\">&gt;(</span><span style=\"color: #F1FA8C\">&quot;build-dev&quot;</span><span style=\"color: #F8F8F2\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #50FA7B\">workingDir</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;./&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #50FA7B\">commandLine</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;pnpm&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #F1FA8C\">&quot;run&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #F1FA8C\">&quot;build:dev&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>就是添加了一个打包任务</p>\n<h2 id=\"根目录\"><a href=\"#根目录\" class=\"headerlink\" title=\"根目录\"></a>根目录</h2><p>根目录的<code>gradle</code>配置文件需要调整的地方比较多</p>\n<p><code>setting.gradle.kts</code>:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">rootProject.name </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;example&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 这里很重要,使用includeBuild完成组合构建</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">includeBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;./app&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">includeBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;./web&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span></code></pre></div><p><code>build.gradle.kts</code>:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">plugins</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        base</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">tasks</span><span style=\"color: #F8F8F2\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;build-all&quot;</span><span style=\"color: #F8F8F2\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;app&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">task</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;:classes&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;web&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">task</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;:build-dev&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Copy</span><span style=\"color: #F8F8F2\">&gt;(</span><span style=\"color: #F1FA8C\">&quot;copy-static&quot;</span><span style=\"color: #F8F8F2\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;build-all&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\">// gradle没有提供通过includeBuild直接获取build目录的api,只能这样写死</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">val</span><span style=\"color: #F8F8F2\"> webDistPath </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;web&quot;</span><span style=\"color: #F8F8F2\">).projectDir.</span><span style=\"color: #50FA7B\">getPath</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;/dist-dev&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">val</span><span style=\"color: #F8F8F2\"> appClassesPath </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;app&quot;</span><span style=\"color: #F8F8F2\">).projectDir.</span><span style=\"color: #50FA7B\">getPath</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;/build/resources/main/static&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">from</span><span style=\"color: #F8F8F2\">(webDistPath)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #50FA7B\">include</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;*&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">into</span><span style=\"color: #F8F8F2\">(appClassesPath)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;build-jar&quot;</span><span style=\"color: #F8F8F2\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;copy-static&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;app&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">task</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;:jar&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span></code></pre></div><p>这样执行<code>gradle :build-jar</code>,就会生成一个带有<code>vue</code>打包后的<code>dist</code>目录的<code>jar</code>包</p>\n","site":{"data":{}},"excerpt":"","more":"<p>之前用<code>maven</code>搞过将<code>spring-boot</code>和<code>vue</code>打成一个jar包,现在的项目,我使用了<code>gralde</code>,又是同样的需求,使用<code>gradle</code>的<code>composite</code>似乎更优雅一些.</p>\n<h1 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h1><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD\">.</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">build.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">settings.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">app</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #6272A4\">#spring-boot 目录</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">│  </span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">build.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">│  </span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">settings.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">web</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #6272A4\">#vue目录</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">│  </span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">build.gradle.kts</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">│  </span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">├──</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">settings.gradle.kts</span></span>\n<span class=\"line\"></span></code></pre></div><h1 id=\"结构说明\"><a href=\"#结构说明\" class=\"headerlink\" title=\"结构说明\"></a>结构说明</h1><p><code>app</code>和<code>web</code>分别为<code>spring-boot</code>和<code>vue</code>项目,就正常写就行,唯一不同的就是,<code>vue</code>项目里面添加一个<code>gradle</code>配置文件,</p>\n<h1 id=\"配置文件说明\"><a href=\"#配置文件说明\" class=\"headerlink\" title=\"配置文件说明\"></a>配置文件说明</h1><p>需要改动的地方就只有<code>web</code>和最外面的项目的<code>gradle</code>的配置文件需要改动</p>\n<h2 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h2><p>其中<code>web</code>的<code>build.gradle.kts</code>内容如下:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">plugins</span><span style=\"color: #F8F8F2\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        base</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">tasks</span><span style=\"color: #F8F8F2\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Exec</span><span style=\"color: #F8F8F2\">&gt;(</span><span style=\"color: #F1FA8C\">&quot;build-dev&quot;</span><span style=\"color: #F8F8F2\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #50FA7B\">workingDir</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;./&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #50FA7B\">commandLine</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;pnpm&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #F1FA8C\">&quot;run&quot;</span><span style=\"color: #F8F8F2\">,</span><span style=\"color: #F1FA8C\">&quot;build:dev&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>就是添加了一个打包任务</p>\n<h2 id=\"根目录\"><a href=\"#根目录\" class=\"headerlink\" title=\"根目录\"></a>根目录</h2><p>根目录的<code>gradle</code>配置文件需要调整的地方比较多</p>\n<p><code>setting.gradle.kts</code>:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">rootProject.name </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;example&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 这里很重要,使用includeBuild完成组合构建</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">includeBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;./app&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">includeBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;./web&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span></code></pre></div><p><code>build.gradle.kts</code>:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">plugins</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        base</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">tasks</span><span style=\"color: #F8F8F2\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;build-all&quot;</span><span style=\"color: #F8F8F2\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;app&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">task</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;:classes&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;web&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">task</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;:build-dev&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Copy</span><span style=\"color: #F8F8F2\">&gt;(</span><span style=\"color: #F1FA8C\">&quot;copy-static&quot;</span><span style=\"color: #F8F8F2\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;build-all&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\">// gradle没有提供通过includeBuild直接获取build目录的api,只能这样写死</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">val</span><span style=\"color: #F8F8F2\"> webDistPath </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;web&quot;</span><span style=\"color: #F8F8F2\">).projectDir.</span><span style=\"color: #50FA7B\">getPath</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;/dist-dev&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">val</span><span style=\"color: #F8F8F2\"> appClassesPath </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;app&quot;</span><span style=\"color: #F8F8F2\">).projectDir.</span><span style=\"color: #50FA7B\">getPath</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;/build/resources/main/static&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">from</span><span style=\"color: #F8F8F2\">(webDistPath)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #50FA7B\">include</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;*&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">into</span><span style=\"color: #F8F8F2\">(appClassesPath)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;build-jar&quot;</span><span style=\"color: #F8F8F2\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;copy-static&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(gradle.</span><span style=\"color: #50FA7B\">includedBuild</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;app&quot;</span><span style=\"color: #F8F8F2\">).</span><span style=\"color: #50FA7B\">task</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;:jar&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span></code></pre></div><p>这样执行<code>gradle :build-jar</code>,就会生成一个带有<code>vue</code>打包后的<code>dist</code>目录的<code>jar</code>包</p>\n"},{"title":"gradle spring boot 打包无依赖jar","cover":"https://source.unsplash.com/1200x628","date":"2023-12-22T12:21:39.000Z","abstracts":"gradle将spring boot项目打包成无依赖jar包的轻量级包","_content":"\n\n# 背景\n\n希望`spring-boot`的`jar`包不包含项目的依赖,打包成一个轻量`jar`包,方便部署和快速打包\n\n\n# 方法一:\n\n修改`build.gradle.kts`:\n\n```kotlin\n\ntasks.withType<Jar>{\n    manifest {\n        attributes[\"Main-Class\"] = \"com.io.alyze.AlyzeApplicationKt\"\n        //添加所有依赖的\n        attributes[\"Class-Path\"] =  configurations.runtimeClasspath.get().files.joinToString(\" \") { \"./libs/${it.name}\" }\n    }\n}\ntasks.register<Copy>(\"jar-dependency\") {\n    dependsOn(\"jar\")\n    from(configurations.runtimeClasspath)\n    into(layout.buildDirectory.dir(\"libs/libs/\"))\n}\n\n```\n\n\n这样执行:`./gradlew :jar-dependency` 就会在`build/lib`目录生成一个`xxx-palin.jar`和一个`libs`文件夹\n\n将这两个文件拷贝在一起,以使用`java -jar xxx-plain.jar`直接运行\n\n\n# 方法二\n\n\n修改`build.gradle.kts`:\n\n```kotlin\ntasks.register<Copy>(\"jar-dependency\") {\n    dependsOn(\"jar\")\n    from(configurations.runtimeClasspath)\n    into(layout.buildDirectory.dir(\"libs/libs/\"))\n}\n\n```\n\n\n这样执行:`./gradlew :jar-dependency` 就会在`build/lib`目录生成一个`xxx-palin.jar`和一个`libs`文件夹\n\n将这两个文件拷贝在一起,可以使用`java -cp \"alyze-1.0-plain.jar:libs/*\" your_main_class_name`直接运行\n","source":"_posts/gradle-spring-boot-without-dependency.md","raw":"---\ntitle: gradle spring boot 打包无依赖jar\ntags:\n  - java\n  - gradle\ncategories:\n  - java\ncover: https://source.unsplash.com/1200x628\ndate: 2023-12-22 20:21:39\nabstracts: gradle将spring boot项目打包成无依赖jar包的轻量级包\n---\n\n\n# 背景\n\n希望`spring-boot`的`jar`包不包含项目的依赖,打包成一个轻量`jar`包,方便部署和快速打包\n\n\n# 方法一:\n\n修改`build.gradle.kts`:\n\n```kotlin\n\ntasks.withType<Jar>{\n    manifest {\n        attributes[\"Main-Class\"] = \"com.io.alyze.AlyzeApplicationKt\"\n        //添加所有依赖的\n        attributes[\"Class-Path\"] =  configurations.runtimeClasspath.get().files.joinToString(\" \") { \"./libs/${it.name}\" }\n    }\n}\ntasks.register<Copy>(\"jar-dependency\") {\n    dependsOn(\"jar\")\n    from(configurations.runtimeClasspath)\n    into(layout.buildDirectory.dir(\"libs/libs/\"))\n}\n\n```\n\n\n这样执行:`./gradlew :jar-dependency` 就会在`build/lib`目录生成一个`xxx-palin.jar`和一个`libs`文件夹\n\n将这两个文件拷贝在一起,以使用`java -jar xxx-plain.jar`直接运行\n\n\n# 方法二\n\n\n修改`build.gradle.kts`:\n\n```kotlin\ntasks.register<Copy>(\"jar-dependency\") {\n    dependsOn(\"jar\")\n    from(configurations.runtimeClasspath)\n    into(layout.buildDirectory.dir(\"libs/libs/\"))\n}\n\n```\n\n\n这样执行:`./gradlew :jar-dependency` 就会在`build/lib`目录生成一个`xxx-palin.jar`和一个`libs`文件夹\n\n将这两个文件拷贝在一起,可以使用`java -cp \"alyze-1.0-plain.jar:libs/*\" your_main_class_name`直接运行\n","slug":"gradle-spring-boot-without-dependency","published":1,"updated":"2023-12-22T12:31:48.368Z","_id":"clqgm11we0000hu7q2um1fjh1","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>希望<code>spring-boot</code>的<code>jar</code>包不包含项目的依赖,打包成一个轻量<code>jar</code>包,方便部署和快速打包</p>\n<h1 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一:\"></a>方法一:</h1><p>修改<code>build.gradle.kts</code>:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">tasks.</span><span style=\"color: #50FA7B\">withType</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Jar</span><span style=\"color: #F8F8F2\">&gt;&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">manifest</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        attributes[</span><span style=\"color: #F1FA8C\">&quot;Main-Class&quot;</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;com.io.alyze.AlyzeApplicationKt&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\">//添加所有依赖的</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        attributes[</span><span style=\"color: #F1FA8C\">&quot;Class-Path&quot;</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">  configurations.runtimeClasspath.</span><span style=\"color: #50FA7B\">get</span><span style=\"color: #F8F8F2\">().files.</span><span style=\"color: #50FA7B\">joinToString</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot; &quot;</span><span style=\"color: #F8F8F2\">) &#123; </span><span style=\"color: #F1FA8C\">&quot;./libs/</span><span style=\"color: #FF79C6\">$&#123;</span><span style=\"color: #F1FA8C\">it.name</span><span style=\"color: #FF79C6\">&#125;</span><span style=\"color: #F1FA8C\">&quot;</span><span style=\"color: #F8F8F2\"> &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">tasks.</span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Copy</span><span style=\"color: #F8F8F2\">&gt;(</span><span style=\"color: #F1FA8C\">&quot;jar-dependency&quot;</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;jar&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">from</span><span style=\"color: #F8F8F2\">(configurations.runtimeClasspath)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">into</span><span style=\"color: #F8F8F2\">(layout.buildDirectory.</span><span style=\"color: #50FA7B\">dir</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;libs/libs/&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>这样执行:<code>./gradlew :jar-dependency</code> 就会在<code>build/lib</code>目录生成一个<code>xxx-palin.jar</code>和一个<code>libs</code>文件夹</p>\n<p>将这两个文件拷贝在一起,以使用<code>java -jar xxx-plain.jar</code>直接运行</p>\n<h1 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h1><p>修改<code>build.gradle.kts</code>:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">tasks.</span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Copy</span><span style=\"color: #F8F8F2\">&gt;(</span><span style=\"color: #F1FA8C\">&quot;jar-dependency&quot;</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;jar&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">from</span><span style=\"color: #F8F8F2\">(configurations.runtimeClasspath)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">into</span><span style=\"color: #F8F8F2\">(layout.buildDirectory.</span><span style=\"color: #50FA7B\">dir</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;libs/libs/&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>这样执行:<code>./gradlew :jar-dependency</code> 就会在<code>build/lib</code>目录生成一个<code>xxx-palin.jar</code>和一个<code>libs</code>文件夹</p>\n<p>将这两个文件拷贝在一起,可以使用<code>java -cp &quot;alyze-1.0-plain.jar:libs/*&quot; your_main_class_name</code>直接运行</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>希望<code>spring-boot</code>的<code>jar</code>包不包含项目的依赖,打包成一个轻量<code>jar</code>包,方便部署和快速打包</p>\n<h1 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一:\"></a>方法一:</h1><p>修改<code>build.gradle.kts</code>:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">tasks.</span><span style=\"color: #50FA7B\">withType</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Jar</span><span style=\"color: #F8F8F2\">&gt;&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">manifest</span><span style=\"color: #F8F8F2\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        attributes[</span><span style=\"color: #F1FA8C\">&quot;Main-Class&quot;</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">&quot;com.io.alyze.AlyzeApplicationKt&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #6272A4\">//添加所有依赖的</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        attributes[</span><span style=\"color: #F1FA8C\">&quot;Class-Path&quot;</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">  configurations.runtimeClasspath.</span><span style=\"color: #50FA7B\">get</span><span style=\"color: #F8F8F2\">().files.</span><span style=\"color: #50FA7B\">joinToString</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot; &quot;</span><span style=\"color: #F8F8F2\">) &#123; </span><span style=\"color: #F1FA8C\">&quot;./libs/</span><span style=\"color: #FF79C6\">$&#123;</span><span style=\"color: #F1FA8C\">it.name</span><span style=\"color: #FF79C6\">&#125;</span><span style=\"color: #F1FA8C\">&quot;</span><span style=\"color: #F8F8F2\"> &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">tasks.</span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Copy</span><span style=\"color: #F8F8F2\">&gt;(</span><span style=\"color: #F1FA8C\">&quot;jar-dependency&quot;</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;jar&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">from</span><span style=\"color: #F8F8F2\">(configurations.runtimeClasspath)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">into</span><span style=\"color: #F8F8F2\">(layout.buildDirectory.</span><span style=\"color: #50FA7B\">dir</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;libs/libs/&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>这样执行:<code>./gradlew :jar-dependency</code> 就会在<code>build/lib</code>目录生成一个<code>xxx-palin.jar</code>和一个<code>libs</code>文件夹</p>\n<p>将这两个文件拷贝在一起,以使用<code>java -jar xxx-plain.jar</code>直接运行</p>\n<h1 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h1><p>修改<code>build.gradle.kts</code>:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki dracula\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">tasks.</span><span style=\"color: #50FA7B\">register</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">Copy</span><span style=\"color: #F8F8F2\">&gt;(</span><span style=\"color: #F1FA8C\">&quot;jar-dependency&quot;</span><span style=\"color: #F8F8F2\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">dependsOn</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;jar&quot;</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">from</span><span style=\"color: #F8F8F2\">(configurations.runtimeClasspath)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">into</span><span style=\"color: #F8F8F2\">(layout.buildDirectory.</span><span style=\"color: #50FA7B\">dir</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #F1FA8C\">&quot;libs/libs/&quot;</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>这样执行:<code>./gradlew :jar-dependency</code> 就会在<code>build/lib</code>目录生成一个<code>xxx-palin.jar</code>和一个<code>libs</code>文件夹</p>\n<p>将这两个文件拷贝在一起,可以使用<code>java -cp &quot;alyze-1.0-plain.jar:libs/*&quot; your_main_class_name</code>直接运行</p>\n"}],"PostAsset":[{"_id":"source/_posts/intellij-idea-config-vim/easy-motion.gif","slug":"easy-motion.gif","post":"clmyzfc670004e2rr5al88zlj","modified":0,"renderable":0},{"_id":"source/_posts/intellij-idea-config-vim/track_action_dark.gif","slug":"track_action_dark.gif","post":"clmyzfc670004e2rr5al88zlj","modified":0,"renderable":0},{"_id":"source/_posts/vscode-neovim-plugin/easy-motion.gif","slug":"easy-motion.gif","post":"clmyzfc6c000de2rrgmngbjbd","modified":0,"renderable":0},{"_id":"source/_posts/vscode-neovim-plugin/flash-demo.gif","slug":"flash-demo.gif","post":"clmyzfc6c000de2rrgmngbjbd","modified":0,"renderable":0}],"PostCategory":[{"post_id":"clmyzfc660003e2rre1igbsyq","category_id":"clmyzfc680005e2rrbedl7jco","_id":"clmyzfc6d000ee2rr7im2a17d"},{"post_id":"clmyzfc6c000de2rrgmngbjbd","category_id":"clmyzfc6b000ae2rr3e2k3cin","_id":"clmyzfc6d000he2rrbti7e30j"},{"post_id":"clmyzfc670004e2rr5al88zlj","category_id":"clmyzfc6b000ae2rr3e2k3cin","_id":"clmyzfc6e000ke2rr6757gqjb"},{"post_id":"clmyzfc6a0007e2rr8or68g6l","category_id":"clmyzfc6d000fe2rra409fclv","_id":"clmyzfc6e000ne2rr6ktsae7g"},{"post_id":"clmyzfc6a0008e2rr571i56du","category_id":"clmyzfc6e000ie2rredilgvxc","_id":"clmyzfc6e000qe2rr5cn55avz"},{"post_id":"clmzuhztu0000w0rrge6l6ut2","category_id":"clmzuhzty0001w0rr1jxncxs5","_id":"clmzuhzu20004w0rr0abzd3cq"},{"post_id":"clnucuxmp00004lrrdw340n7h","category_id":"clmyzfc6e000ie2rredilgvxc","_id":"clnucuxmy00044lrren5w56jh"},{"post_id":"clnn4akny0000n7rrbpai9sai","category_id":"clnucuxmv00024lrrflgbcdb6","_id":"clnucuxn000074lrr4igo08uf"},{"post_id":"clmyzfc6b0009e2rr2qiib2qj","category_id":"clnucuxmz00064lrr0w619bd8","_id":"clnucuxn000094lrr2hqtdtgj"},{"post_id":"clnucuxmx00034lrr0nqfcz7y","category_id":"clnucuxn000084lrrcntta7mt","_id":"clnucuxn1000a4lrr2vmk5l2b"},{"post_id":"clofgk1ln0000s67q2uh402a7","category_id":"clofgk1ls0002s67qbp6g044h","_id":"clofgk1lx0005s67q28e1b215"},{"post_id":"clofhtz9b00009p7q848z0eo4","category_id":"clnucuxmv00024lrrflgbcdb6","_id":"clofhtz9d00029p7q4vio3suy"},{"post_id":"clotqwnaw0000tnrrcvhm0b5c","category_id":"clotqwnb00001tnrr2g5eg4h6","_id":"clotqwnb40004tnrr5g39eyvi"},{"post_id":"clqgm11we0000hu7q2um1fjh1","category_id":"clmyzfc6d000fe2rra409fclv","_id":"clqgm11wj0003hu7qanyfho48"}],"PostTag":[{"post_id":"clmyzfc660003e2rre1igbsyq","tag_id":"clmyzfc690006e2rr7pt43bhp","_id":"clmyzfc6c000ce2rr5gxkhcs9"},{"post_id":"clmyzfc670004e2rr5al88zlj","tag_id":"clmyzfc6c000be2rr638acr9l","_id":"clmyzfc6e000le2rrgdb1030z"},{"post_id":"clmyzfc670004e2rr5al88zlj","tag_id":"clmyzfc6d000ge2rrb6xgcjp5","_id":"clmyzfc6e000me2rrczun0htd"},{"post_id":"clmyzfc6a0007e2rr8or68g6l","tag_id":"clmyzfc6e000je2rrceyleowo","_id":"clmyzfc6f000se2rre1jf6u8z"},{"post_id":"clmyzfc6a0007e2rr8or68g6l","tag_id":"clmyzfc6e000pe2rr5tcag2tq","_id":"clmyzfc6f000te2rrg17ycs1h"},{"post_id":"clmyzfc6a0008e2rr571i56du","tag_id":"clmyzfc6f000re2rr8u51aceq","_id":"clmyzfc6g000xe2rr2rme43vn"},{"post_id":"clmyzfc6a0008e2rr571i56du","tag_id":"clmyzfc6d000ge2rrb6xgcjp5","_id":"clmyzfc6g000ye2rrf0s9erax"},{"post_id":"clmyzfc6b0009e2rr2qiib2qj","tag_id":"clmyzfc6g000we2rr0888ea00","_id":"clmyzfc6h0012e2rr1yz47l3g"},{"post_id":"clmyzfc6b0009e2rr2qiib2qj","tag_id":"clmyzfc6g000ze2rr46ro1vtd","_id":"clmyzfc6h0013e2rrgk3s078p"},{"post_id":"clmyzfc6b0009e2rr2qiib2qj","tag_id":"clmyzfc6g0010e2rr8w0gg3ub","_id":"clmyzfc6h0015e2rr3tz588yz"},{"post_id":"clmyzfc6c000de2rrgmngbjbd","tag_id":"clmyzfc6d000ge2rrb6xgcjp5","_id":"clmyzfc6h0016e2rr4q5v9f4g"},{"post_id":"clmyzfc6c000de2rrgmngbjbd","tag_id":"clmyzfc6h0014e2rre6axd0cb","_id":"clmyzfc6h0017e2rr6dbacnce"},{"post_id":"clmzuhztu0000w0rrge6l6ut2","tag_id":"clmzuhzu10002w0rrfp6r1gx5","_id":"clmzuhzu20005w0rre48lfmb4"},{"post_id":"clmzuhztu0000w0rrge6l6ut2","tag_id":"clmzuhzu10003w0rr3fg97t9a","_id":"clmzuhzu20006w0rrfa1ug95c"},{"post_id":"clnn4akny0000n7rrbpai9sai","tag_id":"clnn4ako60002n7rr4hvdbmex","_id":"clnn4ako80003n7rr89oohkpn"},{"post_id":"clnucuxmp00004lrrdw340n7h","tag_id":"clmyzfc6c000be2rr638acr9l","_id":"clnucuxmu00014lrr5h00b8rz"},{"post_id":"clnucuxmx00034lrr0nqfcz7y","tag_id":"clmyzfc6d000ge2rrb6xgcjp5","_id":"clnucuxmz00054lrrfilf5ygu"},{"post_id":"clofgk1ln0000s67q2uh402a7","tag_id":"clofgk1lu0003s67q0y91b63p","_id":"clofgk1lx0004s67q165x74sf"},{"post_id":"clofhtz9b00009p7q848z0eo4","tag_id":"clnn4ako60002n7rr4hvdbmex","_id":"clofhtz9c00019p7qetwldvvg"},{"post_id":"clotqwnaw0000tnrrcvhm0b5c","tag_id":"clotqwnb30002tnrr4vn259oo","_id":"clotqwnb50005tnrrcnc637on"},{"post_id":"clotqwnaw0000tnrrcvhm0b5c","tag_id":"clotqwnb40003tnrr38ezdnhg","_id":"clotqwnb50006tnrrgirabjcj"},{"post_id":"clqgm11we0000hu7q2um1fjh1","tag_id":"clmyzfc6e000je2rrceyleowo","_id":"clqgm11wj0001hu7qb94nc7kz"},{"post_id":"clqgm11we0000hu7q2um1fjh1","tag_id":"clotqwnb30002tnrr4vn259oo","_id":"clqgm11wj0002hu7q5rxvdyae"}],"Tag":[{"name":"hexo","_id":"clmyzfc690006e2rr7pt43bhp"},{"name":"idea","_id":"clmyzfc6c000be2rr638acr9l"},{"name":"vim","_id":"clmyzfc6d000ge2rrb6xgcjp5"},{"name":"java","_id":"clmyzfc6e000je2rrceyleowo"},{"name":"encode","_id":"clmyzfc6e000pe2rr5tcag2tq"},{"name":"macos","_id":"clmyzfc6f000re2rr8u51aceq"},{"name":"terminal","_id":"clmyzfc6g000we2rr0888ea00"},{"name":"linux","_id":"clmyzfc6g000ze2rr46ro1vtd"},{"name":"快捷键","_id":"clmyzfc6g0010e2rr8w0gg3ub"},{"name":"vscode","_id":"clmyzfc6h0014e2rre6axd0cb"},{"name":"asdf","_id":"clmzuhzu10002w0rrfp6r1gx5"},{"name":"asdf manage","_id":"clmzuhzu10003w0rr3fg97t9a"},{"name":"neovim","_id":"clnn4ako60002n7rr4hvdbmex"},{"name":"shell","_id":"clofgk1lu0003s67q0y91b63p"},{"name":"gradle","_id":"clotqwnb30002tnrr4vn259oo"},{"name":"spring-boot","_id":"clotqwnb40003tnrr38ezdnhg"}]}}